{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const editor = useEditor({\n    extensions: [StarterKit],\n    content: post.body\n  });\n  const titleRef = useRef();\n  const tagRef = useRef();\n  const [post, setPost] = useState({\n    title: \"Loading...\",\n    id: \"initial\"\n  });\n  const [serachParam, setSearchParam] = useSearchParams();\n  serachParam.get(\"postId\");\n  const docRef = doc(db, \"posts\", serachParam.get(\"postId\"));\n  getDoc(docRef).then(result => {\n    if (result.exists()) {\n      console.log(\"Document data:\", result.data());\n      setPost(result.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n\n  async function submitPost(title, body, tags) {\n    const data = {\n      body: body,\n      tags: tags,\n      title: title\n    };\n    const collectionRef = collection(db, \"posts\");\n    const docRef = await addDoc(collectionRef, data);\n    console.log(\"The new ID is: \" + docRef.id);\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(titleRef.current.value, editor.getHTML(), tagRef.current.value);\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: post.title,\n      ref: titleRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      placeholder: \"Enter some tags...\",\n      value: post.tags,\n      ref: tagRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: loading,\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"W2pMrcwHePuYyjR0buHd7/7Vzk0=\", false, function () {\n  return [useNavigate, useEditor, useSearchParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js"],"names":["React","useRef","useState","Editor","useEditor","EditorContent","StarterKit","useNavigate","db","onSnapshot","collection","addDoc","Form","Button","doc","getDoc","useSearchParams","EditPost","props","error","setError","loading","setLoading","navigate","editor","extensions","content","post","body","titleRef","tagRef","setPost","title","id","serachParam","setSearchParam","get","docRef","then","result","exists","console","log","data","submitPost","tags","collectionRef","handlePost","e","preventDefault","current","value","getHTML"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const editor = useEditor({\n    extensions: [StarterKit],\n    content: post.body,\n  });\n\n  const titleRef = useRef();\n  const tagRef = useRef();\n\n  const [post, setPost] = useState({ title: \"Loading...\", id: \"initial\" });\n  const [serachParam, setSearchParam] = useSearchParams();\n  serachParam.get(\"postId\");\n\n  const docRef = doc(db, \"posts\", serachParam.get(\"postId\"));\n  getDoc(docRef).then((result) => {\n    if (result.exists()) {\n      console.log(\"Document data:\", result.data());\n      setPost(result.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n  async function submitPost(title, body, tags) {\n    const data = {\n      body: body,\n      tags: tags,\n      title: title,\n    };\n    const collectionRef = collection(db, \"posts\");\n    const docRef = await addDoc(collectionRef, data);\n    console.log(\"The new ID is: \" + docRef.id);\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(\n        titleRef.current.value,\n        editor.getHTML(),\n        tagRef.current.value\n      );\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <h2>Edit Post</h2>\n      <Form.Control value={post.title} ref={titleRef} type=\"text\" />\n      <br />\n      <Form.Control\n        placeholder=\"Enter some tags...\"\n        value={post.tags}\n        ref={tagRef}\n        type=\"text\"\n      />\n      <br />\n      <Editor editor={editor} />\n      <br />\n      <Button disabled={loading} onClick={handlePost}>\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}