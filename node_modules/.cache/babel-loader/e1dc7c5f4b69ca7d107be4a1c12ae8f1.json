{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nconst Paragraph = Node.create({\n  name: 'paragraph',\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n\n  group: 'block',\n  content: 'inline*',\n\n  parseHTML() {\n    return [{\n      tag: 'p'\n    }];\n  },\n\n  renderHTML(_ref) {\n    let {\n      HTMLAttributes\n    } = _ref;\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => _ref2 => {\n        let {\n          commands\n        } = _ref2;\n        return commands.setNode(this.name);\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph()\n    };\n  }\n\n});\nexport { Paragraph, Paragraph as default };","map":{"version":3,"sources":["../src/paragraph.ts"],"names":[],"mappings":";MAiBa,SAAS,GAAG,IAAI,CAAC,MAAL,CAA8B;AACrD,EAAA,IAAI,EAAE,WAD+C;AAGrD,EAAA,QAAQ,EAAE,IAH2C;;AAKrD,EAAA,UAAU,GAAA;AACR,WAAO;AACL,MAAA,cAAc,EAAE;AADX,KAAP;AAGD,GAToD;;AAWrD,EAAA,KAAK,EAAE,OAX8C;AAarD,EAAA,OAAO,EAAE,SAb4C;;AAerD,EAAA,SAAS,GAAA;AACP,WAAO,CACL;AAAE,MAAA,GAAG,EAAE;AAAP,KADK,CAAP;AAGD,GAnBoD;;AAqBrD,EAAA,UAAU,OAAmB;AAAA,QAAlB;AAAE,MAAA;AAAF,KAAkB;AAC3B,WAAO,CAAC,GAAD,EAAM,eAAe,CAAC,KAAK,OAAL,CAAa,cAAd,EAA8B,cAA9B,CAArB,EAAoE,CAApE,CAAP;AACD,GAvBoD;;AAyBrD,EAAA,WAAW,GAAA;AACT,WAAO;AACL,MAAA,YAAY,EAAE,MAAM,SAAa;AAAA,YAAZ;AAAE,UAAA;AAAF,SAAY;AAC/B,eAAO,QAAQ,CAAC,OAAT,CAAiB,KAAK,IAAtB,CAAP;AACD;AAHI,KAAP;AAKD,GA/BoD;;AAiCrD,EAAA,oBAAoB,GAAA;AAClB,WAAO;AACL,mBAAa,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB;AADd,KAAP;AAGD;;AArCoD,CAA9B,C","sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}