{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const titleRef = useRef();\n  const tagRef = useRef();\n  const location = useLocation();\n  const state = location.state;\n  let editor = useEditor({\n    extensions: [StarterKit],\n    content: state.post.body\n  });\n\n  async function submitPost(title, body, tags) {\n    const data = {\n      body: body,\n      tags: tags,\n      title: title\n    };\n    const collectionRef = collection(db, \"posts\");\n    const docRef = await addDoc(collectionRef, data);\n    console.log(\"The new ID is: \" + docRef.id);\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(titleRef.current.value, editor.getHTML(), tagRef.current.value);\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: state.post.title,\n      ref: titleRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      placeholder: \"Enter some tags...\",\n      value: state.post.tags,\n      ref: tagRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: loading,\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"hQFIj/bSuVsUCErpn8KK4HGcNLc=\", false, function () {\n  return [useNavigate, useLocation, useEditor];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js"],"names":["React","useRef","useState","useEffect","Editor","useEditor","EditorContent","StarterKit","useNavigate","db","onSnapshot","collection","addDoc","Form","Button","doc","updateDoc","useLocation","EditPost","props","error","setError","loading","setLoading","navigate","titleRef","tagRef","location","state","editor","extensions","content","post","body","submitPost","title","tags","data","collectionRef","docRef","console","log","id","handlePost","e","preventDefault","current","value","getHTML"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const titleRef = useRef();\n  const tagRef = useRef();\n\n  const location = useLocation();\n  const state = location.state;\n\n  let editor = useEditor({\n    extensions: [StarterKit],\n    content: state.post.body,\n  });\n\n  async function submitPost(title, body, tags) {\n    const data = {\n      body: body,\n      tags: tags,\n      title: title,\n    };\n    const collectionRef = collection(db, \"posts\");\n    const docRef = await addDoc(collectionRef, data);\n    console.log(\"The new ID is: \" + docRef.id);\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(\n        titleRef.current.value,\n        editor.getHTML(),\n        tagRef.current.value\n      );\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <h2>Edit Post</h2>\n      <Form.Control value={state.post.title} ref={titleRef} type=\"text\" />\n      <br />\n      <Form.Control\n        placeholder=\"Enter some tags...\"\n        value={state.post.tags}\n        ref={tagRef}\n        type=\"text\"\n      />\n      <br />\n      <Editor editor={editor} />\n      <br />\n      <Button disabled={loading} onClick={handlePost}>\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}