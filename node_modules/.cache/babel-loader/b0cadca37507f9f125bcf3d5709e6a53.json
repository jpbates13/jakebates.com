{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  async function signup(email, password, fullName) {\n    await auth.createUserWithEmailAndPassword(email, password).then(result => {\n      return result.user.updateProfile({\n        displayName: fullName\n      });\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","signup","email","password","fullName","createUserWithEmailAndPassword","then","result","updateProfile","displayName","catch","error","login","signInWithEmailAndPassword","logout","signOut","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;;AACA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAGV,IAAI,CAACW,kBAAL,CAAyBC,IAAD,IAAU;AACpDL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHmB,CAApB;AAKA,WAAOC,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,iBAAeG,MAAf,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiD;AAC/C,UAAMhB,IAAI,CACPiB,8BADG,CAC4BH,KAD5B,EACmCC,QADnC,EAEHG,IAFG,CAEGC,MAAD,IAAY;AAChB,aAAOA,MAAM,CAACP,IAAP,CAAYQ,aAAZ,CAA0B;AAC/BC,QAAAA,WAAW,EAAEL;AADkB,OAA1B,CAAP;AAGD,KANG,EAOHM,KAPG,CAOIC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KATG,CAAN;AAUD;;AAED,WAASC,KAAT,CAAeV,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOf,IAAI,CAACyB,0BAAL,CAAgCX,KAAhC,EAAuCC,QAAvC,CAAP;AACD;;AAED,WAASW,MAAT,GAAkB;AAChB,WAAO1B,IAAI,CAAC2B,OAAL,EAAP;AACD;;AAED,QAAMC,KAAK,GAAG;AAAEtB,IAAAA,WAAF;AAAeO,IAAAA,MAAf;AAAuBW,IAAAA,KAAvB;AAA8BE,IAAAA;AAA9B,GAAd;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA,cACG,CAACpB,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAzCeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  async function signup(email, password, fullName) {\n    await auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        return result.user.updateProfile({\n          displayName: fullName,\n        });\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  const value = { currentUser, signup, login, logout };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}