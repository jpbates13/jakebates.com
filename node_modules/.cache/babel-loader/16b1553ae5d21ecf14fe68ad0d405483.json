{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const titleRef = useRef();\n  const tagRef = useRef();\n  const location = useLocation();\n  const post = location.state.post;\n  const docuemntRef = doc(db, \"posts\", post.id);\n  let editor = useEditor({\n    extensions: [StarterKit],\n    content: post.body\n  });\n\n  async function submitPost(title, body, tags) {\n    await updateDoc(docuemntRef, {\n      body: body,\n      tags: tags,\n      title: title,\n      date: post.date,\n      updatedDate: Timestamp.fromDate(new Date())\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(titleRef.current.value, editor.getHTML(), tagRef.current.value);\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      defaultValue: post.title,\n      ref: titleRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      placeholder: \"Enter some tags...\",\n      defaultValue: post.tags,\n      ref: tagRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: loading,\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"hQFIj/bSuVsUCErpn8KK4HGcNLc=\", false, function () {\n  return [useNavigate, useLocation, useEditor];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js"],"names":["React","useRef","useState","useEffect","Editor","useEditor","EditorContent","StarterKit","useNavigate","db","onSnapshot","collection","addDoc","Form","Button","doc","updateDoc","useLocation","EditPost","props","error","setError","loading","setLoading","navigate","titleRef","tagRef","location","post","state","docuemntRef","id","editor","extensions","content","body","submitPost","title","tags","date","updatedDate","Timestamp","fromDate","Date","catch","err","console","log","handlePost","e","preventDefault","current","value","getHTML"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { onSnapshot, collection, addDoc } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const titleRef = useRef();\n  const tagRef = useRef();\n\n  const location = useLocation();\n  const post = location.state.post;\n  const docuemntRef = doc(db, \"posts\", post.id);\n\n  let editor = useEditor({\n    extensions: [StarterKit],\n    content: post.body,\n  });\n\n  async function submitPost(title, body, tags) {\n    await updateDoc(docuemntRef, {\n      body: body,\n      tags: tags,\n      title: title,\n      date: post.date,\n      updatedDate: Timestamp.fromDate(new Date()),\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(\n        titleRef.current.value,\n        editor.getHTML(),\n        tagRef.current.value\n      );\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <h2>Edit Post</h2>\n      <Form.Control defaultValue={post.title} ref={titleRef} type=\"text\" />\n      <br />\n      <Form.Control\n        placeholder=\"Enter some tags...\"\n        defaultValue={post.tags}\n        ref={tagRef}\n        type=\"text\"\n      />\n      <br />\n      <Editor editor={editor} />\n      <br />\n      <Button disabled={loading} onClick={handlePost}>\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}