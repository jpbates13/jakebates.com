{"ast":null,"code":"import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform'; // :: (options: ?Object) â†’ Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n// Nodes may add a `disableDropCursor` property to their spec to\n// control the showing of a drop cursor inside them. This may be a\n// boolean or a function, which will be called with a view and a\n// position, and should return a boolean.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\n\nfunction dropCursor(options) {\n  if (options === void 0) options = {};\n  return new Plugin({\n    view: function view(editorView) {\n      return new DropCursorView(editorView, options);\n    }\n  });\n}\n\nvar DropCursorView = function DropCursorView(editorView, options) {\n  var this$1 = this;\n  this.editorView = editorView;\n  this.width = options.width || 1;\n  this.color = options.color || \"black\";\n  this.class = options.class;\n  this.cursorPos = null;\n  this.element = null;\n  this.timeout = null;\n  this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(function (name) {\n    var handler = function (e) {\n      return this$1[name](e);\n    };\n\n    editorView.dom.addEventListener(name, handler);\n    return {\n      name: name,\n      handler: handler\n    };\n  });\n};\n\nDropCursorView.prototype.destroy = function destroy() {\n  var this$1 = this;\n  this.handlers.forEach(function (ref) {\n    var name = ref.name;\n    var handler = ref.handler;\n    return this$1.editorView.dom.removeEventListener(name, handler);\n  });\n};\n\nDropCursorView.prototype.update = function update(editorView, prevState) {\n  if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n    if (this.cursorPos > editorView.state.doc.content.size) {\n      this.setCursor(null);\n    } else {\n      this.updateOverlay();\n    }\n  }\n};\n\nDropCursorView.prototype.setCursor = function setCursor(pos) {\n  if (pos == this.cursorPos) {\n    return;\n  }\n\n  this.cursorPos = pos;\n\n  if (pos == null) {\n    this.element.parentNode.removeChild(this.element);\n    this.element = null;\n  } else {\n    this.updateOverlay();\n  }\n};\n\nDropCursorView.prototype.updateOverlay = function updateOverlay() {\n  var $pos = this.editorView.state.doc.resolve(this.cursorPos),\n      rect;\n\n  if (!$pos.parent.inlineContent) {\n    var before = $pos.nodeBefore,\n        after = $pos.nodeAfter;\n\n    if (before || after) {\n      var nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0)).getBoundingClientRect();\n      var top = before ? nodeRect.bottom : nodeRect.top;\n\n      if (before && after) {\n        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n      }\n\n      rect = {\n        left: nodeRect.left,\n        right: nodeRect.right,\n        top: top - this.width / 2,\n        bottom: top + this.width / 2\n      };\n    }\n  }\n\n  if (!rect) {\n    var coords = this.editorView.coordsAtPos(this.cursorPos);\n    rect = {\n      left: coords.left - this.width / 2,\n      right: coords.left + this.width / 2,\n      top: coords.top,\n      bottom: coords.bottom\n    };\n  }\n\n  var parent = this.editorView.dom.offsetParent;\n\n  if (!this.element) {\n    this.element = parent.appendChild(document.createElement(\"div\"));\n\n    if (this.class) {\n      this.element.className = this.class;\n    }\n\n    this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n  }\n\n  var parentLeft, parentTop;\n\n  if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n    parentLeft = -pageXOffset;\n    parentTop = -pageYOffset;\n  } else {\n    var rect$1 = parent.getBoundingClientRect();\n    parentLeft = rect$1.left - parent.scrollLeft;\n    parentTop = rect$1.top - parent.scrollTop;\n  }\n\n  this.element.style.left = rect.left - parentLeft + \"px\";\n  this.element.style.top = rect.top - parentTop + \"px\";\n  this.element.style.width = rect.right - rect.left + \"px\";\n  this.element.style.height = rect.bottom - rect.top + \"px\";\n};\n\nDropCursorView.prototype.scheduleRemoval = function scheduleRemoval(timeout) {\n  var this$1 = this;\n  clearTimeout(this.timeout);\n  this.timeout = setTimeout(function () {\n    return this$1.setCursor(null);\n  }, timeout);\n};\n\nDropCursorView.prototype.dragover = function dragover(event) {\n  if (!this.editorView.editable) {\n    return;\n  }\n\n  var pos = this.editorView.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  var node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n  var disableDropCursor = node && node.type.spec.disableDropCursor;\n  var disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos) : disableDropCursor;\n\n  if (pos && !disabled) {\n    var target = pos.pos;\n\n    if (this.editorView.dragging && this.editorView.dragging.slice) {\n      target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n\n      if (target == null) {\n        return this.setCursor(null);\n      }\n    }\n\n    this.setCursor(target);\n    this.scheduleRemoval(5000);\n  }\n};\n\nDropCursorView.prototype.dragend = function dragend() {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.drop = function drop() {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.dragleave = function dragleave(event) {\n  if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget)) {\n    this.setCursor(null);\n  }\n};\n\nexport { dropCursor };","map":{"version":3,"sources":["../src/dropcursor.js"],"names":["let","this","rect"],"mappings":"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","sourcesContent":["import {Plugin} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\n\n// :: (options: ?Object) â†’ Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n// Nodes may add a `disableDropCursor` property to their spec to\n// control the showing of a drop cursor inside them. This may be a\n// boolean or a function, which will be called with a view and a\n// position, and should return a boolean.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nexport function dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nclass DropCursorView {\n  constructor(editorView, options) {\n    this.editorView = editorView\n    this.width = options.width || 1\n    this.color = options.color || \"black\"\n    this.class = options.class\n    this.cursorPos = null\n    this.element = null\n    this.timeout = null\n\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => this[name](e)\n      editorView.dom.addEventListener(name, handler)\n      return {name, handler}\n    })\n  }\n\n  destroy() {\n    this.handlers.forEach(({name, handler}) => this.editorView.dom.removeEventListener(name, handler))\n  }\n\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n      if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null)\n      else this.updateOverlay()\n    }\n  }\n\n  setCursor(pos) {\n    if (pos == this.cursorPos) return\n    this.cursorPos = pos\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element)\n      this.element = null\n    } else {\n      this.updateOverlay()\n    }\n  }\n\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect\n    if (!$pos.parent.inlineContent) {\n      let before = $pos.nodeBefore, after = $pos.nodeAfter\n      if (before || after) {\n        let nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?  before.nodeSize : 0)).getBoundingClientRect()\n        let top = before ? nodeRect.bottom : nodeRect.top\n        if (before && after)\n          top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2\n        rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2}\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos)\n      rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom}\n    }\n\n    let parent = this.editorView.dom.offsetParent\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"))\n      if (this.class) this.element.className = this.class\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color\n    }\n    let parentLeft, parentTop\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset\n      parentTop = -pageYOffset\n    } else {\n      let rect = parent.getBoundingClientRect()\n      parentLeft = rect.left - parent.scrollLeft\n      parentTop = rect.top - parent.scrollTop\n    }\n    this.element.style.left = (rect.left - parentLeft) + \"px\"\n    this.element.style.top = (rect.top - parentTop) + \"px\"\n    this.element.style.width = (rect.right - rect.left) + \"px\"\n    this.element.style.height = (rect.bottom - rect.top) + \"px\"\n  }\n\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout)\n    this.timeout = setTimeout(() => this.setCursor(null), timeout)\n  }\n\n  dragover(event) {\n    if (!this.editorView.editable) return\n    let pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY})\n\n    let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside)\n    let disableDropCursor = node && node.type.spec.disableDropCursor\n    let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos) : disableDropCursor\n\n    if (pos && !disabled) {\n      let target = pos.pos\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice)\n        if (target == null) return this.setCursor(null)\n      }\n      this.setCursor(target)\n      this.scheduleRemoval(5000)\n    }\n  }\n\n  dragend() {\n    this.scheduleRemoval(20)\n  }\n\n  drop() {\n    this.scheduleRemoval(20)\n  }\n\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n      this.setCursor(null)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}