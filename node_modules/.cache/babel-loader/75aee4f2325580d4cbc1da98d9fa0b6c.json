{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = \"undefined\" != typeof globalThis ? globalThis : e || self).firebase = t();\n}(this, function () {\n  \"use strict\";\n\n  function c(e, t) {\n    if (!(t instanceof Object)) return t;\n\n    switch (t.constructor) {\n      case Date:\n        const i = t;\n        return new Date(i.getTime());\n\n      case Object:\n        void 0 === e && (e = {});\n        break;\n\n      case Array:\n        e = [];\n        break;\n\n      default:\n        return t;\n    }\n\n    for (const r in t) t.hasOwnProperty(r) && \"__proto__\" !== r && (e[r] = c(e[r], t[r]));\n\n    return e;\n  }\n\n  class n {\n    constructor() {\n      this.reject = () => {}, this.resolve = () => {}, this.promise = new Promise((e, t) => {\n        this.resolve = e, this.reject = t;\n      });\n    }\n\n    wrapCallback(i) {\n      return (e, t) => {\n        e ? this.reject(e) : this.resolve(t), \"function\" == typeof i && (this.promise.catch(() => {}), 1 === i.length ? i(e) : i(e, t));\n      };\n    }\n\n  }\n\n  class a extends Error {\n    constructor(e, t, i) {\n      super(t), this.code = e, this.customData = i, this.name = \"FirebaseError\", Object.setPrototypeOf(this, a.prototype), Error.captureStackTrace && Error.captureStackTrace(this, r.prototype.create);\n    }\n\n  }\n\n  class r {\n    constructor(e, t, i) {\n      this.service = e, this.serviceName = t, this.errors = i;\n    }\n\n    create(e) {\n      var r,\n          i = (arguments.length <= 1 ? undefined : arguments[1]) || {},\n          n = `${this.service}/${e}`,\n          s = this.errors[e],\n          s = s ? (r = i, s.replace(o, (e, t) => {\n        var i = r[t];\n        return null != i ? String(i) : `<${t}?>`;\n      })) : \"Error\",\n          s = `${this.serviceName}: ${s} (${n}).`;\n      return new a(n, s, i);\n    }\n\n  }\n\n  const o = /\\{\\$([^}]+)}/g;\n\n  function l(e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }\n\n  function h(e, t) {\n    if (e === t) return 1;\n    const i = Object.keys(e),\n          r = Object.keys(t);\n\n    for (const a of i) {\n      if (!r.includes(a)) return;\n      var n = e[a],\n          s = t[a];\n\n      if (p(n) && p(s)) {\n        if (!h(n, s)) return;\n      } else if (n !== s) return;\n    }\n\n    for (const o of r) if (!i.includes(o)) return;\n\n    return 1;\n  }\n\n  function p(e) {\n    return null !== e && \"object\" == typeof e;\n  }\n\n  function i(e, t) {\n    const i = new s(e, t);\n    return i.subscribe.bind(i);\n  }\n\n  class s {\n    constructor(e, t) {\n      this.observers = [], this.unsubscribes = [], this.observerCount = 0, this.task = Promise.resolve(), this.finalized = !1, this.onNoObservers = t, this.task.then(() => {\n        e(this);\n      }).catch(e => {\n        this.error(e);\n      });\n    }\n\n    next(t) {\n      this.forEachObserver(e => {\n        e.next(t);\n      });\n    }\n\n    error(t) {\n      this.forEachObserver(e => {\n        e.error(t);\n      }), this.close(t);\n    }\n\n    complete() {\n      this.forEachObserver(e => {\n        e.complete();\n      }), this.close();\n    }\n\n    subscribe(e, t, i) {\n      let r;\n      if (void 0 === e && void 0 === t && void 0 === i) throw new Error(\"Missing Observer.\");\n      r = function (e, t) {\n        if (\"object\" != typeof e || null === e) return !1;\n\n        for (const i of t) if (i in e && \"function\" == typeof e[i]) return !0;\n\n        return !1;\n      }(e, [\"next\", \"error\", \"complete\"]) ? e : {\n        next: e,\n        error: t,\n        complete: i\n      }, void 0 === r.next && (r.next = f), void 0 === r.error && (r.error = f), void 0 === r.complete && (r.complete = f);\n      var n = this.unsubscribeOne.bind(this, this.observers.length);\n      return this.finalized && this.task.then(() => {\n        try {\n          this.finalError ? r.error(this.finalError) : r.complete();\n        } catch (e) {}\n      }), this.observers.push(r), n;\n    }\n\n    unsubscribeOne(e) {\n      void 0 !== this.observers && void 0 !== this.observers[e] && (delete this.observers[e], --this.observerCount, 0 === this.observerCount && void 0 !== this.onNoObservers && this.onNoObservers(this));\n    }\n\n    forEachObserver(t) {\n      if (!this.finalized) for (let e = 0; e < this.observers.length; e++) this.sendOne(e, t);\n    }\n\n    sendOne(e, t) {\n      this.task.then(() => {\n        if (void 0 !== this.observers && void 0 !== this.observers[e]) try {\n          t(this.observers[e]);\n        } catch (e) {\n          \"undefined\" != typeof console && console.error && console.error(e);\n        }\n      });\n    }\n\n    close(e) {\n      this.finalized || (this.finalized = !0, void 0 !== e && (this.finalError = e), this.task.then(() => {\n        this.observers = void 0, this.onNoObservers = void 0;\n      }));\n    }\n\n  }\n\n  function f() {}\n\n  class d {\n    constructor(e, t, i) {\n      this.name = e, this.instanceFactory = t, this.type = i, this.multipleInstances = !1, this.serviceProps = {}, this.instantiationMode = \"LAZY\", this.onInstanceCreated = null;\n    }\n\n    setInstantiationMode(e) {\n      return this.instantiationMode = e, this;\n    }\n\n    setMultipleInstances(e) {\n      return this.multipleInstances = e, this;\n    }\n\n    setServiceProps(e) {\n      return this.serviceProps = e, this;\n    }\n\n    setInstanceCreatedCallback(e) {\n      return this.onInstanceCreated = e, this;\n    }\n\n  }\n\n  const u = \"[DEFAULT]\";\n\n  class m {\n    constructor(e, t) {\n      this.name = e, this.container = t, this.component = null, this.instances = new Map(), this.instancesDeferred = new Map(), this.instancesOptions = new Map(), this.onInitCallbacks = new Map();\n    }\n\n    get(e) {\n      var t = this.normalizeInstanceIdentifier(e);\n\n      if (!this.instancesDeferred.has(t)) {\n        const r = new n();\n        if (this.instancesDeferred.set(t, r), this.isInitialized(t) || this.shouldAutoInitialize()) try {\n          var i = this.getOrInitializeService({\n            instanceIdentifier: t\n          });\n          i && r.resolve(i);\n        } catch (e) {}\n      }\n\n      return this.instancesDeferred.get(t).promise;\n    }\n\n    getImmediate(e) {\n      var t = this.normalizeInstanceIdentifier(null == e ? void 0 : e.identifier),\n          i = null !== (i = null == e ? void 0 : e.optional) && void 0 !== i && i;\n\n      if (!this.isInitialized(t) && !this.shouldAutoInitialize()) {\n        if (i) return null;\n        throw Error(`Service ${this.name} is not available`);\n      }\n\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: t\n        });\n      } catch (e) {\n        if (i) return null;\n        throw e;\n      }\n    }\n\n    getComponent() {\n      return this.component;\n    }\n\n    setComponent(e) {\n      if (e.name !== this.name) throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);\n      if (this.component) throw Error(`Component for ${this.name} has already been provided`);\n\n      if (this.component = e, this.shouldAutoInitialize()) {\n        if (\"EAGER\" === e.instantiationMode) try {\n          this.getOrInitializeService({\n            instanceIdentifier: u\n          });\n        } catch (e) {}\n\n        for (var [t, i] of this.instancesDeferred.entries()) {\n          t = this.normalizeInstanceIdentifier(t);\n\n          try {\n            var r = this.getOrInitializeService({\n              instanceIdentifier: t\n            });\n            i.resolve(r);\n          } catch (e) {}\n        }\n      }\n    }\n\n    clearInstance() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : u;\n      this.instancesDeferred.delete(e), this.instancesOptions.delete(e), this.instances.delete(e);\n    }\n\n    async delete() {\n      const e = Array.from(this.instances.values());\n      await Promise.all([...e.filter(e => \"INTERNAL\" in e).map(e => e.INTERNAL.delete()), ...e.filter(e => \"_delete\" in e).map(e => e._delete())]);\n    }\n\n    isComponentSet() {\n      return null != this.component;\n    }\n\n    isInitialized() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : u;\n      return this.instances.has(e);\n    }\n\n    getOptions() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : u;\n      return this.instancesOptions.get(e) || {};\n    }\n\n    initialize() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var {\n        options: t = {}\n      } = e,\n          i = this.normalizeInstanceIdentifier(e.instanceIdentifier);\n      if (this.isInitialized(i)) throw Error(`${this.name}(${i}) has already been initialized`);\n      if (!this.isComponentSet()) throw Error(`Component ${this.name} has not been registered yet`);\n      var r,\n          n,\n          s = this.getOrInitializeService({\n        instanceIdentifier: i,\n        options: t\n      });\n\n      for ([r, n] of this.instancesDeferred.entries()) i === this.normalizeInstanceIdentifier(r) && n.resolve(s);\n\n      return s;\n    }\n\n    onInit(e, t) {\n      var i = this.normalizeInstanceIdentifier(t);\n      const r = null !== (n = this.onInitCallbacks.get(i)) && void 0 !== n ? n : new Set();\n      r.add(e), this.onInitCallbacks.set(i, r);\n      var n = this.instances.get(i);\n      return n && e(n, i), () => {\n        r.delete(e);\n      };\n    }\n\n    invokeOnInitCallbacks(e, t) {\n      var i = this.onInitCallbacks.get(t);\n      if (i) for (const r of i) try {\n        r(e, t);\n      } catch (e) {}\n    }\n\n    getOrInitializeService(_ref) {\n      let {\n        instanceIdentifier: e,\n        options: t = {}\n      } = _ref;\n      let i = this.instances.get(e);\n      if (!i && this.component && (i = this.component.instanceFactory(this.container, {\n        instanceIdentifier: (r = e) === u ? void 0 : r,\n        options: t\n      }), this.instances.set(e, i), this.instancesOptions.set(e, t), this.invokeOnInitCallbacks(i, e), this.component.onInstanceCreated)) try {\n        this.component.onInstanceCreated(this.container, e, i);\n      } catch (e) {}\n      var r;\n      return i || null;\n    }\n\n    normalizeInstanceIdentifier() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : u;\n      return !this.component || this.component.multipleInstances ? e : u;\n    }\n\n    shouldAutoInitialize() {\n      return !!this.component && \"EXPLICIT\" !== this.component.instantiationMode;\n    }\n\n  }\n\n  class g {\n    constructor(e) {\n      this.name = e, this.providers = new Map();\n    }\n\n    addComponent(e) {\n      const t = this.getProvider(e.name);\n      if (t.isComponentSet()) throw new Error(`Component ${e.name} has already been registered with ${this.name}`);\n      t.setComponent(e);\n    }\n\n    addOrOverwriteComponent(e) {\n      const t = this.getProvider(e.name);\n      t.isComponentSet() && this.providers.delete(e.name), this.addComponent(e);\n    }\n\n    getProvider(e) {\n      if (this.providers.has(e)) return this.providers.get(e);\n      var t = new m(e, this);\n      return this.providers.set(e, t), t;\n    }\n\n    getProviders() {\n      return Array.from(this.providers.values());\n    }\n\n  }\n\n  const v = [];\n  var b, e;\n  (e = b = b || {})[e.DEBUG = 0] = \"DEBUG\", e[e.VERBOSE = 1] = \"VERBOSE\", e[e.INFO = 2] = \"INFO\", e[e.WARN = 3] = \"WARN\", e[e.ERROR = 4] = \"ERROR\", e[e.SILENT = 5] = \"SILENT\";\n\n  const I = {\n    debug: b.DEBUG,\n    verbose: b.VERBOSE,\n    info: b.INFO,\n    warn: b.WARN,\n    error: b.ERROR,\n    silent: b.SILENT\n  },\n        t = b.INFO,\n        E = {\n    [b.DEBUG]: \"log\",\n    [b.VERBOSE]: \"log\",\n    [b.INFO]: \"info\",\n    [b.WARN]: \"warn\",\n    [b.ERROR]: \"error\"\n  },\n        y = function (e, t) {\n    if (!(t < e.logLevel)) {\n      var r = new Date().toISOString(),\n          n = E[t];\n      if (!n) throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);\n\n      for (var _len = arguments.length, i = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        i[_key - 2] = arguments[_key];\n      }\n\n      console[n](`[${r}]  ${e.name}:`, ...i);\n    }\n  };\n\n  class _ {\n    constructor(e) {\n      this.name = e, this._logLevel = t, this._logHandler = y, this._userLogHandler = null, v.push(this);\n    }\n\n    get logLevel() {\n      return this._logLevel;\n    }\n\n    set logLevel(e) {\n      if (!(e in b)) throw new TypeError(`Invalid value \"${e}\" assigned to \\`logLevel\\``);\n      this._logLevel = e;\n    }\n\n    setLogLevel(e) {\n      this._logLevel = \"string\" == typeof e ? I[e] : e;\n    }\n\n    get logHandler() {\n      return this._logHandler;\n    }\n\n    set logHandler(e) {\n      if (\"function\" != typeof e) throw new TypeError(\"Value assigned to `logHandler` must be a function\");\n      this._logHandler = e;\n    }\n\n    get userLogHandler() {\n      return this._userLogHandler;\n    }\n\n    set userLogHandler(e) {\n      this._userLogHandler = e;\n    }\n\n    debug() {\n      for (var _len2 = arguments.length, e = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        e[_key2] = arguments[_key2];\n      }\n\n      this._userLogHandler && this._userLogHandler(this, b.DEBUG, ...e), this._logHandler(this, b.DEBUG, ...e);\n    }\n\n    log() {\n      for (var _len3 = arguments.length, e = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        e[_key3] = arguments[_key3];\n      }\n\n      this._userLogHandler && this._userLogHandler(this, b.VERBOSE, ...e), this._logHandler(this, b.VERBOSE, ...e);\n    }\n\n    info() {\n      for (var _len4 = arguments.length, e = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        e[_key4] = arguments[_key4];\n      }\n\n      this._userLogHandler && this._userLogHandler(this, b.INFO, ...e), this._logHandler(this, b.INFO, ...e);\n    }\n\n    warn() {\n      for (var _len5 = arguments.length, e = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        e[_key5] = arguments[_key5];\n      }\n\n      this._userLogHandler && this._userLogHandler(this, b.WARN, ...e), this._logHandler(this, b.WARN, ...e);\n    }\n\n    error() {\n      for (var _len6 = arguments.length, e = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        e[_key6] = arguments[_key6];\n      }\n\n      this._userLogHandler && this._userLogHandler(this, b.ERROR, ...e), this._logHandler(this, b.ERROR, ...e);\n    }\n\n  }\n\n  class O {\n    constructor(e) {\n      this.container = e;\n    }\n\n    getPlatformInfoString() {\n      const e = this.container.getProviders();\n      return e.map(e => {\n        if (\"VERSION\" !== (null == (t = e.getComponent()) ? void 0 : t.type)) return null;\n        var t,\n            t = e.getImmediate();\n        return `${t.library}/${t.version}`;\n      }).filter(e => e).join(\" \");\n    }\n\n  }\n\n  const w = \"@firebase/app\",\n        C = \"0.7.6\",\n        N = new _(\"@firebase/app\");\n  var L;\n  const A = \"[DEFAULT]\",\n        D = {\n    \"@firebase/app\": \"fire-core\",\n    \"@firebase/app-compat\": \"fire-core-compat\",\n    \"@firebase/analytics\": \"fire-analytics\",\n    \"@firebase/analytics-compat\": \"fire-analytics-compat\",\n    \"@firebase/app-check\": \"fire-app-check\",\n    \"@firebase/app-check-compat\": \"fire-app-check-compat\",\n    \"@firebase/auth\": \"fire-auth\",\n    \"@firebase/auth-compat\": \"fire-auth-compat\",\n    \"@firebase/database\": \"fire-rtdb\",\n    \"@firebase/database-compat\": \"fire-rtdb-compat\",\n    \"@firebase/functions\": \"fire-fn\",\n    \"@firebase/functions-compat\": \"fire-fn-compat\",\n    \"@firebase/installations\": \"fire-iid\",\n    \"@firebase/installations-compat\": \"fire-iid-compat\",\n    \"@firebase/messaging\": \"fire-fcm\",\n    \"@firebase/messaging-compat\": \"fire-fcm-compat\",\n    \"@firebase/performance\": \"fire-perf\",\n    \"@firebase/performance-compat\": \"fire-perf-compat\",\n    \"@firebase/remote-config\": \"fire-rc\",\n    \"@firebase/remote-config-compat\": \"fire-rc-compat\",\n    \"@firebase/storage\": \"fire-gcs\",\n    \"@firebase/storage-compat\": \"fire-gcs-compat\",\n    \"@firebase/firestore\": \"fire-fst\",\n    \"@firebase/firestore-compat\": \"fire-fst-compat\",\n    \"fire-js\": \"fire-js\",\n    firebase: \"fire-js-all\"\n  },\n        S = new Map(),\n        R = new Map();\n\n  function $(t, i) {\n    try {\n      t.container.addComponent(i);\n    } catch (e) {\n      N.debug(`Component ${i.name} failed to register with FirebaseApp ${t.name}`, e);\n    }\n  }\n\n  function k(e, t) {\n    e.container.addOrOverwriteComponent(t);\n  }\n\n  function P(e) {\n    var t = e.name;\n    if (R.has(t)) return N.debug(`There were multiple attempts to register component ${t}.`), !1;\n    R.set(t, e);\n\n    for (const i of S.values()) $(i, e);\n\n    return !0;\n  }\n\n  function z(e, t) {\n    return e.container.getProvider(t);\n  }\n\n  const F = new r(\"app\", \"Firebase\", {\n    \"no-app\": \"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()\",\n    \"bad-app-name\": \"Illegal App name: '{$appName}\",\n    \"duplicate-app\": \"Firebase App named '{$appName}' already exists with different options or config\",\n    \"app-deleted\": \"Firebase App named '{$appName}' already deleted\",\n    \"invalid-app-argument\": \"firebase.{$appName}() takes either no argument or a Firebase App instance.\",\n    \"invalid-log-argument\": \"First argument to `onLog` must be null or a function.\"\n  });\n\n  class j {\n    constructor(e, t, i) {\n      this._isDeleted = !1, this._options = Object.assign({}, e), this._config = Object.assign({}, t), this._name = t.name, this._automaticDataCollectionEnabled = t.automaticDataCollectionEnabled, this._container = i, this.container.addComponent(new d(\"app\", () => this, \"PUBLIC\"));\n    }\n\n    get automaticDataCollectionEnabled() {\n      return this.checkDestroyed(), this._automaticDataCollectionEnabled;\n    }\n\n    set automaticDataCollectionEnabled(e) {\n      this.checkDestroyed(), this._automaticDataCollectionEnabled = e;\n    }\n\n    get name() {\n      return this.checkDestroyed(), this._name;\n    }\n\n    get options() {\n      return this.checkDestroyed(), this._options;\n    }\n\n    get config() {\n      return this.checkDestroyed(), this._config;\n    }\n\n    get container() {\n      return this._container;\n    }\n\n    get isDeleted() {\n      return this._isDeleted;\n    }\n\n    set isDeleted(e) {\n      this._isDeleted = e;\n    }\n\n    checkDestroyed() {\n      if (this.isDeleted) throw F.create(\"app-deleted\", {\n        appName: this._name\n      });\n    }\n\n  }\n\n  const H = \"9.3.0\";\n\n  function T(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (\"object\" != typeof t) {\n      const r = t;\n      t = {\n        name: r\n      };\n    }\n\n    var i = Object.assign({\n      name: A,\n      automaticDataCollectionEnabled: !1\n    }, t);\n    const r = i.name;\n    if (\"string\" != typeof r || !r) throw F.create(\"bad-app-name\", {\n      appName: String(r)\n    });\n    var n = S.get(r);\n\n    if (n) {\n      if (h(e, n.options) && h(i, n.config)) return n;\n      throw F.create(\"duplicate-app\", {\n        appName: r\n      });\n    }\n\n    const s = new g(r);\n\n    for (const a of R.values()) s.addComponent(a);\n\n    i = new j(e, i, s);\n    return S.set(r, i), i;\n  }\n\n  async function M(e) {\n    var t = e.name;\n    S.has(t) && (S.delete(t), await Promise.all(e.container.getProviders().map(e => e.delete())), e.isDeleted = !0);\n  }\n\n  function B(e, t, i) {\n    let r = null !== (s = D[e]) && void 0 !== s ? s : e;\n    i && (r += `-${i}`);\n    var n = r.match(/\\s|\\//),\n        s = t.match(/\\s|\\//);\n\n    if (n || s) {\n      const a = [`Unable to register library \"${r}\" with version \"${t}\":`];\n      return n && a.push(`library name \"${r}\" contains illegal characters (whitespace or \"/\")`), n && s && a.push(\"and\"), s && a.push(`version name \"${t}\" contains illegal characters (whitespace or \"/\")`), void N.warn(a.join(\" \"));\n    }\n\n    P(new d(`${r}-version`, () => ({\n      library: r,\n      version: t\n    }), \"VERSION\"));\n  }\n\n  function V(e, t) {\n    if (null !== e && \"function\" != typeof e) throw F.create(\"invalid-log-argument\");\n    !function (s, e) {\n      for (const t of v) {\n        let n = null;\n        e && e.level && (n = I[e.level]), t.userLogHandler = null === s ? null : function (e, t) {\n          for (var _len7 = arguments.length, i = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n            i[_key7 - 2] = arguments[_key7];\n          }\n\n          var r = i.map(e => {\n            if (null == e) return null;\n            if (\"string\" == typeof e) return e;\n            if (\"number\" == typeof e || \"boolean\" == typeof e) return e.toString();\n            if (e instanceof Error) return e.message;\n\n            try {\n              return JSON.stringify(e);\n            } catch (e) {\n              return null;\n            }\n          }).filter(e => e).join(\" \");\n          t >= (null !== n && void 0 !== n ? n : e.logLevel) && s({\n            level: b[t].toLowerCase(),\n            message: r,\n            args: i,\n            type: e.name\n          });\n        };\n      }\n    }(e, t);\n  }\n\n  function U(e) {\n    var t;\n    t = e, v.forEach(e => {\n      e.setLogLevel(t);\n    });\n  }\n\n  L = \"\", P(new d(\"platform-logger\", e => new O(e), \"PRIVATE\")), B(w, C, L), B(w, C, \"esm2017\"), B(\"fire-js\", \"\");\n  var x = Object.freeze({\n    __proto__: null,\n    SDK_VERSION: H,\n    _DEFAULT_ENTRY_NAME: A,\n    _addComponent: $,\n    _addOrOverwriteComponent: k,\n    _apps: S,\n    _clearComponents: function () {\n      R.clear();\n    },\n    _components: R,\n    _getProvider: z,\n    _registerComponent: P,\n    _removeServiceInstance: function (e, t) {\n      let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : A;\n      z(e, t).clearInstance(i);\n    },\n    deleteApp: M,\n    getApp: function () {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : A;\n      var t = S.get(e);\n      if (!t) throw F.create(\"no-app\", {\n        appName: e\n      });\n      return t;\n    },\n    getApps: function () {\n      return Array.from(S.values());\n    },\n    initializeApp: T,\n    onLog: V,\n    registerVersion: B,\n    setLogLevel: U,\n    FirebaseError: a\n  });\n\n  class W {\n    constructor(e, t) {\n      this._delegate = e, this.firebase = t, $(e, new d(\"app-compat\", () => this, \"PUBLIC\")), this.container = e.container;\n    }\n\n    get automaticDataCollectionEnabled() {\n      return this._delegate.automaticDataCollectionEnabled;\n    }\n\n    set automaticDataCollectionEnabled(e) {\n      this._delegate.automaticDataCollectionEnabled = e;\n    }\n\n    get name() {\n      return this._delegate.name;\n    }\n\n    get options() {\n      return this._delegate.options;\n    }\n\n    delete() {\n      return new Promise(e => {\n        this._delegate.checkDestroyed(), e();\n      }).then(() => (this.firebase.INTERNAL.removeApp(this.name), M(this._delegate)));\n    }\n\n    _getService(e) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : A;\n      var i;\n\n      this._delegate.checkDestroyed();\n\n      const r = this._delegate.container.getProvider(e);\n\n      return r.isInitialized() || \"EXPLICIT\" !== (null === (i = r.getComponent()) || void 0 === i ? void 0 : i.instantiationMode) || r.initialize(), r.getImmediate({\n        identifier: t\n      });\n    }\n\n    _removeServiceInstance(e) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : A;\n\n      this._delegate.container.getProvider(e).clearInstance(t);\n    }\n\n    _addComponent(e) {\n      $(this._delegate, e);\n    }\n\n    _addOrOverwriteComponent(e) {\n      k(this._delegate, e);\n    }\n\n    toJSON() {\n      return {\n        name: this.name,\n        automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n        options: this.options\n      };\n    }\n\n  }\n\n  const G = new r(\"app-compat\", \"Firebase\", {\n    \"no-app\": \"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()\",\n    \"invalid-app-argument\": \"firebase.{$appName}() takes either no argument or a Firebase App instance.\"\n  });\n\n  function Y(n) {\n    const s = {},\n          a = {\n      __esModule: !0,\n      initializeApp: function (e) {\n        let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var i = T(e, t);\n        if (l(s, i.name)) return s[i.name];\n        var r = new n(i, a);\n        return s[i.name] = r;\n      },\n      app: o,\n      registerVersion: B,\n      setLogLevel: U,\n      onLog: V,\n      apps: null,\n      SDK_VERSION: H,\n      INTERNAL: {\n        registerComponent: function (i) {\n          const r = i.name,\n                t = r.replace(\"-compat\", \"\");\n          {\n            var e;\n            P(i) && \"PUBLIC\" === i.type && (e = function () {\n              let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : o();\n              if (\"function\" != typeof e[t]) throw G.create(\"invalid-app-argument\", {\n                appName: r\n              });\n              return e[t]();\n            }, void 0 !== i.serviceProps && c(e, i.serviceProps), a[t] = e, n.prototype[t] = function () {\n              const t = this._getService.bind(this, r);\n\n              for (var _len8 = arguments.length, e = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n                e[_key8] = arguments[_key8];\n              }\n\n              return t.apply(this, i.multipleInstances ? e : []);\n            });\n          }\n          return \"PUBLIC\" === i.type ? a[t] : null;\n        },\n        removeApp: function (e) {\n          delete s[e];\n        },\n        useAsService: function (e, t) {\n          if (\"serverAuth\" === t) return null;\n          var i = t;\n          return i;\n        },\n        modularAPIs: x\n      }\n    };\n\n    function o(e) {\n      if (e = e || A, !l(s, e)) throw G.create(\"no-app\", {\n        appName: e\n      });\n      return s[e];\n    }\n\n    return a.default = a, Object.defineProperty(a, \"apps\", {\n      get: function () {\n        return Object.keys(s).map(e => s[e]);\n      }\n    }), o.App = n, a;\n  }\n\n  var K = function e() {\n    const t = Y(W);\n    return t.INTERNAL = Object.assign(Object.assign({}, t.INTERNAL), {\n      createFirebaseNamespace: e,\n      extendNamespace: function (e) {\n        c(t, e);\n      },\n      createSubscribe: i,\n      ErrorFactory: r,\n      deepExtend: c\n    }), t;\n  }();\n\n  const J = new _(\"@firebase/app-compat\");\n\n  if (\"object\" == typeof self && self.self === self && void 0 !== self.firebase) {\n    J.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n    const Z = self.firebase.SDK_VERSION;\n    Z && 0 <= Z.indexOf(\"LITE\") && J.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n\n  const X = K;\n  B(\"@firebase/app-compat\", \"0.1.7\", void 0);\n  return X.registerVersion(\"firebase\", \"9.3.0\", \"app-compat-cdn\"), X;\n});","map":{"version":3,"sources":["../util/src/deepCopy.ts","../util/src/deferred.ts","../util/src/errors.ts","../util/src/obj.ts","../util/src/subscribe.ts","../component/src/component.ts","../component/src/constants.ts","../component/src/provider.ts","../component/src/component_container.ts","../logger/src/logger.ts","../app/src/platformLoggerService.ts","../app/src/logger.ts","../app/src/registerCoreComponents.ts","../app/src/constants.ts","../app/src/internal.ts","../app/src/errors.ts","../app/src/firebaseApp.ts","../app/src/api.ts","../app/src/index.ts","../app-compat/src/firebaseApp.ts","../app-compat/src/errors.ts","../app-compat/src/firebaseNamespaceCore.ts","../app-compat/src/firebaseNamespace.ts","../app-compat/src/logger.ts","../app-compat/src/index.ts","../util/src/environment.ts","../app-compat/src/registerCoreComponents.ts","compat/app/index.cdn.ts"],"names":["deepExtend","target","source","Object","constructor","Date","dateValue","getTime","undefined","Array","prop","hasOwnProperty","Deferred","this","promise","Promise","resolve","reject","wrapCallback","callback","error","value","catch","length","FirebaseError","Error","code","message","customData","super","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","fullMessage","replace","PATTERN","_","key","String","contains","obj","call","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","task","then","e","next","forEachObserver","observer","close","complete","nextOrObserver","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","push","i","observerCount","fn","sendOne","console","err","methods","method","Component","name","instanceFactory","type","setInstantiationMode","mode","instantiationMode","setMultipleInstances","multipleInstances","setServiceProps","props","serviceProps","setInstanceCreatedCallback","onInstanceCreated","DEFAULT_ENTRY_NAME","Provider","Map","container","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","instancesDeferred","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","component","setComponent","instanceDeferred","entries","clearInstance","delete","instancesOptions","instances","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","onInitCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","ComponentContainer","addComponent","provider","getProvider","addOrOverwriteComponent","providers","getProviders","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","toISOString","Logger","_logLevel","val","TypeError","setLogLevel","logHandler","_logHandler","userLogHandler","_userLogHandler","log","level","forEach","inst","logCallback","customLogLevel","arg","toString","JSON","stringify","ignored","join","toLowerCase","PlatformLoggerServiceImpl","getPlatformInfoString","library","version","logString","logger","variant","_registerComponent","registerVersion","PLATFORM_LOG_STRING","@firebase/app","@firebase/app-compat","@firebase/analytics","@firebase/analytics-compat","@firebase/app-check","@firebase/app-check-compat","@firebase/auth","@firebase/auth-compat","@firebase/database","@firebase/database-compat","@firebase/functions","@firebase/functions-compat","@firebase/installations","@firebase/installations-compat","@firebase/messaging","@firebase/messaging-compat","@firebase/performance","@firebase/performance-compat","@firebase/remote-config","@firebase/remote-config-compat","@firebase/storage","@firebase/storage-compat","@firebase/firestore","@firebase/firestore-compat","fire-js","firebase","_apps","_components","_addComponent","app","_addOrOverwriteComponent","componentName","_getProvider","clear","no-app","bad-app-name","duplicate-app","app-deleted","invalid-app-argument","invalid-log-argument","ERROR_FACTORY","FirebaseAppImpl","config","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","_isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","async","deleteApp","libraryKeyOrName","libraryMismatch","match","versionMismatch","warning","onLog","setUserLogHandler","_delegate","removeApp","_getService","_DEFAULT_ENTRY_NAME","_removeServiceInstance","toJSON","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","modularAPIs.registerVersion","modularAPIs.setLogLevel","modularAPIs.onLog","modularAPIs.SDK_VERSION","registerComponent","useAsService","modularAPIs","defineProperty","modularAPIs._DEFAULT_ENTRY_NAME","modularAPIs.initializeApp","appCompat","componentNameWithoutCompat","modularAPIs._registerComponent","serviceNamespace","appArg","serviceFxn","apply","useService","createFirebaseNamespace","extendNamespace","self","sdkVersion","indexOf","firebaseNamespace","registerCoreComponents"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat-cdn');\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"script"}