{"ast":null,"code":"import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from 'prosemirror-history';\nconst History = Extension.create({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500\n    };\n  },\n\n  addCommands() {\n    return {\n      undo: () => _ref => {\n        let {\n          state,\n          dispatch\n        } = _ref;\n        return undo(state, dispatch);\n      },\n      redo: () => _ref2 => {\n        let {\n          state,\n          dispatch\n        } = _ref2;\n        return redo(state, dispatch);\n      }\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [history(this.options)];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo()\n    };\n  }\n\n});\nexport { History, History as default };","map":{"version":3,"sources":["../src/history.ts"],"names":[],"mappings":";;MAuBa,OAAO,GAAG,SAAS,CAAC,MAAV,CAAiC;AACtD,EAAA,IAAI,EAAE,SADgD;;AAGtD,EAAA,UAAU,GAAA;AACR,WAAO;AACL,MAAA,KAAK,EAAE,GADF;AAEL,MAAA,aAAa,EAAE;AAFV,KAAP;AAID,GARqD;;AAUtD,EAAA,WAAW,GAAA;AACT,WAAO;AACL,MAAA,IAAI,EAAE,MAAM,QAAoB;AAAA,YAAnB;AAAE,UAAA,KAAF;AAAS,UAAA;AAAT,SAAmB;AAC9B,eAAO,IAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD,OAHI;AAIL,MAAA,IAAI,EAAE,MAAM,SAAoB;AAAA,YAAnB;AAAE,UAAA,KAAF;AAAS,UAAA;AAAT,SAAmB;AAC9B,eAAO,IAAI,CAAC,KAAD,EAAQ,QAAR,CAAX;AACD;AANI,KAAP;AAQD,GAnBqD;;AAqBtD,EAAA,qBAAqB,GAAA;AACnB,WAAO,CACL,OAAO,CAAC,KAAK,OAAN,CADF,CAAP;AAGD,GAzBqD;;AA2BtD,EAAA,oBAAoB,GAAA;AAClB,WAAO;AACL,eAAS,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EADV;AAEL,eAAS,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAFV;AAGL,qBAAe,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAHhB;;AAML,eAAS,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,EANV;AAOL,qBAAe,MAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB;AAPhB,KAAP;AASD;;AArCqD,CAAjC,C","sourcesContent":["import { Extension } from '@tiptap/core'\nimport { history, undo, redo } from 'prosemirror-history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}