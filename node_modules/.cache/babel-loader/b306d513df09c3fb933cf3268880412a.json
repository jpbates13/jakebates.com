{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { onSnapshot, collection } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport DOMPurify from \"dompurify\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [posts, setPosts] = useState([{\n    title: \"Loading...\",\n    id: \"initial\"\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    onSnapshot(collection(db, \"posts\"), snapshot => {\n      setPosts( // we sort it so the most recent posts are on top\n      snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })).sort((a, b) => {\n        return b.date.toDate() - a.date.toDate();\n      }));\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: \"50px\"\n      },\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/post?postId=\" + post.id,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), currentUser && /*#__PURE__*/_jsxDEV(Link, {\n          state: {\n            post: post\n          },\n          to: \"/edit?postId=\" + post.id,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: DOMPurify.sanitize(post.body)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"De8k9fhXQBfBabC/BZZFtV8II6k=\", false, function () {\n  return [useAuth];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/Blog.js"],"names":["React","useState","useEffect","onSnapshot","collection","Link","db","DOMPurify","useAuth","Blog","currentUser","posts","setPosts","title","id","isLoading","setIsLoading","snapshot","docs","map","doc","data","sort","a","b","date","toDate","post","paddingBottom","__html","sanitize","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,OAAO,EAA/B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAC;AAAEY,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,EAAE,EAAE;AAA3B,GAAD,CAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAb,IAAAA,UAAU,CAACC,UAAU,CAACE,EAAD,EAAK,OAAL,CAAX,EAA2BW,QAAD,IAAc;AAChDL,MAAAA,QAAQ,EACN;AACAK,MAAAA,QAAQ,CAACC,IAAT,CACGC,GADH,CACQC,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACC,IAAJ,EAAL;AAAiBP,QAAAA,EAAE,EAAEM,GAAG,CAACN;AAAzB,OAAV,CADP,EAEGQ,IAFH,CAEQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,eAAOA,CAAC,CAACC,IAAF,CAAOC,MAAP,KAAkBH,CAAC,CAACE,IAAF,CAAOC,MAAP,EAAzB;AACD,OAJH,CAFM,CAAR;AAQAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVS,CAAV;AAWD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,cACGL,KAAK,CAACQ,GAAN,CAAWQ,IAAD,iBACT;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAA1B;AAAA,iBACGb,SAAS,gBACR;AAAA,kBAAKY,IAAI,CAACd;AAAV;AAAA;AAAA;AAAA;AAAA,cADQ,gBAGR;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,kBAAkBc,IAAI,CAACb,EAAjC;AAAA,iCACE;AAAA,sBAAKa,IAAI,CAACd;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGH,WAAW,iBACV,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEiB,YAAAA,IAAI,EAAEA;AAAR,WAAb;AAA6B,UAAA,EAAE,EAAE,kBAAkBA,IAAI,CAACb,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAeE;AACE,QAAA,uBAAuB,EAAE;AAAEe,UAAAA,MAAM,EAAEtB,SAAS,CAACuB,QAAV,CAAmBH,IAAI,CAACI,IAAxB;AAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,OAAUJ,IAAI,CAACb,EAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7CQL,I;UACiBD,O;;;KADjBC,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { onSnapshot, collection } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport DOMPurify from \"dompurify\";\nimport { useAuth } from \"../contexts/AuthContext\";\nfunction Blog() {\n  const { currentUser } = useAuth();\n  const [posts, setPosts] = useState([{ title: \"Loading...\", id: \"initial\" }]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    onSnapshot(collection(db, \"posts\"), (snapshot) => {\n      setPosts(\n        // we sort it so the most recent posts are on top\n        snapshot.docs\n          .map((doc) => ({ ...doc.data(), id: doc.id }))\n          .sort((a, b) => {\n            return b.date.toDate() - a.date.toDate();\n          })\n      );\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div>\n      {posts.map((post) => (\n        <div key={post.id} style={{ paddingBottom: \"50px\" }}>\n          {isLoading ? (\n            <h2>{post.title}</h2>\n          ) : (\n            <div>\n              <Link to={\"/post?postId=\" + post.id}>\n                <h2>{post.title}</h2>\n              </Link>\n              {currentUser && (\n                <Link state={{ post: post }} to={\"/edit?postId=\" + post.id}>\n                  Edit\n                </Link>\n              )}\n            </div>\n          )}\n          <div\n            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(post.body) }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}