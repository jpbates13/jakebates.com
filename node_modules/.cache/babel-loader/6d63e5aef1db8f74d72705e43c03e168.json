{"ast":null,"code":"import { Extension } from '@tiptap/core';\nimport Blockquote from '@tiptap/extension-blockquote';\nimport Bold from '@tiptap/extension-bold';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport Code from '@tiptap/extension-code';\nimport CodeBlock from '@tiptap/extension-code-block';\nimport Document from '@tiptap/extension-document';\nimport Dropcursor from '@tiptap/extension-dropcursor';\nimport Gapcursor from '@tiptap/extension-gapcursor';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Heading from '@tiptap/extension-heading';\nimport History from '@tiptap/extension-history';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport Italic from '@tiptap/extension-italic';\nimport ListItem from '@tiptap/extension-list-item';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Strike from '@tiptap/extension-strike';\nimport Text from '@tiptap/extension-text';\nconst StarterKit = Extension.create({\n  name: 'starterKit',\n\n  addExtensions() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n    const extensions = [];\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure((_a = this.options) === null || _a === void 0 ? void 0 : _a.blockquote));\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure((_b = this.options) === null || _b === void 0 ? void 0 : _b.bold));\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure((_c = this.options) === null || _c === void 0 ? void 0 : _c.bulletList));\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure((_d = this.options) === null || _d === void 0 ? void 0 : _d.code));\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure((_e = this.options) === null || _e === void 0 ? void 0 : _e.codeBlock));\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure((_f = this.options) === null || _f === void 0 ? void 0 : _f.document));\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure((_g = this.options) === null || _g === void 0 ? void 0 : _g.dropcursor));\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure((_h = this.options) === null || _h === void 0 ? void 0 : _h.gapcursor));\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure((_j = this.options) === null || _j === void 0 ? void 0 : _j.hardBreak));\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure((_k = this.options) === null || _k === void 0 ? void 0 : _k.heading));\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure((_l = this.options) === null || _l === void 0 ? void 0 : _l.history));\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure((_m = this.options) === null || _m === void 0 ? void 0 : _m.horizontalRule));\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure((_o = this.options) === null || _o === void 0 ? void 0 : _o.italic));\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure((_p = this.options) === null || _p === void 0 ? void 0 : _p.listItem));\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure((_q = this.options) === null || _q === void 0 ? void 0 : _q.orderedList));\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure((_r = this.options) === null || _r === void 0 ? void 0 : _r.paragraph));\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure((_s = this.options) === null || _s === void 0 ? void 0 : _s.strike));\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure((_t = this.options) === null || _t === void 0 ? void 0 : _t.text));\n    }\n\n    return extensions;\n  }\n\n});\nexport { StarterKit as default };","map":{"version":3,"sources":["../src/starter-kit.ts"],"names":[],"mappings":"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","sourcesContent":["import { Extension } from '@tiptap/core'\nimport Blockquote, { BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport Bold, { BoldOptions } from '@tiptap/extension-bold'\nimport BulletList, { BulletListOptions } from '@tiptap/extension-bullet-list'\nimport Code, { CodeOptions } from '@tiptap/extension-code'\nimport CodeBlock, { CodeBlockOptions } from '@tiptap/extension-code-block'\nimport Document from '@tiptap/extension-document'\nimport Dropcursor, { DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport Gapcursor from '@tiptap/extension-gapcursor'\nimport HardBreak, { HardBreakOptions } from '@tiptap/extension-hard-break'\nimport Heading, { HeadingOptions } from '@tiptap/extension-heading'\nimport History, { HistoryOptions } from '@tiptap/extension-history'\nimport HorizontalRule, { HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport Italic, { ItalicOptions } from '@tiptap/extension-italic'\nimport ListItem, { ListItemOptions } from '@tiptap/extension-list-item'\nimport OrderedList, { OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport Paragraph, { ParagraphOptions } from '@tiptap/extension-paragraph'\nimport Strike, { StrikeOptions } from '@tiptap/extension-strike'\nimport Text from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  blockquote: Partial<BlockquoteOptions> | false,\n  bold: Partial<BoldOptions> | false,\n  bulletList: Partial<BulletListOptions> | false,\n  code: Partial<CodeOptions> | false,\n  codeBlock: Partial<CodeBlockOptions> | false,\n  document: false,\n  dropcursor: Partial<DropcursorOptions> | false,\n  gapcursor: false,\n  hardBreak: Partial<HardBreakOptions> | false,\n  heading: Partial<HeadingOptions> | false,\n  history: Partial<HistoryOptions> | false,\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n  italic: Partial<ItalicOptions> | false,\n  listItem: Partial<ListItemOptions> | false,\n  orderedList: Partial<OrderedListOptions> | false,\n  paragraph: Partial<ParagraphOptions> | false,\n  strike: Partial<StrikeOptions> | false,\n  text: false,\n}\n\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options?.blockquote))\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options?.bold))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options?.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options?.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options?.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options?.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options?.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options?.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options?.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options?.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options?.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options?.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options?.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options?.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options?.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options?.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options?.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options?.text))\n    }\n\n    return extensions\n  },\n})\n"]},"metadata":{},"sourceType":"module"}