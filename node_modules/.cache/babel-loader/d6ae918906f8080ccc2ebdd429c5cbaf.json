{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useSearchParams } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport DOMPurify from \"dompurify\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  _s();\n\n  var _post$date, _post$updatedDate;\n\n  const {\n    currentUser\n  } = useAuth();\n  const [post, setPost] = useState({\n    title: \"Loading...\",\n    id: \"initial\"\n  });\n  const [serachParam, setSearchParam] = useSearchParams();\n  serachParam.get(\"postId\");\n  const docRef = doc(db, \"posts\", serachParam.get(\"postId\"));\n  getDoc(docRef).then(result => {\n    if (result.exists()) {\n      console.log(\"Document data:\", result.data());\n      setPost(result.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          lineHeight: \"1%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"36px\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"small\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: (_post$date = post.date) === null || _post$date === void 0 ? void 0 : _post$date.toDate().toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), post.updatedDate && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"small\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"Updated \", (_post$updatedDate = post.updatedDate) === null || _post$updatedDate === void 0 ? void 0 : _post$updatedDate.toDate().toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: DOMPurify.sanitize(post.body)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"YwnQs3h5DHfsAvVOLZ1kxqvpRA0=\", false, function () {\n  return [useAuth, useSearchParams];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/Post.js"],"names":["React","useState","useEffect","doc","getDoc","useSearchParams","db","DOMPurify","useAuth","Link","Post","props","currentUser","post","setPost","title","id","serachParam","setSearchParam","get","docRef","then","result","exists","console","log","data","paddingBottom","lineHeight","textAlign","fontSize","date","toDate","toDateString","updatedDate","__html","sanitize","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,OAAO,EAA/B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,EAAE,EAAE;AAA3B,GAAD,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,eAAe,EAArD;AACAY,EAAAA,WAAW,CAACE,GAAZ,CAAgB,QAAhB;AAEA,QAAMC,MAAM,GAAGjB,GAAG,CAACG,EAAD,EAAK,OAAL,EAAcW,WAAW,CAACE,GAAZ,CAAgB,QAAhB,CAAd,CAAlB;AACAf,EAAAA,MAAM,CAACgB,MAAD,CAAN,CAAeC,IAAf,CAAqBC,MAAD,IAAY;AAC9B,QAAIA,MAAM,CAACC,MAAP,EAAJ,EAAqB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAAM,CAACI,IAAP,EAA9B;AACAZ,MAAAA,OAAO,CAACQ,MAAM,CAACI,IAAP,EAAD,CAAP;AACD,KAHD,MAGO;AACL;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GARD;AAUA,sBACE;AAAA,2BACE;AAAmB,MAAA,KAAK,EAAE;AAAEE,QAAAA,aAAa,EAAE;AAAjB,OAA1B;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,QAAQ,EAAE;AAAjC,WAAX;AAAA,oBACGjB,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,KAAK,EAAE;AAAEc,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,QAAQ,EAAE;AAAjC,WAAV;AAAA,iCACE;AAAA,oCAAIjB,IAAI,CAACkB,IAAT,+CAAI,WAAWC,MAAX,GAAoBC,YAApB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOGpB,IAAI,CAACqB,WAAL,iBACC;AAAG,UAAA,KAAK,EAAE;AAAEL,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,QAAQ,EAAE;AAAjC,WAAV;AAAA,iCACE;AAAA,wDAAYjB,IAAI,CAACqB,WAAjB,sDAAY,kBAAkBF,MAAlB,GAA2BC,YAA3B,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARJ,eAYE;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AACE,QAAA,uBAAuB,EAAE;AAAEE,UAAAA,MAAM,EAAE5B,SAAS,CAAC6B,QAAV,CAAmBvB,IAAI,CAACwB,IAAxB;AAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,OAAUxB,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAxCuBN,I;UACEF,O,EAEcH,e;;;KAHhBK,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useSearchParams } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport DOMPurify from \"dompurify\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Post(props) {\n  const { currentUser } = useAuth();\n  const [post, setPost] = useState({ title: \"Loading...\", id: \"initial\" });\n  const [serachParam, setSearchParam] = useSearchParams();\n  serachParam.get(\"postId\");\n\n  const docRef = doc(db, \"posts\", serachParam.get(\"postId\"));\n  getDoc(docRef).then((result) => {\n    if (result.exists()) {\n      console.log(\"Document data:\", result.data());\n      setPost(result.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  });\n\n  return (\n    <div>\n      <div key={post.id} style={{ paddingBottom: \"50px\" }}>\n        <div style={{ lineHeight: \"1%\" }}>\n          <h2 style={{ textAlign: \"center\", fontSize: \"36px\" }}>\n            {post.title}\n          </h2>\n          <p style={{ textAlign: \"center\", fontSize: \"small\" }}>\n            <b>{post.date?.toDate().toDateString()}</b>\n          </p>\n          {post.updatedDate && (\n            <p style={{ textAlign: \"center\", fontSize: \"small\" }}>\n              <i>Updated {post.updatedDate?.toDate().toDateString()}</i>\n            </p>\n          )}\n          <hr />\n        </div>\n        <div\n          dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(post.body) }}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}