{"ast":null,"code":"import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, DOMParser, Slice } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\nvar result = {};\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  var ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent);\n  var ie_upto10 = /MSIE \\d/.test(navigator.userAgent);\n  var ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);\n  var ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge);\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null;\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent);\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n  var chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent);\n  result.chrome = !!chrome;\n  result.chrome_version = chrome && +chrome[1]; // Is true for both iOS and iPadOS for convenience\n\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor);\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\n  result.mac = result.ios || /Mac/.test(navigator.platform);\n  result.android = /Android \\d/.test(navigator.userAgent);\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style;\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n}\n\nvar domIndex = function (node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling;\n\n    if (!node) {\n      return index;\n    }\n  }\n};\n\nvar parentNode = function (node) {\n  var parent = node.assignedSlot || node.parentNode;\n  return parent && parent.nodeType == 11 ? parent.host : parent;\n};\n\nvar reusedRange = null; // Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\n\nvar textRange = function (node, from, to) {\n  var range = reusedRange || (reusedRange = document.createRange());\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, from || 0);\n  return range;\n}; // Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\n\n\nvar isEquivalentPosition = function (node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) || scanFor(node, off, targetNode, targetOff, 1));\n};\n\nvar atomElements = /^(img|br|input|textarea|hr)$/i;\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) {\n      return true;\n    }\n\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      var parent = node.parentNode;\n\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\") {\n        return false;\n      }\n\n      off = domIndex(node) + (dir < 0 ? 0 : 1);\n      node = parent;\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n\n      if (node.contentEditable == \"false\") {\n        return false;\n      }\n\n      off = dir < 0 ? nodeSize(node) : 0;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\n\nfunction isOnEdge(node, offset, parent) {\n  for (var atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) {\n      return true;\n    }\n\n    var index = domIndex(node);\n    node = node.parentNode;\n\n    if (!node) {\n      return false;\n    }\n\n    atStart = atStart && index == 0;\n    atEnd = atEnd && index == nodeSize(node);\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  var desc;\n\n  for (var cur = dom; cur; cur = cur.parentNode) {\n    if (desc = cur.pmViewDesc) {\n      break;\n    }\n  }\n\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n} // Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\n\n\nvar selectionCollapsed = function (domSel) {\n  var collapsed = domSel.isCollapsed;\n\n  if (collapsed && result.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed) {\n    collapsed = false;\n  }\n\n  return collapsed;\n};\n\nfunction keyEvent(keyCode, key) {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"keydown\", true, true);\n  event.keyCode = keyCode;\n  event.key = event.code = key;\n  return event;\n}\n\nfunction windowRect(doc) {\n  return {\n    left: 0,\n    right: doc.documentElement.clientWidth,\n    top: 0,\n    bottom: doc.documentElement.clientHeight\n  };\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side];\n}\n\nfunction clientRect(node) {\n  var rect = node.getBoundingClientRect(); // Adjust for elements with style \"transform: scale()\"\n\n  var scaleX = rect.width / node.offsetWidth || 1;\n  var scaleY = rect.height / node.offsetHeight || 1; // Make sure scrollbar width isn't included in the rectangle\n\n  return {\n    left: rect.left,\n    right: rect.left + node.clientWidth * scaleX,\n    top: rect.top,\n    bottom: rect.top + node.clientHeight * scaleY\n  };\n}\n\nfunction scrollRectIntoView(view, rect, startDOM) {\n  var scrollThreshold = view.someProp(\"scrollThreshold\") || 0,\n      scrollMargin = view.someProp(\"scrollMargin\") || 5;\n  var doc = view.dom.ownerDocument;\n\n  for (var parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) {\n      break;\n    }\n\n    if (parent.nodeType != 1) {\n      continue;\n    }\n\n    var atTop = parent == doc.body || parent.nodeType != 1;\n    var bounding = atTop ? windowRect(doc) : clientRect(parent);\n    var moveX = 0,\n        moveY = 0;\n\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\")) {\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n    } else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\")) {\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n    }\n\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\")) {\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n    } else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\")) {\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n    }\n\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY);\n      } else {\n        var startX = parent.scrollLeft,\n            startY = parent.scrollTop;\n\n        if (moveY) {\n          parent.scrollTop += moveY;\n        }\n\n        if (moveX) {\n          parent.scrollLeft += moveX;\n        }\n\n        var dX = parent.scrollLeft - startX,\n            dY = parent.scrollTop - startY;\n        rect = {\n          left: rect.left - dX,\n          top: rect.top - dY,\n          right: rect.right - dX,\n          bottom: rect.bottom - dY\n        };\n      }\n    }\n\n    if (atTop) {\n      break;\n    }\n  }\n} // Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\n\n\nfunction storeScrollPos(view) {\n  var rect = view.dom.getBoundingClientRect(),\n      startY = Math.max(0, rect.top);\n  var refDOM, refTop;\n\n  for (var x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n    var dom = view.root.elementFromPoint(x, y);\n\n    if (dom == view.dom || !view.dom.contains(dom)) {\n      continue;\n    }\n\n    var localRect = dom.getBoundingClientRect();\n\n    if (localRect.top >= startY - 20) {\n      refDOM = dom;\n      refTop = localRect.top;\n      break;\n    }\n  }\n\n  return {\n    refDOM: refDOM,\n    refTop: refTop,\n    stack: scrollStack(view.dom)\n  };\n}\n\nfunction scrollStack(dom) {\n  var stack = [],\n      doc = dom.ownerDocument;\n\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({\n      dom: dom,\n      top: dom.scrollTop,\n      left: dom.scrollLeft\n    });\n\n    if (dom == doc) {\n      break;\n    }\n  }\n\n  return stack;\n} // Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\n\n\nfunction resetScrollPos(ref) {\n  var refDOM = ref.refDOM;\n  var refTop = ref.refTop;\n  var stack = ref.stack;\n  var newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (var i = 0; i < stack.length; i++) {\n    var ref = stack[i];\n    var dom = ref.dom;\n    var top = ref.top;\n    var left = ref.left;\n\n    if (dom.scrollTop != top + dTop) {\n      dom.scrollTop = top + dTop;\n    }\n\n    if (dom.scrollLeft != left) {\n      dom.scrollLeft = left;\n    }\n  }\n}\n\nvar preventScrollSupported = null; // Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\n\nfunction focusPreventScroll(dom) {\n  if (dom.setActive) {\n    return dom.setActive();\n  } // in IE\n\n\n  if (preventScrollSupported) {\n    return dom.focus(preventScrollSupported);\n  }\n\n  var stored = scrollStack(dom);\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {\n        preventScroll: true\n      };\n      return true;\n    }\n\n  } : undefined);\n\n  if (!preventScrollSupported) {\n    preventScrollSupported = false;\n    restoreScrollStack(stored, 0);\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  var closest,\n      dxClosest = 2e8,\n      coordsClosest,\n      offset = 0;\n  var rowBot = coords.top,\n      rowTop = coords.top;\n\n  for (var child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    var rects = void 0;\n\n    if (child.nodeType == 1) {\n      rects = child.getClientRects();\n    } else if (child.nodeType == 3) {\n      rects = textRange(child).getClientRects();\n    } else {\n      continue;\n    }\n\n    for (var i = 0; i < rects.length; i++) {\n      var rect = rects[i];\n\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot);\n        rowTop = Math.min(rect.top, rowTop);\n        var dx = rect.left > coords.left ? rect.left - coords.left : rect.right < coords.left ? coords.left - rect.right : 0;\n\n        if (dx < dxClosest) {\n          closest = child;\n          dxClosest = dx;\n          coordsClosest = dx && closest.nodeType == 3 ? {\n            left: rect.right < coords.left ? rect.right : rect.left,\n            top: coords.top\n          } : coords;\n\n          if (child.nodeType == 1 && dx) {\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n          }\n\n          continue;\n        }\n      }\n\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top || coords.left >= rect.left && coords.top >= rect.bottom)) {\n        offset = childIndex + 1;\n      }\n    }\n  }\n\n  if (closest && closest.nodeType == 3) {\n    return findOffsetInText(closest, coordsClosest);\n  }\n\n  if (!closest || dxClosest && closest.nodeType == 1) {\n    return {\n      node: node,\n      offset: offset\n    };\n  }\n\n  return findOffsetInNode(closest, coordsClosest);\n}\n\nfunction findOffsetInText(node, coords) {\n  var len = node.nodeValue.length;\n  var range = document.createRange();\n\n  for (var i = 0; i < len; i++) {\n    range.setEnd(node, i + 1);\n    range.setStart(node, i);\n    var rect = singleRect(range, 1);\n\n    if (rect.top == rect.bottom) {\n      continue;\n    }\n\n    if (inRect(coords, rect)) {\n      return {\n        node: node,\n        offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n      };\n    }\n  }\n\n  return {\n    node: node,\n    offset: 0\n  };\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 && coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\n\nfunction targetKludge(dom, coords) {\n  var parent = dom.parentNode;\n\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left) {\n    return parent;\n  }\n\n  return dom;\n}\n\nfunction posFromElement(view, elt, coords) {\n  var ref = findOffsetInNode(elt, coords);\n  var node = ref.node;\n  var offset = ref.offset;\n  var bias = -1;\n\n  if (node.nodeType == 1 && !node.firstChild) {\n    var rect = node.getBoundingClientRect();\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n  }\n\n  return view.docView.posFromDOM(node, offset, bias);\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  var outside = -1;\n\n  for (var cur = node;;) {\n    if (cur == view.dom) {\n      break;\n    }\n\n    var desc = view.docView.nearestDesc(cur, true);\n\n    if (!desc) {\n      return null;\n    }\n\n    if (desc.node.isBlock && desc.parent) {\n      var rect = desc.dom.getBoundingClientRect();\n\n      if (rect.left > coords.left || rect.top > coords.top) {\n        outside = desc.posBefore;\n      } else if (rect.right < coords.left || rect.bottom < coords.top) {\n        outside = desc.posAfter;\n      } else {\n        break;\n      }\n    }\n\n    cur = desc.dom.parentNode;\n  }\n\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset);\n}\n\nfunction elementFromPoint(element, coords, box) {\n  var len = element.childNodes.length;\n\n  if (len && box.top < box.bottom) {\n    for (var startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      var child = element.childNodes[i];\n\n      if (child.nodeType == 1) {\n        var rects = child.getClientRects();\n\n        for (var j = 0; j < rects.length; j++) {\n          var rect = rects[j];\n\n          if (inRect(coords, rect)) {\n            return elementFromPoint(child, coords, rect);\n          }\n        }\n      }\n\n      if ((i = (i + 1) % len) == startI) {\n        break;\n      }\n    }\n  }\n\n  return element;\n} // Given an x,y position on the editor, get the position in the document.\n\n\nfunction posAtCoords(view, coords) {\n  var assign, assign$1;\n  var doc = view.dom.ownerDocument,\n      node,\n      offset;\n\n  if (doc.caretPositionFromPoint) {\n    try {\n      // Firefox throws for this call in hard-to-predict circumstances (#994)\n      var pos$1 = doc.caretPositionFromPoint(coords.left, coords.top);\n\n      if (pos$1) {\n        assign = pos$1, node = assign.offsetNode, offset = assign.offset;\n      }\n    } catch (_) {}\n  }\n\n  if (!node && doc.caretRangeFromPoint) {\n    var range = doc.caretRangeFromPoint(coords.left, coords.top);\n\n    if (range) {\n      assign$1 = range, node = assign$1.startContainer, offset = assign$1.startOffset;\n    }\n  }\n\n  var elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top + 1),\n      pos;\n\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    var box = view.dom.getBoundingClientRect();\n\n    if (!inRect(coords, box)) {\n      return null;\n    }\n\n    elt = elementFromPoint(view.dom, coords, box);\n\n    if (!elt) {\n      return null;\n    }\n  } // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n\n\n  if (result.safari) {\n    for (var p = elt; node && p; p = parentNode(p)) {\n      if (p.draggable) {\n        node = offset = null;\n      }\n    }\n  }\n\n  elt = targetKludge(elt, coords);\n\n  if (node) {\n    if (result.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length); // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n\n      if (offset < node.childNodes.length) {\n        var next = node.childNodes[offset],\n            box$1;\n\n        if (next.nodeName == \"IMG\" && (box$1 = next.getBoundingClientRect()).right <= coords.left && box$1.bottom > coords.top) {\n          offset++;\n        }\n      }\n    } // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n\n\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 && coords.top > node.lastChild.getBoundingClientRect().bottom) {\n      pos = view.state.doc.content.size;\n    } // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\") {\n      pos = posFromCaret(view, node, offset, coords);\n    }\n  }\n\n  if (pos == null) {\n    pos = posFromElement(view, elt, coords);\n  }\n\n  var desc = view.docView.nearestDesc(elt, true);\n  return {\n    pos: pos,\n    inside: desc ? desc.posAtStart - desc.border : -1\n  };\n}\n\nfunction singleRect(object, bias) {\n  var rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\n\nvar BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/; // : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\n\nfunction coordsAtPos(view, pos, side) {\n  var ref = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n  var node = ref.node;\n  var offset = ref.offset;\n  var supportEmptyRange = result.webkit || result.gecko;\n\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      var rect = singleRect(textRange(node, offset, offset), side); // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n\n      if (result.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        var rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n\n        if (rectBefore.top == rect.top) {\n          var rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n\n          if (rectAfter.top != rect.top) {\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n          }\n        }\n      }\n\n      return rect;\n    } else {\n      var from = offset,\n          to = offset,\n          takeSide = side < 0 ? 1 : -1;\n\n      if (side < 0 && !offset) {\n        to++;\n        takeSide = -1;\n      } else if (side >= 0 && offset == node.nodeValue.length) {\n        from--;\n        takeSide = 1;\n      } else if (side < 0) {\n        from--;\n      } else {\n        to++;\n      }\n\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n    }\n  } // Return a horizontal line in block context\n\n\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      var before = node.childNodes[offset - 1];\n\n      if (before.nodeType == 1) {\n        return flattenH(before.getBoundingClientRect(), false);\n      }\n    }\n\n    if (offset < nodeSize(node)) {\n      var after = node.childNodes[offset];\n\n      if (after.nodeType == 1) {\n        return flattenH(after.getBoundingClientRect(), true);\n      }\n    }\n\n    return flattenH(node.getBoundingClientRect(), side >= 0);\n  } // Inline, not in text node (this is not Bidi-safe)\n\n\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    var before$1 = node.childNodes[offset - 1];\n    var target = before$1.nodeType == 3 ? textRange(before$1, nodeSize(before$1) - (supportEmptyRange ? 0 : 1)) // BR nodes tend to only return the rectangle before them.\n    // Only use them if they are the last element in their parent\n    : before$1.nodeType == 1 && (before$1.nodeName != \"BR\" || !before$1.nextSibling) ? before$1 : null;\n\n    if (target) {\n      return flattenV(singleRect(target, 1), false);\n    }\n  }\n\n  if (offset < nodeSize(node)) {\n    var after$1 = node.childNodes[offset];\n\n    while (after$1.pmViewDesc && after$1.pmViewDesc.ignoreForCoords) {\n      after$1 = after$1.nextSibling;\n    }\n\n    var target$1 = !after$1 ? null : after$1.nodeType == 3 ? textRange(after$1, 0, supportEmptyRange ? 0 : 1) : after$1.nodeType == 1 ? after$1 : null;\n\n    if (target$1) {\n      return flattenV(singleRect(target$1, -1), true);\n    }\n  } // All else failed, just try to get a rectangle for the target node\n\n\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) {\n    return rect;\n  }\n\n  var x = left ? rect.left : rect.right;\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: x,\n    right: x\n  };\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) {\n    return rect;\n  }\n\n  var y = top ? rect.top : rect.bottom;\n  return {\n    top: y,\n    bottom: y,\n    left: rect.left,\n    right: rect.right\n  };\n}\n\nfunction withFlushedState(view, state, f) {\n  var viewState = view.state,\n      active = view.root.activeElement;\n\n  if (viewState != state) {\n    view.updateState(state);\n  }\n\n  if (active != view.dom) {\n    view.focus();\n  }\n\n  try {\n    return f();\n  } finally {\n    if (viewState != state) {\n      view.updateState(viewState);\n    }\n\n    if (active != view.dom && active) {\n      active.focus();\n    }\n  }\n} // : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\n\n\nfunction endOfTextblockVertical(view, state, dir) {\n  var sel = state.selection;\n  var $pos = dir == \"up\" ? sel.$from : sel.$to;\n  return withFlushedState(view, state, function () {\n    var ref = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n    var dom = ref.node;\n\n    for (;;) {\n      var nearest = view.docView.nearestDesc(dom, true);\n\n      if (!nearest) {\n        break;\n      }\n\n      if (nearest.node.isBlock) {\n        dom = nearest.dom;\n        break;\n      }\n\n      dom = nearest.dom.parentNode;\n    }\n\n    var coords = coordsAtPos(view, $pos.pos, 1);\n\n    for (var child = dom.firstChild; child; child = child.nextSibling) {\n      var boxes = void 0;\n\n      if (child.nodeType == 1) {\n        boxes = child.getClientRects();\n      } else if (child.nodeType == 3) {\n        boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n      } else {\n        continue;\n      }\n\n      for (var i = 0; i < boxes.length; i++) {\n        var box = boxes[i];\n\n        if (box.bottom > box.top + 1 && (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2 : box.bottom - coords.bottom > (coords.bottom - box.top) * 2)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  });\n}\n\nvar maybeRTL = /[\\u0590-\\u08ac]/;\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  var ref = state.selection;\n  var $head = ref.$head;\n\n  if (!$head.parent.isTextblock) {\n    return false;\n  }\n\n  var offset = $head.parentOffset,\n      atStart = !offset,\n      atEnd = offset == $head.parent.content.size;\n  var sel = view.root.getSelection(); // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify) {\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n  }\n\n  return withFlushedState(view, state, function () {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    var oldRange = sel.getRangeAt(0),\n        oldNode = sel.focusNode,\n        oldOff = sel.focusOffset;\n    var oldBidiLevel = sel.caretBidiLevel; // Only for Firefox\n\n    sel.modify(\"move\", dir, \"character\");\n    var parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n    var result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) || oldNode == sel.focusNode && oldOff == sel.focusOffset; // Restore the previous selection\n\n    sel.removeAllRanges();\n    sel.addRange(oldRange);\n\n    if (oldBidiLevel != null) {\n      sel.caretBidiLevel = oldBidiLevel;\n    }\n\n    return result;\n  });\n}\n\nvar cachedState = null,\n    cachedDir = null,\n    cachedResult = false;\n\nfunction endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) {\n    return cachedResult;\n  }\n\n  cachedState = state;\n  cachedDir = dir;\n  return cachedResult = dir == \"up\" || dir == \"down\" ? endOfTextblockVertical(view, state, dir) : endOfTextblockHorizontal(view, state, dir);\n} // NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\n\nvar NOT_DIRTY = 0,\n    CHILD_DIRTY = 1,\n    CONTENT_DIRTY = 2,\n    NODE_DIRTY = 3; // Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\n\nvar ViewDesc = function ViewDesc(parent, children, dom, contentDOM) {\n  this.parent = parent;\n  this.children = children;\n  this.dom = dom; // An expando property on the DOM node provides a link back to its\n  // description.\n\n  dom.pmViewDesc = this; // This is the node that holds the child views. It may be null for\n  // descs that don't have children.\n\n  this.contentDOM = contentDOM;\n  this.dirty = NOT_DIRTY;\n};\n\nvar prototypeAccessors = {\n  size: {\n    configurable: true\n  },\n  border: {\n    configurable: true\n  },\n  posBefore: {\n    configurable: true\n  },\n  posAtStart: {\n    configurable: true\n  },\n  posAfter: {\n    configurable: true\n  },\n  posAtEnd: {\n    configurable: true\n  },\n  contentLost: {\n    configurable: true\n  },\n  domAtom: {\n    configurable: true\n  },\n  ignoreForCoords: {\n    configurable: true\n  }\n}; // Used to check whether a given description corresponds to a\n// widget/mark/node.\n\nViewDesc.prototype.matchesWidget = function matchesWidget() {\n  return false;\n};\n\nViewDesc.prototype.matchesMark = function matchesMark() {\n  return false;\n};\n\nViewDesc.prototype.matchesNode = function matchesNode() {\n  return false;\n};\n\nViewDesc.prototype.matchesHack = function matchesHack(_nodeName) {\n  return false;\n}; // : () → ?ParseRule\n// When parsing in-editor content (in domchange.js), we allow\n// descriptions to determine the parse rules that should be used to\n// parse them.\n\n\nViewDesc.prototype.parseRule = function parseRule() {\n  return null;\n}; // : (dom.Event) → bool\n// Used by the editor's event handler to ignore events that come\n// from certain descs.\n\n\nViewDesc.prototype.stopEvent = function stopEvent() {\n  return false;\n}; // The size of the content represented by this desc.\n\n\nprototypeAccessors.size.get = function () {\n  var size = 0;\n\n  for (var i = 0; i < this.children.length; i++) {\n    size += this.children[i].size;\n  }\n\n  return size;\n}; // For block nodes, this represents the space taken up by their\n// start/end tokens.\n\n\nprototypeAccessors.border.get = function () {\n  return 0;\n};\n\nViewDesc.prototype.destroy = function destroy() {\n  this.parent = null;\n\n  if (this.dom.pmViewDesc == this) {\n    this.dom.pmViewDesc = null;\n  }\n\n  for (var i = 0; i < this.children.length; i++) {\n    this.children[i].destroy();\n  }\n};\n\nViewDesc.prototype.posBeforeChild = function posBeforeChild(child) {\n  for (var i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n    var cur = this.children[i];\n\n    if (cur == child) {\n      return pos;\n    }\n\n    pos += cur.size;\n  }\n};\n\nprototypeAccessors.posBefore.get = function () {\n  return this.parent.posBeforeChild(this);\n};\n\nprototypeAccessors.posAtStart.get = function () {\n  return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n};\n\nprototypeAccessors.posAfter.get = function () {\n  return this.posBefore + this.size;\n};\n\nprototypeAccessors.posAtEnd.get = function () {\n  return this.posAtStart + this.size - 2 * this.border;\n}; // : (dom.Node, number, ?number) → number\n\n\nViewDesc.prototype.localPosFromDOM = function localPosFromDOM(dom, offset, bias) {\n  // If the DOM position is in the content, use the child desc after\n  // it to figure out a position.\n  if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n    if (bias < 0) {\n      var domBefore, desc;\n\n      if (dom == this.contentDOM) {\n        domBefore = dom.childNodes[offset - 1];\n      } else {\n        while (dom.parentNode != this.contentDOM) {\n          dom = dom.parentNode;\n        }\n\n        domBefore = dom.previousSibling;\n      }\n\n      while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) {\n        domBefore = domBefore.previousSibling;\n      }\n\n      return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n    } else {\n      var domAfter, desc$1;\n\n      if (dom == this.contentDOM) {\n        domAfter = dom.childNodes[offset];\n      } else {\n        while (dom.parentNode != this.contentDOM) {\n          dom = dom.parentNode;\n        }\n\n        domAfter = dom.nextSibling;\n      }\n\n      while (domAfter && !((desc$1 = domAfter.pmViewDesc) && desc$1.parent == this)) {\n        domAfter = domAfter.nextSibling;\n      }\n\n      return domAfter ? this.posBeforeChild(desc$1) : this.posAtEnd;\n    }\n  } // Otherwise, use various heuristics, falling back on the bias\n  // parameter, to determine whether to return the position at the\n  // start or at the end of this view desc.\n\n\n  var atEnd;\n\n  if (dom == this.dom && this.contentDOM) {\n    atEnd = offset > domIndex(this.contentDOM);\n  } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n    atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n  } else if (this.dom.firstChild) {\n    if (offset == 0) {\n      for (var search = dom;; search = search.parentNode) {\n        if (search == this.dom) {\n          atEnd = false;\n          break;\n        }\n\n        if (search.parentNode.firstChild != search) {\n          break;\n        }\n      }\n    }\n\n    if (atEnd == null && offset == dom.childNodes.length) {\n      for (var search$1 = dom;; search$1 = search$1.parentNode) {\n        if (search$1 == this.dom) {\n          atEnd = true;\n          break;\n        }\n\n        if (search$1.parentNode.lastChild != search$1) {\n          break;\n        }\n      }\n    }\n  }\n\n  return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n}; // Scan up the dom finding the first desc that is a descendant of\n// this one.\n\n\nViewDesc.prototype.nearestDesc = function nearestDesc(dom, onlyNodes) {\n  for (var first = true, cur = dom; cur; cur = cur.parentNode) {\n    var desc = this.getDesc(cur);\n\n    if (desc && (!onlyNodes || desc.node)) {\n      // If dom is outside of this desc's nodeDOM, don't count it.\n      if (first && desc.nodeDOM && !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom)) {\n        first = false;\n      } else {\n        return desc;\n      }\n    }\n  }\n};\n\nViewDesc.prototype.getDesc = function getDesc(dom) {\n  var desc = dom.pmViewDesc;\n\n  for (var cur = desc; cur; cur = cur.parent) {\n    if (cur == this) {\n      return desc;\n    }\n  }\n};\n\nViewDesc.prototype.posFromDOM = function posFromDOM(dom, offset, bias) {\n  for (var scan = dom; scan; scan = scan.parentNode) {\n    var desc = this.getDesc(scan);\n\n    if (desc) {\n      return desc.localPosFromDOM(dom, offset, bias);\n    }\n  }\n\n  return -1;\n}; // : (number) → ?NodeViewDesc\n// Find the desc for the node after the given pos, if any. (When a\n// parent node overrode rendering, there might not be one.)\n\n\nViewDesc.prototype.descAt = function descAt(pos) {\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i],\n        end = offset + child.size;\n\n    if (offset == pos && end != offset) {\n      while (!child.border && child.children.length) {\n        child = child.children[0];\n      }\n\n      return child;\n    }\n\n    if (pos < end) {\n      return child.descAt(pos - offset - child.border);\n    }\n\n    offset = end;\n  }\n}; // : (number, number) → {node: dom.Node, offset: number}\n\n\nViewDesc.prototype.domFromPos = function domFromPos(pos, side) {\n  if (!this.contentDOM) {\n    return {\n      node: this.dom,\n      offset: 0\n    };\n  } // First find the position in the child array\n\n\n  var i = 0,\n      offset = 0;\n\n  for (var curPos = 0; i < this.children.length; i++) {\n    var child = this.children[i],\n        end = curPos + child.size;\n\n    if (end > pos || child instanceof TrailingHackViewDesc) {\n      offset = pos - curPos;\n      break;\n    }\n\n    curPos = end;\n  } // If this points into the middle of a child, call through\n\n\n  if (offset) {\n    return this.children[i].domFromPos(offset - this.children[i].border, side);\n  } // Go back if there were any zero-length widgets with side >= 0 before this point\n\n\n  for (var prev = void 0; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.widget.type.side >= 0; i--) {} // Scan towards the first useable node\n\n\n  if (side <= 0) {\n    var prev$1,\n        enter = true;\n\n    for (;; i--, enter = false) {\n      prev$1 = i ? this.children[i - 1] : null;\n\n      if (!prev$1 || prev$1.dom.parentNode == this.contentDOM) {\n        break;\n      }\n    }\n\n    if (prev$1 && side && enter && !prev$1.border && !prev$1.domAtom) {\n      return prev$1.domFromPos(prev$1.size, side);\n    }\n\n    return {\n      node: this.contentDOM,\n      offset: prev$1 ? domIndex(prev$1.dom) + 1 : 0\n    };\n  } else {\n    var next,\n        enter$1 = true;\n\n    for (;; i++, enter$1 = false) {\n      next = i < this.children.length ? this.children[i] : null;\n\n      if (!next || next.dom.parentNode == this.contentDOM) {\n        break;\n      }\n    }\n\n    if (next && enter$1 && !next.border && !next.domAtom) {\n      return next.domFromPos(0, side);\n    }\n\n    return {\n      node: this.contentDOM,\n      offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length\n    };\n  }\n}; // Used to find a DOM range in a single parent for a given changed\n// range.\n\n\nViewDesc.prototype.parseRange = function parseRange(from, to, base) {\n  if (base === void 0) base = 0;\n\n  if (this.children.length == 0) {\n    return {\n      node: this.contentDOM,\n      from: from,\n      to: to,\n      fromOffset: 0,\n      toOffset: this.contentDOM.childNodes.length\n    };\n  }\n\n  var fromOffset = -1,\n      toOffset = -1;\n\n  for (var offset = base, i = 0;; i++) {\n    var child = this.children[i],\n        end = offset + child.size;\n\n    if (fromOffset == -1 && from <= end) {\n      var childBase = offset + child.border; // FIXME maybe descend mark views to parse a narrower range?\n\n      if (from >= childBase && to <= end - child.border && child.node && child.contentDOM && this.contentDOM.contains(child.contentDOM)) {\n        return child.parseRange(from, to, childBase);\n      }\n\n      from = offset;\n\n      for (var j = i; j > 0; j--) {\n        var prev = this.children[j - 1];\n\n        if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n          fromOffset = domIndex(prev.dom) + 1;\n          break;\n        }\n\n        from -= prev.size;\n      }\n\n      if (fromOffset == -1) {\n        fromOffset = 0;\n      }\n    }\n\n    if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n      to = end;\n\n      for (var j$1 = i + 1; j$1 < this.children.length; j$1++) {\n        var next = this.children[j$1];\n\n        if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n          toOffset = domIndex(next.dom);\n          break;\n        }\n\n        to += next.size;\n      }\n\n      if (toOffset == -1) {\n        toOffset = this.contentDOM.childNodes.length;\n      }\n\n      break;\n    }\n\n    offset = end;\n  }\n\n  return {\n    node: this.contentDOM,\n    from: from,\n    to: to,\n    fromOffset: fromOffset,\n    toOffset: toOffset\n  };\n};\n\nViewDesc.prototype.emptyChildAt = function emptyChildAt(side) {\n  if (this.border || !this.contentDOM || !this.children.length) {\n    return false;\n  }\n\n  var child = this.children[side < 0 ? 0 : this.children.length - 1];\n  return child.size == 0 || child.emptyChildAt(side);\n}; // : (number) → dom.Node\n\n\nViewDesc.prototype.domAfterPos = function domAfterPos(pos) {\n  var ref = this.domFromPos(pos, 0);\n  var node = ref.node;\n  var offset = ref.offset;\n\n  if (node.nodeType != 1 || offset == node.childNodes.length) {\n    throw new RangeError(\"No node after pos \" + pos);\n  }\n\n  return node.childNodes[offset];\n}; // : (number, number, dom.Document)\n// View descs are responsible for setting any selection that falls\n// entirely inside of them, so that custom implementations can do\n// custom things with the selection. Note that this falls apart when\n// a selection starts in such a node and ends in another, in which\n// case we just use whatever domFromPos produces as a best effort.\n\n\nViewDesc.prototype.setSelection = function setSelection(anchor, head, root, force) {\n  // If the selection falls entirely in a child, give it to that child\n  var from = Math.min(anchor, head),\n      to = Math.max(anchor, head);\n\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i],\n        end = offset + child.size;\n\n    if (from > offset && to < end) {\n      return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n    }\n\n    offset = end;\n  }\n\n  var anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n  var headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n  var domSel = root.getSelection();\n  var brKludge = false; // On Firefox, using Selection.collapse to put the cursor after a\n  // BR node for some reason doesn't always work (#1073). On Safari,\n  // the cursor sometimes inexplicable visually lags behind its\n  // reported position in such situations (#1092).\n\n  if ((result.gecko || result.safari) && anchor == head) {\n    var node = anchorDOM.node;\n    var offset$1 = anchorDOM.offset;\n\n    if (node.nodeType == 3) {\n      brKludge = offset$1 && node.nodeValue[offset$1 - 1] == \"\\n\"; // Issue #1128\n\n      if (brKludge && offset$1 == node.nodeValue.length) {\n        for (var scan = node, after = void 0; scan; scan = scan.parentNode) {\n          if (after = scan.nextSibling) {\n            if (after.nodeName == \"BR\") {\n              anchorDOM = headDOM = {\n                node: after.parentNode,\n                offset: domIndex(after) + 1\n              };\n            }\n\n            break;\n          }\n\n          var desc = scan.pmViewDesc;\n\n          if (desc && desc.node && desc.node.isBlock) {\n            break;\n          }\n        }\n      }\n    } else {\n      var prev = node.childNodes[offset$1 - 1];\n      brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n    }\n  } // Firefox can act strangely when the selection is in front of an\n  // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n\n\n  if (result.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n    var after$1 = domSel.focusNode.childNodes[domSel.focusOffset];\n\n    if (after$1 && after$1.contentEditable == \"false\") {\n      force = true;\n    }\n  }\n\n  if (!(force || brKludge && result.safari) && isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) && isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset)) {\n    return;\n  } // Selection.extend can be used to create an 'inverted' selection\n  // (one where the focus is before the anchor), but not all\n  // browsers support it yet.\n\n\n  var domSelExtended = false;\n\n  if ((domSel.extend || anchor == head) && !brKludge) {\n    domSel.collapse(anchorDOM.node, anchorDOM.offset);\n\n    try {\n      if (anchor != head) {\n        domSel.extend(headDOM.node, headDOM.offset);\n      }\n\n      domSelExtended = true;\n    } catch (err) {\n      // In some cases with Chrome the selection is empty after calling\n      // collapse, even when it should be valid. This appears to be a bug, but\n      // it is difficult to isolate. If this happens fallback to the old path\n      // without using extend.\n      if (!(err instanceof DOMException)) {\n        throw err;\n      } // declare global: DOMException\n\n    }\n  }\n\n  if (!domSelExtended) {\n    if (anchor > head) {\n      var tmp = anchorDOM;\n      anchorDOM = headDOM;\n      headDOM = tmp;\n    }\n\n    var range = document.createRange();\n    range.setEnd(headDOM.node, headDOM.offset);\n    range.setStart(anchorDOM.node, anchorDOM.offset);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n  }\n}; // : (dom.MutationRecord) → bool\n\n\nViewDesc.prototype.ignoreMutation = function ignoreMutation(mutation) {\n  return !this.contentDOM && mutation.type != \"selection\";\n};\n\nprototypeAccessors.contentLost.get = function () {\n  return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n}; // Remove a subtree of the element tree that has been touched\n// by a DOM change, so that the next update will redraw it.\n\n\nViewDesc.prototype.markDirty = function markDirty(from, to) {\n  for (var offset = 0, i = 0; i < this.children.length; i++) {\n    var child = this.children[i],\n        end = offset + child.size;\n\n    if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n      var startInside = offset + child.border,\n          endInside = end - child.border;\n\n      if (from >= startInside && to <= endInside) {\n        this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n\n        if (from == startInside && to == endInside && (child.contentLost || child.dom.parentNode != this.contentDOM)) {\n          child.dirty = NODE_DIRTY;\n        } else {\n          child.markDirty(from - startInside, to - startInside);\n        }\n\n        return;\n      } else {\n        child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM ? CONTENT_DIRTY : NODE_DIRTY;\n      }\n    }\n\n    offset = end;\n  }\n\n  this.dirty = CONTENT_DIRTY;\n};\n\nViewDesc.prototype.markParentsDirty = function markParentsDirty() {\n  var level = 1;\n\n  for (var node = this.parent; node; node = node.parent, level++) {\n    var dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n\n    if (node.dirty < dirty) {\n      node.dirty = dirty;\n    }\n  }\n};\n\nprototypeAccessors.domAtom.get = function () {\n  return false;\n};\n\nprototypeAccessors.ignoreForCoords.get = function () {\n  return false;\n};\n\nObject.defineProperties(ViewDesc.prototype, prototypeAccessors); // Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\n\nvar nothing = []; // A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\n\nvar WidgetViewDesc = /*@__PURE__*/function (ViewDesc) {\n  function WidgetViewDesc(parent, widget, view, pos) {\n    var self,\n        dom = widget.type.toDOM;\n\n    if (typeof dom == \"function\") {\n      dom = dom(view, function () {\n        if (!self) {\n          return pos;\n        }\n\n        if (self.parent) {\n          return self.parent.posBeforeChild(self);\n        }\n      });\n    }\n\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        var wrap = document.createElement(\"span\");\n        wrap.appendChild(dom);\n        dom = wrap;\n      }\n\n      dom.contentEditable = false;\n      dom.classList.add(\"ProseMirror-widget\");\n    }\n\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.widget = widget;\n    self = this;\n  }\n\n  if (ViewDesc) WidgetViewDesc.__proto__ = ViewDesc;\n  WidgetViewDesc.prototype = Object.create(ViewDesc && ViewDesc.prototype);\n  WidgetViewDesc.prototype.constructor = WidgetViewDesc;\n  var prototypeAccessors$1 = {\n    domAtom: {\n      configurable: true\n    }\n  };\n\n  WidgetViewDesc.prototype.matchesWidget = function matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n  };\n\n  WidgetViewDesc.prototype.parseRule = function parseRule() {\n    return {\n      ignore: true\n    };\n  };\n\n  WidgetViewDesc.prototype.stopEvent = function stopEvent(event) {\n    var stop = this.widget.spec.stopEvent;\n    return stop ? stop(event) : false;\n  };\n\n  WidgetViewDesc.prototype.ignoreMutation = function ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n  };\n\n  WidgetViewDesc.prototype.destroy = function destroy() {\n    this.widget.type.destroy(this.dom);\n    ViewDesc.prototype.destroy.call(this);\n  };\n\n  prototypeAccessors$1.domAtom.get = function () {\n    return true;\n  };\n\n  Object.defineProperties(WidgetViewDesc.prototype, prototypeAccessors$1);\n  return WidgetViewDesc;\n}(ViewDesc);\n\nvar CompositionViewDesc = /*@__PURE__*/function (ViewDesc) {\n  function CompositionViewDesc(parent, dom, textDOM, text) {\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.textDOM = textDOM;\n    this.text = text;\n  }\n\n  if (ViewDesc) CompositionViewDesc.__proto__ = ViewDesc;\n  CompositionViewDesc.prototype = Object.create(ViewDesc && ViewDesc.prototype);\n  CompositionViewDesc.prototype.constructor = CompositionViewDesc;\n  var prototypeAccessors$2 = {\n    size: {\n      configurable: true\n    }\n  };\n\n  prototypeAccessors$2.size.get = function () {\n    return this.text.length;\n  };\n\n  CompositionViewDesc.prototype.localPosFromDOM = function localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) {\n      return this.posAtStart + (offset ? this.size : 0);\n    }\n\n    return this.posAtStart + offset;\n  };\n\n  CompositionViewDesc.prototype.domFromPos = function domFromPos(pos) {\n    return {\n      node: this.textDOM,\n      offset: pos\n    };\n  };\n\n  CompositionViewDesc.prototype.ignoreMutation = function ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n  };\n\n  Object.defineProperties(CompositionViewDesc.prototype, prototypeAccessors$2);\n  return CompositionViewDesc;\n}(ViewDesc); // A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\n\n\nvar MarkViewDesc = /*@__PURE__*/function (ViewDesc) {\n  function MarkViewDesc(parent, mark, dom, contentDOM) {\n    ViewDesc.call(this, parent, [], dom, contentDOM);\n    this.mark = mark;\n  }\n\n  if (ViewDesc) MarkViewDesc.__proto__ = ViewDesc;\n  MarkViewDesc.prototype = Object.create(ViewDesc && ViewDesc.prototype);\n  MarkViewDesc.prototype.constructor = MarkViewDesc;\n\n  MarkViewDesc.create = function create(parent, mark, inline, view) {\n    var custom = view.nodeViews[mark.type.name];\n    var spec = custom && custom(mark, view, inline);\n\n    if (!spec || !spec.dom) {\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n    }\n\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n  };\n\n  MarkViewDesc.prototype.parseRule = function parseRule() {\n    return {\n      mark: this.mark.type.name,\n      attrs: this.mark.attrs,\n      contentElement: this.contentDOM\n    };\n  };\n\n  MarkViewDesc.prototype.matchesMark = function matchesMark(mark) {\n    return this.dirty != NODE_DIRTY && this.mark.eq(mark);\n  };\n\n  MarkViewDesc.prototype.markDirty = function markDirty(from, to) {\n    ViewDesc.prototype.markDirty.call(this, from, to); // Move dirty info to nearest node view\n\n    if (this.dirty != NOT_DIRTY) {\n      var parent = this.parent;\n\n      while (!parent.node) {\n        parent = parent.parent;\n      }\n\n      if (parent.dirty < this.dirty) {\n        parent.dirty = this.dirty;\n      }\n\n      this.dirty = NOT_DIRTY;\n    }\n  };\n\n  MarkViewDesc.prototype.slice = function slice(from, to, view) {\n    var copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n    var nodes = this.children,\n        size = this.size;\n\n    if (to < size) {\n      nodes = replaceNodes(nodes, to, size, view);\n    }\n\n    if (from > 0) {\n      nodes = replaceNodes(nodes, 0, from, view);\n    }\n\n    for (var i = 0; i < nodes.length; i++) {\n      nodes[i].parent = copy;\n    }\n\n    copy.children = nodes;\n    return copy;\n  };\n\n  return MarkViewDesc;\n}(ViewDesc); // Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\n\n\nvar NodeViewDesc = /*@__PURE__*/function (ViewDesc) {\n  function NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    ViewDesc.call(this, parent, node.isLeaf ? nothing : [], dom, contentDOM);\n    this.nodeDOM = nodeDOM;\n    this.node = node;\n    this.outerDeco = outerDeco;\n    this.innerDeco = innerDeco;\n\n    if (contentDOM) {\n      this.updateChildren(view, pos);\n    }\n  }\n\n  if (ViewDesc) NodeViewDesc.__proto__ = ViewDesc;\n  NodeViewDesc.prototype = Object.create(ViewDesc && ViewDesc.prototype);\n  NodeViewDesc.prototype.constructor = NodeViewDesc;\n  var prototypeAccessors$3 = {\n    size: {\n      configurable: true\n    },\n    border: {\n      configurable: true\n    },\n    domAtom: {\n      configurable: true\n    }\n  }; // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n\n  NodeViewDesc.create = function create(parent, node, outerDeco, innerDeco, view, pos) {\n    var assign;\n    var custom = view.nodeViews[node.type.name],\n        descObj;\n    var spec = custom && custom(node, view, function () {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) {\n        return pos;\n      }\n\n      if (descObj.parent) {\n        return descObj.parent.posBeforeChild(descObj);\n      }\n    }, outerDeco, innerDeco);\n    var dom = spec && spec.dom,\n        contentDOM = spec && spec.contentDOM;\n\n    if (node.isText) {\n      if (!dom) {\n        dom = document.createTextNode(node.text);\n      } else if (dom.nodeType != 3) {\n        throw new RangeError(\"Text must be rendered as a DOM text node\");\n      }\n    } else if (!dom) {\n      assign = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)), dom = assign.dom, contentDOM = assign.contentDOM;\n    }\n\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") {\n      // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) {\n        dom.contentEditable = false;\n      }\n\n      if (node.type.spec.draggable) {\n        dom.draggable = true;\n      }\n    }\n\n    var nodeDOM = dom;\n    dom = applyOuterDeco(dom, outerDeco, node);\n\n    if (spec) {\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos + 1);\n    } else if (node.isText) {\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n    } else {\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1);\n    }\n  };\n\n  NodeViewDesc.prototype.parseRule = function parseRule() {\n    var this$1 = this; // Experimental kludge to allow opt-in re-parsing of nodes\n\n    if (this.node.type.spec.reparseInView) {\n      return null;\n    } // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n\n\n    var rule = {\n      node: this.node.type.name,\n      attrs: this.node.attrs\n    };\n\n    if (this.node.type.whitespace == \"pre\") {\n      rule.preserveWhitespace = \"full\";\n    }\n\n    if (this.contentDOM && !this.contentLost) {\n      rule.contentElement = this.contentDOM;\n    } else {\n      rule.getContent = function () {\n        return this$1.contentDOM ? Fragment.empty : this$1.node.content;\n      };\n    }\n\n    return rule;\n  };\n\n  NodeViewDesc.prototype.matchesNode = function matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) && sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n  };\n\n  prototypeAccessors$3.size.get = function () {\n    return this.node.nodeSize;\n  };\n\n  prototypeAccessors$3.border.get = function () {\n    return this.node.isLeaf ? 0 : 1;\n  }; // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n\n\n  NodeViewDesc.prototype.updateChildren = function updateChildren(view, pos) {\n    var this$1 = this;\n    var inline = this.node.inlineContent,\n        off = pos;\n    var composition = view.composing && this.localCompositionInfo(view, pos);\n    var localComposition = composition && composition.pos > -1 ? composition : null;\n    var compositionInChild = composition && composition.pos < 0;\n    var updater = new ViewTreeUpdater(this, localComposition && localComposition.node);\n    iterDeco(this.node, this.innerDeco, function (widget, i, insideNode) {\n      if (widget.spec.marks) {\n        updater.syncToMarks(widget.spec.marks, inline, view);\n      } else if (widget.type.side >= 0 && !insideNode) {\n        updater.syncToMarks(i == this$1.node.childCount ? Mark.none : this$1.node.child(i).marks, inline, view);\n      } // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n\n\n      updater.placeWidget(widget, view, off);\n    }, function (child, outerDeco, innerDeco, i) {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view); // Try several strategies for drawing this node\n\n      var compIndex;\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;else if (compositionInChild && view.state.selection.from > off && view.state.selection.to < off + child.nodeSize && (compIndex = updater.findIndexWithChild(composition.node)) > -1 && updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ;else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off);\n      }\n      off += child.nodeSize;\n    }); // Drop all remaining descs after the current position.\n\n    updater.syncToMarks(nothing, inline, view);\n\n    if (this.node.isTextblock) {\n      updater.addTextblockHacks();\n    }\n\n    updater.destroyRest(); // Sync the DOM if anything changed\n\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) {\n        this.protectLocalComposition(view, localComposition);\n      }\n\n      renderDescs(this.contentDOM, this.children, view);\n\n      if (result.ios) {\n        iosHacks(this.dom);\n      }\n    }\n  };\n\n  NodeViewDesc.prototype.localCompositionInfo = function localCompositionInfo(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    var ref = view.state.selection;\n    var from = ref.from;\n    var to = ref.to;\n\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) {\n      return;\n    }\n\n    var sel = view.root.getSelection();\n    var textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n\n    if (!textNode || !this.dom.contains(textNode.parentNode)) {\n      return;\n    }\n\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      var text = textNode.nodeValue;\n      var textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n      return textPos < 0 ? null : {\n        node: textNode,\n        pos: textPos,\n        text: text\n      };\n    } else {\n      return {\n        node: textNode,\n        pos: -1\n      };\n    }\n  };\n\n  NodeViewDesc.prototype.protectLocalComposition = function protectLocalComposition(view, ref) {\n    var node = ref.node;\n    var pos = ref.pos;\n    var text = ref.text; // The node is already part of a local view desc, leave it there\n\n    if (this.getDesc(node)) {\n      return;\n    } // Create a composition view for the orphaned nodes\n\n\n    var topNode = node;\n\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) {\n        break;\n      }\n\n      while (topNode.previousSibling) {\n        topNode.parentNode.removeChild(topNode.previousSibling);\n      }\n\n      while (topNode.nextSibling) {\n        topNode.parentNode.removeChild(topNode.nextSibling);\n      }\n\n      if (topNode.pmViewDesc) {\n        topNode.pmViewDesc = null;\n      }\n    }\n\n    var desc = new CompositionViewDesc(this, topNode, node, text);\n    view.compositionNodes.push(desc); // Patch up this.children to contain the composition view\n\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n  }; // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n\n\n  NodeViewDesc.prototype.update = function update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY || !node.sameMarkup(this.node)) {\n      return false;\n    }\n\n    this.updateInner(node, outerDeco, innerDeco, view);\n    return true;\n  };\n\n  NodeViewDesc.prototype.updateInner = function updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco);\n    this.node = node;\n    this.innerDeco = innerDeco;\n\n    if (this.contentDOM) {\n      this.updateChildren(view, this.posAtStart);\n    }\n\n    this.dirty = NOT_DIRTY;\n  };\n\n  NodeViewDesc.prototype.updateOuterDeco = function updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) {\n      return;\n    }\n\n    var needsWrap = this.nodeDOM.nodeType != 1;\n    var oldDOM = this.dom;\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null;\n      this.dom.pmViewDesc = this;\n    }\n\n    this.outerDeco = outerDeco;\n  }; // Mark this node as being the selected node.\n\n\n  NodeViewDesc.prototype.selectNode = function selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n\n    if (this.contentDOM || !this.node.type.spec.draggable) {\n      this.dom.draggable = true;\n    }\n  }; // Remove selected node marking from this node.\n\n\n  NodeViewDesc.prototype.deselectNode = function deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n\n    if (this.contentDOM || !this.node.type.spec.draggable) {\n      this.dom.removeAttribute(\"draggable\");\n    }\n  };\n\n  prototypeAccessors$3.domAtom.get = function () {\n    return this.node.isAtom;\n  };\n\n  Object.defineProperties(NodeViewDesc.prototype, prototypeAccessors$3);\n  return NodeViewDesc;\n}(ViewDesc); // Create a view desc for the top-level document node, to be exported\n// and used by the view class.\n\n\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc);\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n}\n\nvar TextViewDesc = /*@__PURE__*/function (NodeViewDesc) {\n  function TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view);\n  }\n\n  if (NodeViewDesc) TextViewDesc.__proto__ = NodeViewDesc;\n  TextViewDesc.prototype = Object.create(NodeViewDesc && NodeViewDesc.prototype);\n  TextViewDesc.prototype.constructor = TextViewDesc;\n  var prototypeAccessors$4 = {\n    domAtom: {\n      configurable: true\n    }\n  };\n\n  TextViewDesc.prototype.parseRule = function parseRule() {\n    var skip = this.nodeDOM.parentNode;\n\n    while (skip && skip != this.dom && !skip.pmIsDeco) {\n      skip = skip.parentNode;\n    }\n\n    return {\n      skip: skip || true\n    };\n  };\n\n  TextViewDesc.prototype.update = function update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || this.dirty != NOT_DIRTY && !this.inParent() || !node.sameMarkup(this.node)) {\n      return false;\n    }\n\n    this.updateOuterDeco(outerDeco);\n\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text;\n\n      if (view.trackWrites == this.nodeDOM) {\n        view.trackWrites = null;\n      }\n    }\n\n    this.node = node;\n    this.dirty = NOT_DIRTY;\n    return true;\n  };\n\n  TextViewDesc.prototype.inParent = function inParent() {\n    var parentDOM = this.parent.contentDOM;\n\n    for (var n = this.nodeDOM; n; n = n.parentNode) {\n      if (n == parentDOM) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  TextViewDesc.prototype.domFromPos = function domFromPos(pos) {\n    return {\n      node: this.nodeDOM,\n      offset: pos\n    };\n  };\n\n  TextViewDesc.prototype.localPosFromDOM = function localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) {\n      return this.posAtStart + Math.min(offset, this.node.text.length);\n    }\n\n    return NodeViewDesc.prototype.localPosFromDOM.call(this, dom, offset, bias);\n  };\n\n  TextViewDesc.prototype.ignoreMutation = function ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\";\n  };\n\n  TextViewDesc.prototype.slice = function slice(from, to, view) {\n    var node = this.node.cut(from, to),\n        dom = document.createTextNode(node.text);\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n  };\n\n  TextViewDesc.prototype.markDirty = function markDirty(from, to) {\n    NodeViewDesc.prototype.markDirty.call(this, from, to);\n\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length)) {\n      this.dirty = NODE_DIRTY;\n    }\n  };\n\n  prototypeAccessors$4.domAtom.get = function () {\n    return false;\n  };\n\n  Object.defineProperties(TextViewDesc.prototype, prototypeAccessors$4);\n  return TextViewDesc;\n}(NodeViewDesc); // A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\n\n\nvar TrailingHackViewDesc = /*@__PURE__*/function (ViewDesc) {\n  function TrailingHackViewDesc() {\n    ViewDesc.apply(this, arguments);\n  }\n\n  if (ViewDesc) TrailingHackViewDesc.__proto__ = ViewDesc;\n  TrailingHackViewDesc.prototype = Object.create(ViewDesc && ViewDesc.prototype);\n  TrailingHackViewDesc.prototype.constructor = TrailingHackViewDesc;\n  var prototypeAccessors$5 = {\n    domAtom: {\n      configurable: true\n    },\n    ignoreForCoords: {\n      configurable: true\n    }\n  };\n\n  TrailingHackViewDesc.prototype.parseRule = function parseRule() {\n    return {\n      ignore: true\n    };\n  };\n\n  TrailingHackViewDesc.prototype.matchesHack = function matchesHack(nodeName) {\n    return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName;\n  };\n\n  prototypeAccessors$5.domAtom.get = function () {\n    return true;\n  };\n\n  prototypeAccessors$5.ignoreForCoords.get = function () {\n    return this.dom.nodeName == \"IMG\";\n  };\n\n  Object.defineProperties(TrailingHackViewDesc.prototype, prototypeAccessors$5);\n  return TrailingHackViewDesc;\n}(ViewDesc); // A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\n\n\nvar CustomNodeViewDesc = /*@__PURE__*/function (NodeViewDesc) {\n  function CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n    this.spec = spec;\n  }\n\n  if (NodeViewDesc) CustomNodeViewDesc.__proto__ = NodeViewDesc;\n  CustomNodeViewDesc.prototype = Object.create(NodeViewDesc && NodeViewDesc.prototype);\n  CustomNodeViewDesc.prototype.constructor = CustomNodeViewDesc; // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n\n  CustomNodeViewDesc.prototype.update = function update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) {\n      return false;\n    }\n\n    if (this.spec.update) {\n      var result = this.spec.update(node, outerDeco, innerDeco);\n\n      if (result) {\n        this.updateInner(node, outerDeco, innerDeco, view);\n      }\n\n      return result;\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false;\n    } else {\n      return NodeViewDesc.prototype.update.call(this, node, outerDeco, innerDeco, view);\n    }\n  };\n\n  CustomNodeViewDesc.prototype.selectNode = function selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : NodeViewDesc.prototype.selectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.deselectNode = function deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : NodeViewDesc.prototype.deselectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.setSelection = function setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root) : NodeViewDesc.prototype.setSelection.call(this, anchor, head, root, force);\n  };\n\n  CustomNodeViewDesc.prototype.destroy = function destroy() {\n    if (this.spec.destroy) {\n      this.spec.destroy();\n    }\n\n    NodeViewDesc.prototype.destroy.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.stopEvent = function stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n  };\n\n  CustomNodeViewDesc.prototype.ignoreMutation = function ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : NodeViewDesc.prototype.ignoreMutation.call(this, mutation);\n  };\n\n  return CustomNodeViewDesc;\n}(NodeViewDesc); // : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\n\n\nfunction renderDescs(parentDOM, descs, view) {\n  var dom = parentDOM.firstChild,\n      written = false;\n\n  for (var i = 0; i < descs.length; i++) {\n    var desc = descs[i],\n        childDOM = desc.dom;\n\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) {\n        dom = rm(dom);\n        written = true;\n      }\n\n      dom = dom.nextSibling;\n    } else {\n      written = true;\n      parentDOM.insertBefore(childDOM, dom);\n    }\n\n    if (desc instanceof MarkViewDesc) {\n      var pos = dom ? dom.previousSibling : parentDOM.lastChild;\n      renderDescs(desc.contentDOM, desc.children, view);\n      dom = pos ? pos.nextSibling : parentDOM.firstChild;\n    }\n  }\n\n  while (dom) {\n    dom = rm(dom);\n    written = true;\n  }\n\n  if (written && view.trackWrites == parentDOM) {\n    view.trackWrites = null;\n  }\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) {\n    this.nodeName = nodeName;\n  }\n}\n\nOuterDecoLevel.prototype = Object.create(null);\nvar noDeco = [new OuterDecoLevel()];\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) {\n    return noDeco;\n  }\n\n  var top = needsWrap ? noDeco[0] : new OuterDecoLevel(),\n      result = [top];\n\n  for (var i = 0; i < outerDeco.length; i++) {\n    var attrs = outerDeco[i].type.attrs;\n\n    if (!attrs) {\n      continue;\n    }\n\n    if (attrs.nodeName) {\n      result.push(top = new OuterDecoLevel(attrs.nodeName));\n    }\n\n    for (var name in attrs) {\n      var val = attrs[name];\n\n      if (val == null) {\n        continue;\n      }\n\n      if (needsWrap && result.length == 1) {\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n      }\n\n      if (name == \"class\") {\n        top.class = (top.class ? top.class + \" \" : \"\") + val;\n      } else if (name == \"style\") {\n        top.style = (top.style ? top.style + \";\" : \"\") + val;\n      } else if (name != \"nodeName\") {\n        top[name] = val;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) {\n    return nodeDOM;\n  }\n\n  var curDOM = nodeDOM;\n\n  for (var i = 0; i < curComputed.length; i++) {\n    var deco = curComputed[i],\n        prev = prevComputed[i];\n\n    if (i) {\n      var parent = void 0;\n\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM && (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent;\n      } else {\n        parent = document.createElement(deco.nodeName);\n        parent.pmIsDeco = true;\n        parent.appendChild(curDOM);\n        prev = noDeco[0];\n        curDOM = parent;\n      }\n    }\n\n    patchAttributes(curDOM, prev || noDeco[0], deco);\n  }\n\n  return curDOM;\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (var name in prev) {\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur)) {\n      dom.removeAttribute(name);\n    }\n  }\n\n  for (var name$1 in cur) {\n    if (name$1 != \"class\" && name$1 != \"style\" && name$1 != \"nodeName\" && cur[name$1] != prev[name$1]) {\n      dom.setAttribute(name$1, cur[name$1]);\n    }\n  }\n\n  if (prev.class != cur.class) {\n    var prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing;\n    var curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing;\n\n    for (var i = 0; i < prevList.length; i++) {\n      if (curList.indexOf(prevList[i]) == -1) {\n        dom.classList.remove(prevList[i]);\n      }\n    }\n\n    for (var i$1 = 0; i$1 < curList.length; i$1++) {\n      if (prevList.indexOf(curList[i$1]) == -1) {\n        dom.classList.add(curList[i$1]);\n      }\n    }\n\n    if (dom.classList.length == 0) {\n      dom.removeAttribute(\"class\");\n    }\n  }\n\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      var prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g,\n          m;\n\n      while (m = prop.exec(prev.style)) {\n        dom.style.removeProperty(m[1]);\n      }\n    }\n\n    if (cur.style) {\n      dom.style.cssText += cur.style;\n    }\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n} // : ([Decoration], [Decoration]) → bool\n\n\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    if (!a[i].type.eq(b[i].type)) {\n      return false;\n    }\n  }\n\n  return true;\n} // Remove a DOM node and return its next sibling.\n\n\nfunction rm(dom) {\n  var next = dom.nextSibling;\n  dom.parentNode.removeChild(dom);\n  return next;\n} // Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\n\n\nvar ViewTreeUpdater = function ViewTreeUpdater(top, lockedNode) {\n  this.top = top;\n  this.lock = lockedNode; // Index into `this.top`'s child array, represents the current\n  // update position.\n\n  this.index = 0; // When entering a mark, the current top and index are pushed\n  // onto this.\n\n  this.stack = []; // Tracks whether anything was changed\n\n  this.changed = false;\n  this.preMatch = preMatch(top.node.content, top);\n}; // Destroy and remove the children between the given indices in\n// `this.top`.\n\n\nViewTreeUpdater.prototype.destroyBetween = function destroyBetween(start, end) {\n  if (start == end) {\n    return;\n  }\n\n  for (var i = start; i < end; i++) {\n    this.top.children[i].destroy();\n  }\n\n  this.top.children.splice(start, end - start);\n  this.changed = true;\n}; // Destroy all remaining children in `this.top`.\n\n\nViewTreeUpdater.prototype.destroyRest = function destroyRest() {\n  this.destroyBetween(this.index, this.top.children.length);\n}; // : ([Mark], EditorView)\n// Sync the current stack of mark descs with the given array of\n// marks, reusing existing mark descs when possible.\n\n\nViewTreeUpdater.prototype.syncToMarks = function syncToMarks(marks, inline, view) {\n  var keep = 0,\n      depth = this.stack.length >> 1;\n  var maxKeep = Math.min(depth, marks.length);\n\n  while (keep < maxKeep && (keep == depth - 1 ? this.top : this.stack[keep + 1 << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false) {\n    keep++;\n  }\n\n  while (keep < depth) {\n    this.destroyRest();\n    this.top.dirty = NOT_DIRTY;\n    this.index = this.stack.pop();\n    this.top = this.stack.pop();\n    depth--;\n  }\n\n  while (depth < marks.length) {\n    this.stack.push(this.top, this.index + 1);\n    var found = -1;\n\n    for (var i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n      if (this.top.children[i].matchesMark(marks[depth])) {\n        found = i;\n        break;\n      }\n    }\n\n    if (found > -1) {\n      if (found > this.index) {\n        this.changed = true;\n        this.destroyBetween(this.index, found);\n      }\n\n      this.top = this.top.children[this.index];\n    } else {\n      var markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n      this.top.children.splice(this.index, 0, markDesc);\n      this.top = markDesc;\n      this.changed = true;\n    }\n\n    this.index = 0;\n    depth++;\n  }\n}; // : (Node, [Decoration], DecorationSource) → bool\n// Try to find a node desc matching the given data. Skip over it and\n// return true when successful.\n\n\nViewTreeUpdater.prototype.findNodeMatch = function findNodeMatch(node, outerDeco, innerDeco, index) {\n  var found = -1,\n      targetDesc;\n\n  if (index >= this.preMatch.index && (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top && targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n    found = this.top.children.indexOf(targetDesc, this.index);\n  } else {\n    for (var i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n      var child = this.top.children[i];\n\n      if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n        found = i;\n        break;\n      }\n    }\n  }\n\n  if (found < 0) {\n    return false;\n  }\n\n  this.destroyBetween(this.index, found);\n  this.index++;\n  return true;\n};\n\nViewTreeUpdater.prototype.updateNodeAt = function updateNodeAt(node, outerDeco, innerDeco, index, view) {\n  var child = this.top.children[index];\n\n  if (!child.update(node, outerDeco, innerDeco, view)) {\n    return false;\n  }\n\n  this.destroyBetween(this.index, index);\n  this.index = index + 1;\n  return true;\n};\n\nViewTreeUpdater.prototype.findIndexWithChild = function findIndexWithChild(domNode) {\n  for (;;) {\n    var parent = domNode.parentNode;\n\n    if (!parent) {\n      return -1;\n    }\n\n    if (parent == this.top.contentDOM) {\n      var desc = domNode.pmViewDesc;\n\n      if (desc) {\n        for (var i = this.index; i < this.top.children.length; i++) {\n          if (this.top.children[i] == desc) {\n            return i;\n          }\n        }\n      }\n\n      return -1;\n    }\n\n    domNode = parent;\n  }\n}; // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n// Try to update the next node, if any, to the given data. Checks\n// pre-matches to avoid overwriting nodes that could still be used.\n\n\nViewTreeUpdater.prototype.updateNextNode = function updateNextNode(node, outerDeco, innerDeco, view, index) {\n  for (var i = this.index; i < this.top.children.length; i++) {\n    var next = this.top.children[i];\n\n    if (next instanceof NodeViewDesc) {\n      var preMatch = this.preMatch.matched.get(next);\n\n      if (preMatch != null && preMatch != index) {\n        return false;\n      }\n\n      var nextDOM = next.dom; // Can't update if nextDOM is or contains this.lock, except if\n      // it's a text node whose content already matches the new text\n      // and whose decorations match the new ones.\n\n      var locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) && !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text && next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n\n      if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n        this.destroyBetween(this.index, i);\n\n        if (next.dom != nextDOM) {\n          this.changed = true;\n        }\n\n        this.index++;\n        return true;\n      }\n\n      break;\n    }\n  }\n\n  return false;\n}; // : (Node, [Decoration], DecorationSource, EditorView)\n// Insert the node as a newly created node desc.\n\n\nViewTreeUpdater.prototype.addNode = function addNode(node, outerDeco, innerDeco, view, pos) {\n  this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n  this.changed = true;\n};\n\nViewTreeUpdater.prototype.placeWidget = function placeWidget(widget, view, pos) {\n  var next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n\n  if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n    this.index++;\n  } else {\n    var desc = new WidgetViewDesc(this.top, widget, view, pos);\n    this.top.children.splice(this.index++, 0, desc);\n    this.changed = true;\n  }\n}; // Make sure a textblock looks and behaves correctly in\n// contentEditable.\n\n\nViewTreeUpdater.prototype.addTextblockHacks = function addTextblockHacks() {\n  var lastChild = this.top.children[this.index - 1];\n\n  while (lastChild instanceof MarkViewDesc) {\n    lastChild = lastChild.children[lastChild.children.length - 1];\n  }\n\n  if (!lastChild || // Empty textblock\n  !(lastChild instanceof TextViewDesc) || /\\n$/.test(lastChild.node.text)) {\n    // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n    if ((result.safari || result.chrome) && lastChild && lastChild.dom.contentEditable == \"false\") {\n      this.addHackNode(\"IMG\");\n    }\n\n    this.addHackNode(\"BR\");\n  }\n};\n\nViewTreeUpdater.prototype.addHackNode = function addHackNode(nodeName) {\n  if (this.index < this.top.children.length && this.top.children[this.index].matchesHack(nodeName)) {\n    this.index++;\n  } else {\n    var dom = document.createElement(nodeName);\n\n    if (nodeName == \"IMG\") {\n      dom.className = \"ProseMirror-separator\";\n    }\n\n    if (nodeName == \"BR\") {\n      dom.className = \"ProseMirror-trailingBreak\";\n    }\n\n    this.top.children.splice(this.index++, 0, new TrailingHackViewDesc(this.top, nothing, dom, null));\n    this.changed = true;\n  }\n}; // : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>, matches: ViewDesc[]}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\n\n\nfunction preMatch(frag, parentDesc) {\n  var curDesc = parentDesc,\n      descI = curDesc.children.length;\n  var fI = frag.childCount,\n      matched = new Map(),\n      matches = [];\n\n  outer: while (fI > 0) {\n    var desc = void 0;\n\n    for (;;) {\n      if (descI) {\n        var next = curDesc.children[descI - 1];\n\n        if (next instanceof MarkViewDesc) {\n          curDesc = next;\n          descI = next.children.length;\n        } else {\n          desc = next;\n          descI--;\n          break;\n        }\n      } else if (curDesc == parentDesc) {\n        break outer;\n      } else {\n        // FIXME\n        descI = curDesc.parent.children.indexOf(curDesc);\n        curDesc = curDesc.parent;\n      }\n    }\n\n    var node = desc.node;\n\n    if (!node) {\n      continue;\n    }\n\n    if (node != frag.child(fI - 1)) {\n      break;\n    }\n\n    --fI;\n    matched.set(desc, fI);\n    matches.push(desc);\n  }\n\n  return {\n    index: fI,\n    matched: matched,\n    matches: matches.reverse()\n  };\n}\n\nfunction compareSide(a, b) {\n  return a.type.side - b.type.side;\n} // : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\n\n\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  var locals = deco.locals(parent),\n      offset = 0; // Simple, cheap variant for when there are no local decorations\n\n  if (locals.length == 0) {\n    for (var i = 0; i < parent.childCount; i++) {\n      var child = parent.child(i);\n      onNode(child, locals, deco.forChild(offset, child), i);\n      offset += child.nodeSize;\n    }\n\n    return;\n  }\n\n  var decoIndex = 0,\n      active = [],\n      restNode = null;\n\n  for (var parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      var widget = locals[decoIndex++],\n          widgets = void 0;\n\n      while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n        (widgets || (widgets = [widget])).push(locals[decoIndex++]);\n      }\n\n      if (widgets) {\n        widgets.sort(compareSide);\n\n        for (var i$1 = 0; i$1 < widgets.length; i$1++) {\n          onWidget(widgets[i$1], parentIndex, !!restNode);\n        }\n      } else {\n        onWidget(widget, parentIndex, !!restNode);\n      }\n    }\n\n    var child$1 = void 0,\n        index = void 0;\n\n    if (restNode) {\n      index = -1;\n      child$1 = restNode;\n      restNode = null;\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex;\n      child$1 = parent.child(parentIndex++);\n    } else {\n      break;\n    }\n\n    for (var i$2 = 0; i$2 < active.length; i$2++) {\n      if (active[i$2].to <= offset) {\n        active.splice(i$2--, 1);\n      }\n    }\n\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset) {\n      active.push(locals[decoIndex++]);\n    }\n\n    var end = offset + child$1.nodeSize;\n\n    if (child$1.isText) {\n      var cutAt = end;\n\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) {\n        cutAt = locals[decoIndex].from;\n      }\n\n      for (var i$3 = 0; i$3 < active.length; i$3++) {\n        if (active[i$3].to < cutAt) {\n          cutAt = active[i$3].to;\n        }\n      }\n\n      if (cutAt < end) {\n        restNode = child$1.cut(cutAt - offset);\n        child$1 = child$1.cut(0, cutAt - offset);\n        end = cutAt;\n        index = -1;\n      }\n    }\n\n    var outerDeco = !active.length ? nothing : child$1.isInline && !child$1.isLeaf ? active.filter(function (d) {\n      return !d.inline;\n    }) : active.slice();\n    onNode(child$1, outerDeco, deco.forChild(offset, child$1), index);\n    offset = end;\n  }\n} // List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\n\n\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    var oldCSS = dom.style.cssText;\n    dom.style.cssText = oldCSS + \"; list-style: square !important\";\n    window.getComputedStyle(dom).listStyle;\n    dom.style.cssText = oldCSS;\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) {\n      return node;\n    }\n\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3) {\n        return node.childNodes[offset];\n      }\n\n      node = node.childNodes[offset - 1];\n      offset = nodeSize(node);\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset];\n      offset = 0;\n    } else {\n      return null;\n    }\n  }\n} // Find a piece of text in an inline fragment, overlapping from-to\n\n\nfunction findTextInFragment(frag, text, from, to) {\n  for (var i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    var child = frag.child(i++),\n        childStart = pos;\n    pos += child.nodeSize;\n\n    if (!child.isText) {\n      continue;\n    }\n\n    var str = child.text;\n\n    while (i < frag.childCount) {\n      var next = frag.child(i++);\n      pos += next.nodeSize;\n\n      if (!next.isText) {\n        break;\n      }\n\n      str += next.text;\n    }\n\n    if (pos >= from && childStart < to) {\n      var found = str.lastIndexOf(text, to - childStart - 1);\n\n      if (found >= 0 && found + text.length + childStart >= from) {\n        return childStart + found;\n      }\n    }\n  }\n\n  return -1;\n} // Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\n\n\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  var result = [];\n\n  for (var i = 0, off = 0; i < nodes.length; i++) {\n    var child = nodes[i],\n        start = off,\n        end = off += child.size;\n\n    if (start >= to || end <= from) {\n      result.push(child);\n    } else {\n      if (start < from) {\n        result.push(child.slice(0, from - start, view));\n      }\n\n      if (replacement) {\n        result.push(replacement);\n        replacement = null;\n      }\n\n      if (end > to) {\n        result.push(child.slice(to - start, child.size, view));\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction selectionFromDOM(view, origin) {\n  var domSel = view.root.getSelection(),\n      doc = view.state.doc;\n\n  if (!domSel.focusNode) {\n    return null;\n  }\n\n  var nearestDesc = view.docView.nearestDesc(domSel.focusNode),\n      inWidget = nearestDesc && nearestDesc.size == 0;\n  var head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n\n  if (head < 0) {\n    return null;\n  }\n\n  var $head = doc.resolve(head),\n      $anchor,\n      selection;\n\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head;\n\n    while (nearestDesc && !nearestDesc.node) {\n      nearestDesc = nearestDesc.parent;\n    }\n\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      var pos = nearestDesc.posBefore;\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n    }\n  } else {\n    var anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n\n    if (anchor < 0) {\n      return null;\n    }\n\n    $anchor = doc.resolve(anchor);\n  }\n\n  if (!selection) {\n    var bias = origin == \"pointer\" || view.state.selection.head < $head.pos && !inWidget ? 1 : -1;\n    selection = selectionBetween(view, $anchor, $head, bias);\n  }\n\n  return selection;\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() : hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\n\nfunction selectionToDOM(view, force) {\n  var sel = view.state.selection;\n  syncNodeSelection(view, sel);\n\n  if (!editorOwnsSelection(view)) {\n    return;\n  }\n\n  if (!force && view.mouseDown && view.mouseDown.allowDefault) {\n    var domSel = view.root.getSelection(),\n        curSel = view.domObserver.currentSelection;\n\n    if (domSel.anchorNode && isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n      view.mouseDown.delayedSelectionSync = true;\n      view.domObserver.setCurSelection();\n      return;\n    }\n  }\n\n  view.domObserver.disconnectSelection();\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view);\n  } else {\n    var anchor = sel.anchor;\n    var head = sel.head;\n    var resetEditableFrom, resetEditableTo;\n\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent) {\n        resetEditableFrom = temporarilyEditableNear(view, sel.from);\n      }\n\n      if (!sel.empty && !sel.$from.parent.inlineContent) {\n        resetEditableTo = temporarilyEditableNear(view, sel.to);\n      }\n    }\n\n    view.docView.setSelection(anchor, head, view.root, force);\n\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) {\n        resetEditable(resetEditableFrom);\n      }\n\n      if (resetEditableTo) {\n        resetEditable(resetEditableTo);\n      }\n    }\n\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\");\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\");\n\n      if (\"onselectionchange\" in document) {\n        removeClassOnSelectionChange(view);\n      }\n    }\n  }\n\n  view.domObserver.setCurSelection();\n  view.domObserver.connectSelection();\n} // Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\n\nvar brokenSelectBetweenUneditable = result.safari || result.chrome && result.chrome_version < 63;\n\nfunction temporarilyEditableNear(view, pos) {\n  var ref = view.docView.domFromPos(pos, 0);\n  var node = ref.node;\n  var offset = ref.offset;\n  var after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n  var before = offset ? node.childNodes[offset - 1] : null;\n\n  if (result.safari && after && after.contentEditable == \"false\") {\n    return setEditable(after);\n  }\n\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) {\n      return setEditable(after);\n    } else if (before) {\n      return setEditable(before);\n    }\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\";\n\n  if (result.safari && element.draggable) {\n    element.draggable = false;\n    element.wasDraggable = true;\n  }\n\n  return element;\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\";\n\n  if (element.wasDraggable) {\n    element.draggable = true;\n    element.wasDraggable = null;\n  }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  var doc = view.dom.ownerDocument;\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n  var domSel = view.root.getSelection();\n  var node = domSel.anchorNode,\n      offset = domSel.anchorOffset;\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = function () {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n      setTimeout(function () {\n        if (!editorOwnsSelection(view) || view.state.selection.visible) {\n          view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n      }, 20);\n    }\n  });\n}\n\nfunction selectCursorWrapper(view) {\n  var domSel = view.root.getSelection(),\n      range = document.createRange();\n  var node = view.cursorWrapper.dom,\n      img = node.nodeName == \"IMG\";\n\n  if (img) {\n    range.setEnd(node.parentNode, domIndex(node) + 1);\n  } else {\n    range.setEnd(node, 0);\n  }\n\n  range.collapse(false);\n  domSel.removeAllRanges();\n  domSel.addRange(range); // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n\n  if (!img && !view.state.selection.visible && result.ie && result.ie_version <= 11) {\n    node.disabled = true;\n    node.disabled = false;\n  }\n}\n\nfunction syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    var desc = view.docView.descAt(sel.from);\n\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view);\n\n      if (desc) {\n        desc.selectNode();\n      }\n\n      view.lastSelectedViewDesc = desc;\n    }\n  } else {\n    clearNodeSelection(view);\n  }\n} // Clear all DOM statefulness of the last node selection.\n\n\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent) {\n      view.lastSelectedViewDesc.deselectNode();\n    }\n\n    view.lastSelectedViewDesc = null;\n  }\n}\n\nfunction selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", function (f) {\n    return f(view, $anchor, $head);\n  }) || TextSelection.between($anchor, $head, bias);\n}\n\nfunction hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) {\n    return false;\n  }\n\n  return hasSelection(view);\n}\n\nfunction hasSelection(view) {\n  var sel = view.root.getSelection();\n\n  if (!sel.anchorNode) {\n    return false;\n  }\n\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) && (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction anchorInRightPlace(view) {\n  var anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n  var domSel = view.root.getSelection();\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n  var ref = state.selection;\n  var $anchor = ref.$anchor;\n  var $head = ref.$head;\n  var $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n  var $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n  return $start && Selection.findFrom($start, dir);\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n  return true;\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  var sel = view.state.selection;\n\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false;\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      var next = moveSelectionBlock(view.state, dir);\n\n      if (next && next instanceof NodeSelection) {\n        return apply(view, next);\n      }\n\n      return false;\n    } else if (!(result.mac && mods.indexOf(\"m\") > -1)) {\n      var $head = sel.$head,\n          node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter,\n          desc;\n\n      if (!node || node.isText) {\n        return false;\n      }\n\n      var nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) {\n        return false;\n      }\n\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n      } else if (result.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n      } else {\n        return false;\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n  } else {\n    var next$1 = moveSelectionBlock(view.state, dir);\n\n    if (next$1) {\n      return apply(view, next$1);\n    }\n\n    return false;\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\n\nfunction isIgnorable(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\");\n} // Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\n\n\nfunction skipIgnoredNodesLeft(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode,\n      offset = sel.focusOffset;\n\n  if (!node) {\n    return;\n  }\n\n  var moveNode,\n      moveOffset,\n      force = false; // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n\n  if (result.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) {\n    force = true;\n  }\n\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break;\n      } else {\n        var before = node.childNodes[offset - 1];\n\n        if (isIgnorable(before)) {\n          moveNode = node;\n          moveOffset = --offset;\n        } else if (before.nodeType == 3) {\n          node = before;\n          offset = node.nodeValue.length;\n        } else {\n          break;\n        }\n      }\n    } else if (isBlockNode(node)) {\n      break;\n    } else {\n      var prev = node.previousSibling;\n\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode;\n        moveOffset = domIndex(prev);\n        prev = prev.previousSibling;\n      }\n\n      if (!prev) {\n        node = node.parentNode;\n\n        if (node == view.dom) {\n          break;\n        }\n\n        offset = 0;\n      } else {\n        node = prev;\n        offset = nodeLen(node);\n      }\n    }\n  }\n\n  if (force) {\n    setSelFocus(view, sel, node, offset);\n  } else if (moveNode) {\n    setSelFocus(view, sel, moveNode, moveOffset);\n  }\n} // Make sure the cursor isn't directly before one or more ignored\n// nodes.\n\n\nfunction skipIgnoredNodesRight(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode,\n      offset = sel.focusOffset;\n\n  if (!node) {\n    return;\n  }\n\n  var len = nodeLen(node);\n  var moveNode, moveOffset;\n\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) {\n        break;\n      }\n\n      var after = node.childNodes[offset];\n\n      if (isIgnorable(after)) {\n        moveNode = node;\n        moveOffset = ++offset;\n      } else {\n        break;\n      }\n    } else if (isBlockNode(node)) {\n      break;\n    } else {\n      var next = node.nextSibling;\n\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode;\n        moveOffset = domIndex(next) + 1;\n        next = next.nextSibling;\n      }\n\n      if (!next) {\n        node = node.parentNode;\n\n        if (node == view.dom) {\n          break;\n        }\n\n        offset = len = 0;\n      } else {\n        node = next;\n        offset = 0;\n        len = nodeLen(node);\n      }\n    }\n  }\n\n  if (moveNode) {\n    setSelFocus(view, sel, moveNode, moveOffset);\n  }\n}\n\nfunction isBlockNode(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.node && desc.node.isBlock;\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    var range = document.createRange();\n    range.setEnd(node, offset);\n    range.setStart(node, offset);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  } else if (sel.extend) {\n    sel.extend(node, offset);\n  }\n\n  view.domObserver.setCurSelection();\n  var state = view.state; // If no state update ends up happening, reset the selection.\n\n  setTimeout(function () {\n    if (view.state == state) {\n      selectionToDOM(view);\n    }\n  }, 50);\n} // : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\n\n\nfunction selectVertically(view, dir, mods) {\n  var sel = view.state.selection;\n\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) {\n    return false;\n  }\n\n  if (result.mac && mods.indexOf(\"m\") > -1) {\n    return false;\n  }\n\n  var $from = sel.$from;\n  var $to = sel.$to;\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    var next = moveSelectionBlock(view.state, dir);\n\n    if (next && next instanceof NodeSelection) {\n      return apply(view, next);\n    }\n  }\n\n  if (!$from.parent.inlineContent) {\n    var side = dir < 0 ? $from : $to;\n    var beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n    return beyond ? apply(view, beyond) : false;\n  }\n\n  return false;\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) {\n    return true;\n  }\n\n  var ref = view.state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  var empty = ref.empty;\n\n  if (!$head.sameParent($anchor)) {\n    return true;\n  }\n\n  if (!empty) {\n    return false;\n  }\n\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n    return true;\n  }\n\n  var nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n\n  if (nextNode && !nextNode.isText) {\n    var tr = view.state.tr;\n\n    if (dir < 0) {\n      tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n    } else {\n      tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n    }\n\n    view.dispatch(tr);\n    return true;\n  }\n\n  return false;\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop();\n  node.contentEditable = state;\n  view.domObserver.start();\n} // Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\n\n\nfunction safariDownArrowBug(view) {\n  if (!result.safari || view.state.selection.$head.parentOffset > 0) {\n    return;\n  }\n\n  var ref = view.root.getSelection();\n  var focusNode = ref.focusNode;\n  var focusOffset = ref.focusOffset;\n\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 && focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    var child = focusNode.firstChild;\n    switchEditable(view, child, true);\n    setTimeout(function () {\n      return switchEditable(view, child, false);\n    }, 20);\n  }\n} // A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\n\nfunction getMods(event) {\n  var result = \"\";\n\n  if (event.ctrlKey) {\n    result += \"c\";\n  }\n\n  if (event.metaKey) {\n    result += \"m\";\n  }\n\n  if (event.altKey) {\n    result += \"a\";\n  }\n\n  if (event.shiftKey) {\n    result += \"s\";\n  }\n\n  return result;\n}\n\nfunction captureKeyDown(view, event) {\n  var code = event.keyCode,\n      mods = getMods(event);\n\n  if (code == 8 || result.mac && code == 72 && mods == \"c\") {\n    // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view);\n  } else if (code == 46 || result.mac && code == 68 && mods == \"c\") {\n    // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view);\n  } else if (code == 13 || code == 27) {\n    // Enter, Esc\n    return true;\n  } else if (code == 37) {\n    // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view);\n  } else if (code == 39) {\n    // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view);\n  } else if (code == 38) {\n    // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view);\n  } else if (code == 40) {\n    // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view);\n  } else if (mods == (result.mac ? \"m\" : \"c\") && (code == 66 || code == 73 || code == 89 || code == 90)) {\n    // Mod-[biyz]\n    return true;\n  }\n\n  return false;\n} // Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\n\nfunction parseBetween(view, from_, to_) {\n  var ref = view.docView.parseRange(from_, to_);\n  var parent = ref.node;\n  var fromOffset = ref.fromOffset;\n  var toOffset = ref.toOffset;\n  var from = ref.from;\n  var to = ref.to;\n  var domSel = view.root.getSelection(),\n      find = null,\n      anchor = domSel.anchorNode;\n\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{\n      node: anchor,\n      offset: domSel.anchorOffset\n    }];\n\n    if (!selectionCollapsed(domSel)) {\n      find.push({\n        node: domSel.focusNode,\n        offset: domSel.focusOffset\n      });\n    }\n  } // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n\n\n  if (result.chrome && view.lastKeyCode === 8) {\n    for (var off = toOffset; off > fromOffset; off--) {\n      var node = parent.childNodes[off - 1],\n          desc = node.pmViewDesc;\n\n      if (node.nodeName == \"BR\" && !desc) {\n        toOffset = off;\n        break;\n      }\n\n      if (!desc || desc.size) {\n        break;\n      }\n    }\n  }\n\n  var startDoc = view.state.doc;\n  var parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n  var $from = startDoc.resolve(from);\n  var sel = null,\n      doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode: ruleFromNode,\n    context: $from\n  });\n\n  if (find && find[0].pos != null) {\n    var anchor$1 = find[0].pos,\n        head = find[1] && find[1].pos;\n\n    if (head == null) {\n      head = anchor$1;\n    }\n\n    sel = {\n      anchor: anchor$1 + from,\n      head: head + from\n    };\n  }\n\n  return {\n    doc: doc,\n    sel: sel,\n    from: from,\n    to: to\n  };\n}\n\nfunction ruleFromNode(dom) {\n  var desc = dom.pmViewDesc;\n\n  if (desc) {\n    return desc.parseRule();\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (result.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      var skip = document.createElement(\"div\");\n      skip.appendChild(document.createElement(\"li\"));\n      return {\n        skip: skip\n      };\n    } else if (dom.parentNode.lastChild == dom || result.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {\n        ignore: true\n      };\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {\n      ignore: true\n    };\n  }\n}\n\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    var origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null;\n    var newSel = selectionFromDOM(view, origin);\n\n    if (newSel && !view.state.selection.eq(newSel)) {\n      var tr$1 = view.state.tr.setSelection(newSel);\n\n      if (origin == \"pointer\") {\n        tr$1.setMeta(\"pointer\", true);\n      } else if (origin == \"key\") {\n        tr$1.scrollIntoView();\n      }\n\n      view.dispatch(tr$1);\n    }\n\n    return;\n  }\n\n  var $before = view.state.doc.resolve(from);\n  var shared = $before.sharedDepth(to);\n  from = $before.before(shared + 1);\n  to = view.state.doc.resolve(to).after(shared + 1);\n  var sel = view.state.selection;\n  var parse = parseBetween(view, from, to); // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n\n  if (result.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    var text = view.cursorWrapper.deco.type.toDOM.nextSibling;\n    var size = text && text.nodeValue ? text.nodeValue.length : 1;\n    parse.sel = {\n      anchor: parse.sel.anchor + size,\n      head: parse.sel.anchor + size\n    };\n  }\n\n  var doc = view.state.doc,\n      compare = doc.slice(parse.from, parse.to);\n  var preferredPos, preferredSide; // Prefer anchoring to end when Backspace is pressed\n\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to;\n    preferredSide = \"end\";\n  } else {\n    preferredPos = view.state.selection.from;\n    preferredSide = \"start\";\n  }\n\n  view.lastKeyCode = null;\n  var change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) && !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {\n        start: sel.from,\n        endA: sel.to,\n        endB: sel.to\n      };\n    } else if ((result.ios && view.lastIOSEnter > Date.now() - 225 || result.android) && addedNodes.some(function (n) {\n      return n.nodeName == \"DIV\" || n.nodeName == \"P\";\n    }) && view.someProp(\"handleKeyDown\", function (f) {\n      return f(view, keyEvent(13, \"Enter\"));\n    })) {\n      view.lastIOSEnter = 0;\n      return;\n    } else {\n      if (parse.sel) {\n        var sel$1 = resolveSelection(view, view.state.doc, parse.sel);\n\n        if (sel$1 && !sel$1.eq(view.state.selection)) {\n          view.dispatch(view.state.tr.setSelection(sel$1));\n        }\n      }\n\n      return;\n    }\n  }\n\n  view.domChangeCount++; // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n\n  if (view.state.selection.from < view.state.selection.to && change.start == change.endB && view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from;\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += view.state.selection.to - change.endA;\n      change.endA = view.state.selection.to;\n    }\n  } // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n\n\n  if (result.ie && result.ie_version <= 11 && change.endB == change.start + 1 && change.endA == change.start && change.start > parse.from && parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--;\n    change.endA--;\n    change.endB--;\n  }\n\n  var $from = parse.doc.resolveNoCache(change.start - parse.from);\n  var $to = parse.doc.resolveNoCache(change.endB - parse.from);\n  var inlineChange = $from.sameParent($to) && $from.parent.inlineContent;\n  var nextSel; // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n\n  if ((result.ios && view.lastIOSEnter > Date.now() - 225 && (!inlineChange || addedNodes.some(function (n) {\n    return n.nodeName == \"DIV\" || n.nodeName == \"P\";\n  })) || !inlineChange && $from.pos < parse.doc.content.size && (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) && nextSel.head == $to.pos) && view.someProp(\"handleKeyDown\", function (f) {\n    return f(view, keyEvent(13, \"Enter\"));\n  })) {\n    view.lastIOSEnter = 0;\n    return;\n  } // Same for backspace\n\n\n  if (view.state.selection.anchor > change.start && looksLikeJoin(doc, change.start, change.endA, $from, $to) && view.someProp(\"handleKeyDown\", function (f) {\n    return f(view, keyEvent(8, \"Backspace\"));\n  })) {\n    if (result.android && result.chrome) {\n      view.domObserver.suppressSelectionUpdates();\n    } // #820\n\n\n    return;\n  } // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n\n\n  if (result.chrome && result.android && change.toB == change.from) {\n    view.lastAndroidDelete = Date.now();\n  } // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n\n\n  if (result.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth && parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2;\n    $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    setTimeout(function () {\n      view.someProp(\"handleKeyDown\", function (f) {\n        return f(view, keyEvent(13, \"Enter\"));\n      });\n    }, 20);\n  }\n\n  var chFrom = change.start,\n      chTo = change.endA;\n  var tr, storedMarks, markChange, $from1;\n\n  if (inlineChange) {\n    if ($from.pos == $to.pos) {\n      // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (result.ie && result.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates();\n        setTimeout(function () {\n          return selectionToDOM(view);\n        }, 20);\n      }\n\n      tr = view.state.tr.delete(chFrom, chTo);\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n    } else if ( // Adding or removing a mark\n    change.endA == change.endB && ($from1 = doc.resolve(change.start)) && (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))) {\n      tr = view.state.tr;\n\n      if (markChange.type == \"add\") {\n        tr.addMark(chFrom, chTo, markChange.mark);\n      } else {\n        tr.removeMark(chFrom, chTo, markChange.mark);\n      }\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      var text$1 = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n\n      if (view.someProp(\"handleTextInput\", function (f) {\n        return f(view, chFrom, chTo, text$1);\n      })) {\n        return;\n      }\n\n      tr = view.state.tr.insertText(text$1, chFrom, chTo);\n    }\n  }\n\n  if (!tr) {\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n  }\n\n  if (parse.sel) {\n    var sel$2 = resolveSelection(view, tr.doc, parse.sel); // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n\n    if (sel$2 && !(result.chrome && result.android && view.composing && sel$2.empty && (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) && (sel$2.head == chFrom || sel$2.head == tr.mapping.map(chTo) - 1) || result.ie && sel$2.empty && sel$2.head == chFrom)) {\n      tr.setSelection(sel$2);\n    }\n  }\n\n  if (storedMarks) {\n    tr.ensureMarks(storedMarks);\n  }\n\n  view.dispatch(tr.scrollIntoView());\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) {\n    return null;\n  }\n\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n} // : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\n\n\nfunction isMarkChange(cur, prev) {\n  var curMarks = cur.firstChild.marks,\n      prevMarks = prev.firstChild.marks;\n  var added = curMarks,\n      removed = prevMarks,\n      type,\n      mark,\n      update;\n\n  for (var i = 0; i < prevMarks.length; i++) {\n    added = prevMarks[i].removeFromSet(added);\n  }\n\n  for (var i$1 = 0; i$1 < curMarks.length; i$1++) {\n    removed = curMarks[i$1].removeFromSet(removed);\n  }\n\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0];\n    type = \"add\";\n\n    update = function (node) {\n      return node.mark(mark.addToSet(node.marks));\n    };\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0];\n    type = \"remove\";\n\n    update = function (node) {\n      return node.mark(mark.removeFromSet(node.marks));\n    };\n  } else {\n    return null;\n  }\n\n  var updated = [];\n\n  for (var i$2 = 0; i$2 < prev.childCount; i$2++) {\n    updated.push(update(prev.child(i$2)));\n  }\n\n  if (Fragment.from(updated).eq(cur)) {\n    return {\n      mark: mark,\n      type: type\n    };\n  }\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock || // The content must have shrunk\n  end - start <= $newEnd.pos - $newStart.pos || // newEnd must point directly at or after the end of the block that newStart points into\n  skipClosingAndOpening($newStart, true, false) < $newEnd.pos) {\n    return false;\n  }\n\n  var $start = old.resolve(start); // Start must be at the end of a block\n\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock) {\n    return false;\n  }\n\n  var $next = old.resolve(skipClosingAndOpening($start, true, true)); // The next textblock must start before end and end near it\n\n  if (!$next.parent.isTextblock || $next.pos > end || skipClosingAndOpening($next, true, false) < end) {\n    return false;\n  } // The fragments after the join point must match\n\n\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  var depth = $pos.depth,\n      end = fromEnd ? $pos.end() : $pos.pos;\n\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--;\n    end++;\n    fromEnd = false;\n  }\n\n  if (mayOpen) {\n    var next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n\n    while (next && !next.isLeaf) {\n      next = next.firstChild;\n      end++;\n    }\n  }\n\n  return end;\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  var start = a.findDiffStart(b, pos);\n\n  if (start == null) {\n    return null;\n  }\n\n  var ref = a.findDiffEnd(b, pos + a.size, pos + b.size);\n  var endA = ref.a;\n  var endB = ref.b;\n\n  if (preferredSide == \"end\") {\n    var adjust = Math.max(0, start - Math.min(endA, endB));\n    preferredPos -= endA + adjust - start;\n  }\n\n  if (endA < start && a.size < b.size) {\n    var move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n    start -= move;\n    endB = start + (endB - endA);\n    endA = start;\n  } else if (endB < start) {\n    var move$1 = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n    start -= move$1;\n    endA = start + (endA - endB);\n    endB = start;\n  }\n\n  return {\n    start: start,\n    endA: endA,\n    endB: endB\n  };\n}\n\nfunction serializeForClipboard(view, slice) {\n  var context = [];\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--;\n    openEnd--;\n    var node = content.firstChild;\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n    content = node.content;\n  }\n\n  var serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n  var doc = detachedDoc(),\n      wrap = doc.createElement(\"div\");\n  wrap.appendChild(serializer.serializeFragment(content, {\n    document: doc\n  }));\n  var firstChild = wrap.firstChild,\n      needsWrap;\n\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (var i = needsWrap.length - 1; i >= 0; i--) {\n      var wrapper = doc.createElement(needsWrap[i]);\n\n      while (wrap.firstChild) {\n        wrapper.appendChild(wrap.firstChild);\n      }\n\n      wrap.appendChild(wrapper);\n\n      if (needsWrap[i] != \"tbody\") {\n        openStart++;\n        openEnd++;\n      }\n    }\n\n    firstChild = wrap.firstChild;\n  }\n\n  if (firstChild && firstChild.nodeType == 1) {\n    firstChild.setAttribute(\"data-pm-slice\", openStart + \" \" + openEnd + \" \" + JSON.stringify(context));\n  }\n\n  var text = view.someProp(\"clipboardTextSerializer\", function (f) {\n    return f(slice);\n  }) || slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n  return {\n    dom: wrap,\n    text: text\n  };\n} // : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\n\n\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n  var dom,\n      inCode = $context.parent.type.spec.code,\n      slice;\n\n  if (!html && !text) {\n    return null;\n  }\n\n  var asText = text && (plainText || inCode || !html);\n\n  if (asText) {\n    view.someProp(\"transformPastedText\", function (f) {\n      text = f(text, inCode || plainText);\n    });\n\n    if (inCode) {\n      return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n    }\n\n    var parsed = view.someProp(\"clipboardTextParser\", function (f) {\n      return f(text, $context, plainText);\n    });\n\n    if (parsed) {\n      slice = parsed;\n    } else {\n      var marks = $context.marks();\n      var ref = view.state;\n      var schema = ref.schema;\n      var serializer = DOMSerializer.fromSchema(schema);\n      dom = document.createElement(\"div\");\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(function (block) {\n        var p = dom.appendChild(document.createElement(\"p\"));\n\n        if (block) {\n          p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n        }\n      });\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", function (f) {\n      html = f(html);\n    });\n    dom = readHTML(html);\n\n    if (result.webkit) {\n      restoreReplacedSpaces(dom);\n    }\n  }\n\n  var contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n  var sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"));\n\n  if (!slice) {\n    var parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    slice = parser.parseSlice(dom, {\n      preserveWhitespace: !!(asText || sliceData),\n      context: $context,\n      ruleFromNode: function ruleFromNode(dom) {\n        if (dom.nodeName == \"BR\" && !dom.nextSibling && dom.parentNode && !inlineParents.test(dom.parentNode.nodeName)) {\n          return {\n            ignore: true\n          };\n        }\n      }\n    });\n  }\n\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3]);\n  } else {\n    // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n\n    if (slice.openStart || slice.openEnd) {\n      var openStart = 0,\n          openEnd = 0;\n\n      for (var node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) {}\n\n      for (var node$1 = slice.content.lastChild; openEnd < slice.openEnd && !node$1.type.spec.isolating; openEnd++, node$1 = node$1.lastChild) {}\n\n      slice = closeSlice(slice, openStart, openEnd);\n    }\n  }\n\n  view.someProp(\"transformPasted\", function (f) {\n    slice = f(slice);\n  });\n  return slice;\n}\n\nvar inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i; // Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\n\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) {\n    return fragment;\n  }\n\n  var loop = function (d) {\n    var parent = $context.node(d);\n    var match = parent.contentMatchAt($context.index(d));\n    var lastWrap = void 0,\n        result = [];\n    fragment.forEach(function (node) {\n      if (!result) {\n        return;\n      }\n\n      var wrap = match.findWrapping(node.type),\n          inLast;\n\n      if (!wrap) {\n        return result = null;\n      }\n\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast;\n      } else {\n        if (result.length) {\n          result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n        }\n\n        var wrapped = withWrappers(node, wrap);\n        result.push(wrapped);\n        match = match.matchType(wrapped.type, wrapped.attrs);\n        lastWrap = wrap;\n      }\n    });\n\n    if (result) {\n      return {\n        v: Fragment.from(result)\n      };\n    }\n  };\n\n  for (var d = $context.depth; d >= 0; d--) {\n    var returned = loop(d);\n    if (returned) return returned.v;\n  }\n\n  return fragment;\n}\n\nfunction withWrappers(node, wrap, from) {\n  if (from === void 0) from = 0;\n\n  for (var i = wrap.length - 1; i >= from; i--) {\n    node = wrap[i].create(null, Fragment.from(node));\n  }\n\n  return node;\n} // Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\n\n\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    var inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n\n    if (inner) {\n      return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n    }\n\n    var match = sibling.contentMatchAt(sibling.childCount);\n\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1])) {\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) {\n    return node;\n  }\n\n  var fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n  var fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n  return node.copy(fragment.append(fill));\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  var node = side < 0 ? fragment.firstChild : fragment.lastChild,\n      inner = node.content;\n\n  if (depth < to - 1) {\n    inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n  }\n\n  if (depth >= from) {\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner) : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n  }\n\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart) {\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n  }\n\n  if (openEnd < slice.openEnd) {\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n  }\n\n  return slice;\n} // Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\n\n\nvar wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n};\nvar _detachedDoc = null;\n\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\n\nfunction readHTML(html) {\n  var metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n\n  if (metas) {\n    html = html.slice(metas[0].length);\n  }\n\n  var elt = detachedDoc().createElement(\"div\");\n  var firstTag = /<([a-z][^>\\s]+)/i.exec(html),\n      wrap;\n\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()]) {\n    html = wrap.map(function (n) {\n      return \"<\" + n + \">\";\n    }).join(\"\") + html + wrap.map(function (n) {\n      return \"</\" + n + \">\";\n    }).reverse().join(\"\");\n  }\n\n  elt.innerHTML = html;\n\n  if (wrap) {\n    for (var i = 0; i < wrap.length; i++) {\n      elt = elt.querySelector(wrap[i]) || elt;\n    }\n  }\n\n  return elt;\n} // Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\n\n\nfunction restoreReplacedSpaces(dom) {\n  var nodes = dom.querySelectorAll(result.chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode) {\n      node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n  }\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) {\n    return slice;\n  }\n\n  var schema = slice.content.firstChild.type.schema,\n      array;\n\n  try {\n    array = JSON.parse(context);\n  } catch (e) {\n    return slice;\n  }\n\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n\n  for (var i = array.length - 2; i >= 0; i -= 2) {\n    var type = schema.nodes[array[i]];\n\n    if (!type || type.hasRequiredAttrs()) {\n      break;\n    }\n\n    content = Fragment.from(type.create(array[i + 1], content));\n    openStart++;\n    openEnd++;\n  }\n\n  return new Slice(content, openStart, openEnd);\n}\n\nvar observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}; // IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\n\nvar useCharData = result.ie && result.ie_version <= 11;\n\nvar SelectionState = function SelectionState() {\n  this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null;\n};\n\nSelectionState.prototype.set = function set(sel) {\n  this.anchorNode = sel.anchorNode;\n  this.anchorOffset = sel.anchorOffset;\n  this.focusNode = sel.focusNode;\n  this.focusOffset = sel.focusOffset;\n};\n\nSelectionState.prototype.eq = function eq(sel) {\n  return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset && sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n};\n\nvar DOMObserver = function DOMObserver(view, handleDOMChange) {\n  var this$1 = this;\n  this.view = view;\n  this.handleDOMChange = handleDOMChange;\n  this.queue = [];\n  this.flushingSoon = -1;\n  this.observer = window.MutationObserver && new window.MutationObserver(function (mutations) {\n    for (var i = 0; i < mutations.length; i++) {\n      this$1.queue.push(mutations[i]);\n    } // IE11 will sometimes (on backspacing out a single character\n    // text node after a BR node) call the observer callback\n    // before actually updating the DOM, which will cause\n    // ProseMirror to miss the change (see #930)\n\n\n    if (result.ie && result.ie_version <= 11 && mutations.some(function (m) {\n      return m.type == \"childList\" && m.removedNodes.length || m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length;\n    })) {\n      this$1.flushSoon();\n    } else {\n      this$1.flush();\n    }\n  });\n  this.currentSelection = new SelectionState();\n\n  if (useCharData) {\n    this.onCharData = function (e) {\n      this$1.queue.push({\n        target: e.target,\n        type: \"characterData\",\n        oldValue: e.prevValue\n      });\n      this$1.flushSoon();\n    };\n  }\n\n  this.onSelectionChange = this.onSelectionChange.bind(this);\n  this.suppressingSelectionUpdates = false;\n};\n\nDOMObserver.prototype.flushSoon = function flushSoon() {\n  var this$1 = this;\n\n  if (this.flushingSoon < 0) {\n    this.flushingSoon = window.setTimeout(function () {\n      this$1.flushingSoon = -1;\n      this$1.flush();\n    }, 20);\n  }\n};\n\nDOMObserver.prototype.forceFlush = function forceFlush() {\n  if (this.flushingSoon > -1) {\n    window.clearTimeout(this.flushingSoon);\n    this.flushingSoon = -1;\n    this.flush();\n  }\n};\n\nDOMObserver.prototype.start = function start() {\n  if (this.observer) {\n    this.observer.observe(this.view.dom, observeOptions);\n  }\n\n  if (useCharData) {\n    this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n  }\n\n  this.connectSelection();\n};\n\nDOMObserver.prototype.stop = function stop() {\n  var this$1 = this;\n\n  if (this.observer) {\n    var take = this.observer.takeRecords();\n\n    if (take.length) {\n      for (var i = 0; i < take.length; i++) {\n        this.queue.push(take[i]);\n      }\n\n      window.setTimeout(function () {\n        return this$1.flush();\n      }, 20);\n    }\n\n    this.observer.disconnect();\n  }\n\n  if (useCharData) {\n    this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n  }\n\n  this.disconnectSelection();\n};\n\nDOMObserver.prototype.connectSelection = function connectSelection() {\n  this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.disconnectSelection = function disconnectSelection() {\n  this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.suppressSelectionUpdates = function suppressSelectionUpdates() {\n  var this$1 = this;\n  this.suppressingSelectionUpdates = true;\n  setTimeout(function () {\n    return this$1.suppressingSelectionUpdates = false;\n  }, 50);\n};\n\nDOMObserver.prototype.onSelectionChange = function onSelectionChange() {\n  if (!hasFocusAndSelection(this.view)) {\n    return;\n  }\n\n  if (this.suppressingSelectionUpdates) {\n    return selectionToDOM(this.view);\n  } // Deletions on IE11 fire their events in the wrong order, giving\n  // us a selection change event before the DOM changes are\n  // reported.\n\n\n  if (result.ie && result.ie_version <= 11 && !this.view.state.selection.empty) {\n    var sel = this.view.root.getSelection(); // Selection.isCollapsed isn't reliable on IE\n\n    if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset)) {\n      return this.flushSoon();\n    }\n  }\n\n  this.flush();\n};\n\nDOMObserver.prototype.setCurSelection = function setCurSelection() {\n  this.currentSelection.set(this.view.root.getSelection());\n};\n\nDOMObserver.prototype.ignoreSelectionChange = function ignoreSelectionChange(sel) {\n  if (sel.rangeCount == 0) {\n    return true;\n  }\n\n  var container = sel.getRangeAt(0).commonAncestorContainer;\n  var desc = this.view.docView.nearestDesc(container);\n\n  if (desc && desc.ignoreMutation({\n    type: \"selection\",\n    target: container.nodeType == 3 ? container.parentNode : container\n  })) {\n    this.setCurSelection();\n    return true;\n  }\n};\n\nDOMObserver.prototype.flush = function flush() {\n  if (!this.view.docView || this.flushingSoon > -1) {\n    return;\n  }\n\n  var mutations = this.observer ? this.observer.takeRecords() : [];\n\n  if (this.queue.length) {\n    mutations = this.queue.concat(mutations);\n    this.queue.length = 0;\n  }\n\n  var sel = this.view.root.getSelection();\n  var newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel);\n  var from = -1,\n      to = -1,\n      typeOver = false,\n      added = [];\n\n  if (this.view.editable) {\n    for (var i = 0; i < mutations.length; i++) {\n      var result$1 = this.registerMutation(mutations[i], added);\n\n      if (result$1) {\n        from = from < 0 ? result$1.from : Math.min(result$1.from, from);\n        to = to < 0 ? result$1.to : Math.max(result$1.to, to);\n\n        if (result$1.typeOver) {\n          typeOver = true;\n        }\n      }\n    }\n  }\n\n  if (result.gecko && added.length > 1) {\n    var brs = added.filter(function (n) {\n      return n.nodeName == \"BR\";\n    });\n\n    if (brs.length == 2) {\n      var a = brs[0];\n      var b = brs[1];\n\n      if (a.parentNode && a.parentNode.parentNode == b.parentNode) {\n        b.remove();\n      } else {\n        a.remove();\n      }\n    }\n  }\n\n  if (from > -1 || newSel) {\n    if (from > -1) {\n      this.view.docView.markDirty(from, to);\n      checkCSS(this.view);\n    }\n\n    this.handleDOMChange(from, to, typeOver, added);\n\n    if (this.view.docView.dirty) {\n      this.view.updateState(this.view.state);\n    } else if (!this.currentSelection.eq(sel)) {\n      selectionToDOM(this.view);\n    }\n\n    this.currentSelection.set(sel);\n  }\n};\n\nDOMObserver.prototype.registerMutation = function registerMutation(mut, added) {\n  // Ignore mutations inside nodes that were already noted as inserted\n  if (added.indexOf(mut.target) > -1) {\n    return null;\n  }\n\n  var desc = this.view.docView.nearestDesc(mut.target);\n\n  if (mut.type == \"attributes\" && (desc == this.view.docView || mut.attributeName == \"contenteditable\" || // Firefox sometimes fires spurious events for null/empty styles\n  mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))) {\n    return null;\n  }\n\n  if (!desc || desc.ignoreMutation(mut)) {\n    return null;\n  }\n\n  if (mut.type == \"childList\") {\n    for (var i = 0; i < mut.addedNodes.length; i++) {\n      added.push(mut.addedNodes[i]);\n    }\n\n    if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target)) {\n      return {\n        from: desc.posBefore,\n        to: desc.posAfter\n      };\n    }\n\n    var prev = mut.previousSibling,\n        next = mut.nextSibling;\n\n    if (result.ie && result.ie_version <= 11 && mut.addedNodes.length) {\n      // IE11 gives us incorrect next/prev siblings for some\n      // insertions, so if there are added nodes, recompute those\n      for (var i$1 = 0; i$1 < mut.addedNodes.length; i$1++) {\n        var ref = mut.addedNodes[i$1];\n        var previousSibling = ref.previousSibling;\n        var nextSibling = ref.nextSibling;\n\n        if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) {\n          prev = previousSibling;\n        }\n\n        if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) {\n          next = nextSibling;\n        }\n      }\n    }\n\n    var fromOffset = prev && prev.parentNode == mut.target ? domIndex(prev) + 1 : 0;\n    var from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n    var toOffset = next && next.parentNode == mut.target ? domIndex(next) : mut.target.childNodes.length;\n    var to = desc.localPosFromDOM(mut.target, toOffset, 1);\n    return {\n      from: from,\n      to: to\n    };\n  } else if (mut.type == \"attributes\") {\n    return {\n      from: desc.posAtStart - desc.border,\n      to: desc.posAtEnd + desc.border\n    };\n  } else {\n    // \"characterData\"\n    return {\n      from: desc.posAtStart,\n      to: desc.posAtEnd,\n      // An event was generated for a text change that didn't change\n      // any text. Mark the dom change to fall back to assuming the\n      // selection was typed over with an identical value if it can't\n      // find another change.\n      typeOver: mut.target.nodeValue == mut.oldValue\n    };\n  }\n};\n\nvar cssChecked = false;\n\nfunction checkCSS(view) {\n  if (cssChecked) {\n    return;\n  }\n\n  cssChecked = true;\n\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\") {\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n  }\n} // A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\n\n\nvar handlers = {},\n    editHandlers = {};\n\nfunction initInput(view) {\n  view.shiftKey = false;\n  view.mouseDown = null;\n  view.lastKeyCode = null;\n  view.lastKeyCodeTime = 0;\n  view.lastClick = {\n    time: 0,\n    x: 0,\n    y: 0,\n    type: \"\"\n  };\n  view.lastSelectionOrigin = null;\n  view.lastSelectionTime = 0;\n  view.lastIOSEnter = 0;\n  view.lastIOSEnterFallbackTimeout = null;\n  view.lastAndroidDelete = 0;\n  view.composing = false;\n  view.composingTimeout = null;\n  view.compositionNodes = [];\n  view.compositionEndedAt = -2e8;\n  view.domObserver = new DOMObserver(view, function (from, to, typeOver, added) {\n    return readDOMChange(view, from, to, typeOver, added);\n  });\n  view.domObserver.start(); // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n\n  view.domChangeCount = 0;\n  view.eventHandlers = Object.create(null);\n\n  var loop = function (event) {\n    var handler = handlers[event];\n    view.dom.addEventListener(event, view.eventHandlers[event] = function (event) {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) && (view.editable || !(event.type in editHandlers))) {\n        handler(view, event);\n      }\n    });\n  };\n\n  for (var event in handlers) loop(event); // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n\n\n  if (result.safari) {\n    view.dom.addEventListener(\"input\", function () {\n      return null;\n    });\n  }\n\n  ensureListeners(view);\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin;\n  view.lastSelectionTime = Date.now();\n}\n\nfunction destroyInput(view) {\n  view.domObserver.stop();\n\n  for (var type in view.eventHandlers) {\n    view.dom.removeEventListener(type, view.eventHandlers[type]);\n  }\n\n  clearTimeout(view.composingTimeout);\n  clearTimeout(view.lastIOSEnterFallbackTimeout);\n}\n\nfunction ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", function (currentHandlers) {\n    for (var type in currentHandlers) {\n      if (!view.eventHandlers[type]) {\n        view.dom.addEventListener(type, view.eventHandlers[type] = function (event) {\n          return runCustomHandler(view, event);\n        });\n      }\n    }\n  });\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", function (handlers) {\n    var handler = handlers[event.type];\n    return handler ? handler(view, event) || event.defaultPrevented : false;\n  });\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) {\n    return true;\n  }\n\n  if (event.defaultPrevented) {\n    return false;\n  }\n\n  for (var node = event.target; node != view.dom; node = node.parentNode) {\n    if (!node || node.nodeType == 11 || node.pmViewDesc && node.pmViewDesc.stopEvent(event)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] && (view.editable || !(event.type in editHandlers))) {\n    handlers[event.type](view, event);\n  }\n}\n\neditHandlers.keydown = function (view, event) {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey;\n\n  if (inOrNearComposition(view, event)) {\n    return;\n  }\n\n  view.lastKeyCode = event.keyCode;\n  view.lastKeyCodeTime = Date.now(); // Suppress enter key events on Chrome Android, because those tend\n  // to be part of a confused sequence of composition events fired,\n  // and handling them eagerly tends to corrupt the input.\n\n  if (result.android && result.chrome && event.keyCode == 13) {\n    return;\n  }\n\n  if (event.keyCode != 229) {\n    view.domObserver.forceFlush();\n  } // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n\n\n  if (result.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    var now = Date.now();\n    view.lastIOSEnter = now;\n    view.lastIOSEnterFallbackTimeout = setTimeout(function () {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", function (f) {\n          return f(view, keyEvent(13, \"Enter\"));\n        });\n        view.lastIOSEnter = 0;\n      }\n    }, 200);\n  } else if (view.someProp(\"handleKeyDown\", function (f) {\n    return f(view, event);\n  }) || captureKeyDown(view, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"key\");\n  }\n};\n\neditHandlers.keyup = function (view, e) {\n  if (e.keyCode == 16) {\n    view.shiftKey = false;\n  }\n};\n\neditHandlers.keypress = function (view, event) {\n  if (inOrNearComposition(view, event) || !event.charCode || event.ctrlKey && !event.altKey || result.mac && event.metaKey) {\n    return;\n  }\n\n  if (view.someProp(\"handleKeyPress\", function (f) {\n    return f(view, event);\n  })) {\n    event.preventDefault();\n    return;\n  }\n\n  var sel = view.state.selection;\n\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    var text = String.fromCharCode(event.charCode);\n\n    if (!view.someProp(\"handleTextInput\", function (f) {\n      return f(view, sel.$from.pos, sel.$to.pos, text);\n    })) {\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n    }\n\n    event.preventDefault();\n  }\n};\n\nfunction eventCoords(event) {\n  return {\n    left: event.clientX,\n    top: event.clientY\n  };\n}\n\nfunction isNear(event, click) {\n  var dx = click.x - event.clientX,\n      dy = click.y - event.clientY;\n  return dx * dx + dy * dy < 100;\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) {\n    return false;\n  }\n\n  var $pos = view.state.doc.resolve(inside);\n\n  var loop = function (i) {\n    if (view.someProp(propName, function (f) {\n      return i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true) : f(view, pos, $pos.node(i), $pos.before(i), event, false);\n    })) {\n      return {\n        v: true\n      };\n    }\n  };\n\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var returned = loop(i);\n    if (returned) return returned.v;\n  }\n\n  return false;\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) {\n    view.focus();\n  }\n\n  var tr = view.state.tr.setSelection(selection);\n\n  if (origin == \"pointer\") {\n    tr.setMeta(\"pointer\", true);\n  }\n\n  view.dispatch(tr);\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) {\n    return false;\n  }\n\n  var $pos = view.state.doc.resolve(inside),\n      node = $pos.nodeAfter;\n\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\");\n    return true;\n  }\n\n  return false;\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) {\n    return false;\n  }\n\n  var sel = view.state.selection,\n      selectedNode,\n      selectAt;\n\n  if (sel instanceof NodeSelection) {\n    selectedNode = sel.node;\n  }\n\n  var $pos = view.state.doc.resolve(inside);\n\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 && i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos) {\n        selectAt = $pos.before(sel.$from.depth);\n      } else {\n        selectAt = $pos.before(i);\n      }\n\n      break;\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) || view.someProp(\"handleClick\", function (f) {\n    return f(view, pos, event);\n  }) || (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) || view.someProp(\"handleDoubleClick\", function (f) {\n    return f(view, pos, event);\n  });\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) || view.someProp(\"handleTripleClick\", function (f) {\n    return f(view, pos, event);\n  }) || defaultTripleClick(view, inside, event);\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) {\n    return false;\n  }\n\n  var doc = view.state.doc;\n\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n      return true;\n    }\n\n    return false;\n  }\n\n  var $pos = doc.resolve(inside);\n\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    var nodePos = $pos.before(i);\n\n    if (node.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n    } else if (NodeSelection.isSelectable(node)) {\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n    } else {\n      continue;\n    }\n\n    return true;\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view);\n}\n\nvar selectNodeModifier = result.mac ? \"metaKey\" : \"ctrlKey\";\n\nhandlers.mousedown = function (view, event) {\n  view.shiftKey = event.shiftKey;\n  var flushed = forceDOMFlush(view);\n  var now = Date.now(),\n      type = \"singleClick\";\n\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") {\n      type = \"doubleClick\";\n    } else if (view.lastClick.type == \"doubleClick\") {\n      type = \"tripleClick\";\n    }\n  }\n\n  view.lastClick = {\n    time: now,\n    x: event.clientX,\n    y: event.clientY,\n    type: type\n  };\n  var pos = view.posAtCoords(eventCoords(event));\n\n  if (!pos) {\n    return;\n  }\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) {\n      view.mouseDown.done();\n    }\n\n    view.mouseDown = new MouseDown(view, pos, event, flushed);\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"pointer\");\n  }\n};\n\nvar MouseDown = function MouseDown(view, pos, event, flushed) {\n  var this$1 = this;\n  this.view = view;\n  this.startDoc = view.state.doc;\n  this.pos = pos;\n  this.event = event;\n  this.flushed = flushed;\n  this.selectNode = event[selectNodeModifier];\n  this.allowDefault = event.shiftKey;\n  this.delayedSelectionSync = false;\n  var targetNode, targetPos;\n\n  if (pos.inside > -1) {\n    targetNode = view.state.doc.nodeAt(pos.inside);\n    targetPos = pos.inside;\n  } else {\n    var $pos = view.state.doc.resolve(pos.pos);\n    targetNode = $pos.parent;\n    targetPos = $pos.depth ? $pos.before() : 0;\n  }\n\n  this.mightDrag = null;\n  var target = flushed ? null : event.target;\n  var targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n  this.target = targetDesc ? targetDesc.dom : null;\n  var ref = view.state;\n  var selection = ref.selection;\n\n  if (event.button == 0 && targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false || selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos) {\n    this.mightDrag = {\n      node: targetNode,\n      pos: targetPos,\n      addAttr: this.target && !this.target.draggable,\n      setUneditable: this.target && result.gecko && !this.target.hasAttribute(\"contentEditable\")\n    };\n  }\n\n  if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n    this.view.domObserver.stop();\n\n    if (this.mightDrag.addAttr) {\n      this.target.draggable = true;\n    }\n\n    if (this.mightDrag.setUneditable) {\n      setTimeout(function () {\n        if (this$1.view.mouseDown == this$1) {\n          this$1.target.setAttribute(\"contentEditable\", \"false\");\n        }\n      }, 20);\n    }\n\n    this.view.domObserver.start();\n  }\n\n  view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n  view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n  setSelectionOrigin(view, \"pointer\");\n};\n\nMouseDown.prototype.done = function done() {\n  var this$1 = this;\n  this.view.root.removeEventListener(\"mouseup\", this.up);\n  this.view.root.removeEventListener(\"mousemove\", this.move);\n\n  if (this.mightDrag && this.target) {\n    this.view.domObserver.stop();\n\n    if (this.mightDrag.addAttr) {\n      this.target.removeAttribute(\"draggable\");\n    }\n\n    if (this.mightDrag.setUneditable) {\n      this.target.removeAttribute(\"contentEditable\");\n    }\n\n    this.view.domObserver.start();\n  }\n\n  if (this.delayedSelectionSync) {\n    setTimeout(function () {\n      return selectionToDOM(this$1.view);\n    });\n  }\n\n  this.view.mouseDown = null;\n};\n\nMouseDown.prototype.up = function up(event) {\n  this.done();\n\n  if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target)) {\n    return;\n  }\n\n  var pos = this.pos;\n\n  if (this.view.state.doc != this.startDoc) {\n    pos = this.view.posAtCoords(eventCoords(event));\n  }\n\n  if (this.allowDefault || !pos) {\n    setSelectionOrigin(this.view, \"pointer\");\n  } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n    event.preventDefault();\n  } else if (event.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements\n  result.safari && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a\n  // cursor, but still report that the node is selected\n  // when asked through getSelection. You'll then get a\n  // situation where clicking at the point where that\n  // (hidden) cursor is doesn't change the selection, and\n  // thus doesn't get a reaction from ProseMirror. This\n  // works around that.\n  result.chrome && !(this.view.state.selection instanceof TextSelection) && Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2)) {\n    updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(this.view, \"pointer\");\n  }\n};\n\nMouseDown.prototype.move = function move(event) {\n  if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 || Math.abs(this.event.y - event.clientY) > 4)) {\n    this.allowDefault = true;\n  }\n\n  setSelectionOrigin(this.view, \"pointer\");\n\n  if (event.buttons == 0) {\n    this.done();\n  }\n};\n\nhandlers.touchdown = function (view) {\n  forceDOMFlush(view);\n  setSelectionOrigin(view, \"pointer\");\n};\n\nhandlers.contextmenu = function (view) {\n  return forceDOMFlush(view);\n};\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) {\n    return true;\n  } // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n\n\n  if (result.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8;\n    return true;\n  }\n\n  return false;\n} // Drop active composition after 5 seconds of inactivity on Android\n\n\nvar timeoutComposition = result.android ? 5000 : -1;\n\neditHandlers.compositionstart = editHandlers.compositionupdate = function (view) {\n  if (!view.composing) {\n    view.domObserver.flush();\n    var state = view.state;\n    var $pos = state.selection.$from;\n\n    if (state.selection.empty && (state.storedMarks || !$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(function (m) {\n      return m.type.spec.inclusive === false;\n    }))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks();\n      endComposition(view, true);\n      view.markCursor = null;\n    } else {\n      endComposition(view); // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n\n      if (result.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        var sel = view.root.getSelection();\n\n        for (var node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          var before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n\n          if (!before) {\n            break;\n          }\n\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length);\n            break;\n          } else {\n            node = before;\n            offset = -1;\n          }\n        }\n      }\n    }\n\n    view.composing = true;\n  }\n\n  scheduleComposeEnd(view, timeoutComposition);\n};\n\neditHandlers.compositionend = function (view, event) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = event.timeStamp;\n    scheduleComposeEnd(view, 20);\n  }\n};\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout);\n\n  if (delay > -1) {\n    view.composingTimeout = setTimeout(function () {\n      return endComposition(view);\n    }, delay);\n  }\n}\n\nfunction clearComposition(view) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = timestampFromCustomEvent();\n  }\n\n  while (view.compositionNodes.length > 0) {\n    view.compositionNodes.pop().markParentsDirty();\n  }\n}\n\nfunction timestampFromCustomEvent() {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"event\", true, true);\n  return event.timeStamp;\n}\n\nfunction endComposition(view, forceUpdate) {\n  if (result.android && view.domObserver.flushingSoon >= 0) {\n    return;\n  }\n\n  view.domObserver.forceFlush();\n  clearComposition(view);\n\n  if (forceUpdate || view.docView.dirty) {\n    var sel = selectionFromDOM(view);\n\n    if (sel && !sel.eq(view.state.selection)) {\n      view.dispatch(view.state.tr.setSelection(sel));\n    } else {\n      view.updateState(view.state);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) {\n    return;\n  }\n\n  var wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n  wrap.appendChild(dom);\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  var sel = getSelection(),\n      range = document.createRange();\n  range.selectNodeContents(dom); // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n\n  view.dom.blur();\n  sel.removeAllRanges();\n  sel.addRange(range);\n  setTimeout(function () {\n    if (wrap.parentNode) {\n      wrap.parentNode.removeChild(wrap);\n    }\n\n    view.focus();\n  }, 50);\n} // This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\n\n\nvar brokenClipboardAPI = result.ie && result.ie_version < 15 || result.ios && result.webkit_version < 604;\n\nhandlers.copy = editHandlers.cut = function (view, e) {\n  var sel = view.state.selection,\n      cut = e.type == \"cut\";\n\n  if (sel.empty) {\n    return;\n  } // IE and Edge's clipboard interface is completely broken\n\n\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n  var slice = sel.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n\n  if (data) {\n    e.preventDefault();\n    data.clearData();\n    data.setData(\"text/html\", dom.innerHTML);\n    data.setData(\"text/plain\", text);\n  } else {\n    captureCopy(view, dom);\n  }\n\n  if (cut) {\n    view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n  }\n};\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) {\n    return;\n  }\n\n  var plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code;\n  var target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n\n  if (!plainText) {\n    target.contentEditable = \"true\";\n  }\n\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.focus();\n  setTimeout(function () {\n    view.focus();\n\n    if (target.parentNode) {\n      target.parentNode.removeChild(target);\n    }\n\n    if (plainText) {\n      doPaste(view, target.value, null, e);\n    } else {\n      doPaste(view, target.textContent, target.innerHTML, e);\n    }\n  }, 50);\n}\n\nfunction doPaste(view, text, html, e) {\n  var slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from);\n\n  if (view.someProp(\"handlePaste\", function (f) {\n    return f(view, e, slice || Slice.empty);\n  })) {\n    return true;\n  }\n\n  if (!slice) {\n    return false;\n  }\n\n  var singleNode = sliceSingleNode(slice);\n  var tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice);\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n  return true;\n}\n\neditHandlers.paste = function (view, e) {\n  // Handling paste from JavaScript during composition is very poorly\n  // handled by browsers, so as a dodgy but preferable kludge, we just\n  // let the browser do its native thing there, except on Android,\n  // where the editor is almost always composing.\n  if (view.composing && !result.android) {\n    return;\n  }\n\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) {\n    e.preventDefault();\n  } else {\n    capturePaste(view, e);\n  }\n};\n\nvar Dragging = function Dragging(slice, move) {\n  this.slice = slice;\n  this.move = move;\n};\n\nvar dragCopyModifier = result.mac ? \"altKey\" : \"ctrlKey\";\n\nhandlers.dragstart = function (view, e) {\n  var mouseDown = view.mouseDown;\n\n  if (mouseDown) {\n    mouseDown.done();\n  }\n\n  if (!e.dataTransfer) {\n    return;\n  }\n\n  var sel = view.state.selection;\n  var pos = sel.empty ? null : view.posAtCoords(eventCoords(e));\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n  } else if (e.target && e.target.nodeType == 1) {\n    var desc = view.docView.nearestDesc(e.target, true);\n\n    if (desc && desc.node.type.spec.draggable && desc != view.docView) {\n      view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)));\n    }\n  }\n  var slice = view.state.selection.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n  e.dataTransfer.clearData();\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML); // See https://github.com/ProseMirror/prosemirror/issues/1156\n\n  e.dataTransfer.effectAllowed = \"copyMove\";\n\n  if (!brokenClipboardAPI) {\n    e.dataTransfer.setData(\"text/plain\", text);\n  }\n\n  view.dragging = new Dragging(slice, !e[dragCopyModifier]);\n};\n\nhandlers.dragend = function (view) {\n  var dragging = view.dragging;\n  window.setTimeout(function () {\n    if (view.dragging == dragging) {\n      view.dragging = null;\n    }\n  }, 50);\n};\n\neditHandlers.dragover = editHandlers.dragenter = function (_, e) {\n  return e.preventDefault();\n};\n\neditHandlers.drop = function (view, e) {\n  var dragging = view.dragging;\n  view.dragging = null;\n\n  if (!e.dataTransfer) {\n    return;\n  }\n\n  var eventPos = view.posAtCoords(eventCoords(e));\n\n  if (!eventPos) {\n    return;\n  }\n\n  var $mouse = view.state.doc.resolve(eventPos.pos);\n\n  if (!$mouse) {\n    return;\n  }\n\n  var slice = dragging && dragging.slice;\n\n  if (slice) {\n    view.someProp(\"transformPasted\", function (f) {\n      slice = f(slice);\n    });\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"), brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse);\n  }\n\n  var move = dragging && !e[dragCopyModifier];\n\n  if (view.someProp(\"handleDrop\", function (f) {\n    return f(view, e, slice || Slice.empty, move);\n  })) {\n    e.preventDefault();\n    return;\n  }\n\n  if (!slice) {\n    return;\n  }\n\n  e.preventDefault();\n  var insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n\n  if (insertPos == null) {\n    insertPos = $mouse.pos;\n  }\n\n  var tr = view.state.tr;\n\n  if (move) {\n    tr.deleteSelection();\n  }\n\n  var pos = tr.mapping.map(insertPos);\n  var isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n  var beforeInsert = tr.doc;\n\n  if (isNode) {\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n  } else {\n    tr.replaceRange(pos, pos, slice);\n  }\n\n  if (tr.doc.eq(beforeInsert)) {\n    return;\n  }\n\n  var $pos = tr.doc.resolve(pos);\n\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) && $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos));\n  } else {\n    var end = tr.mapping.map(insertPos);\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach(function (_from, _to, _newFrom, newTo) {\n      return end = newTo;\n    });\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n  }\n\n  view.focus();\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\n\nhandlers.focus = function (view) {\n  if (!view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.add(\"ProseMirror-focused\");\n    view.domObserver.start();\n    view.focused = true;\n    setTimeout(function () {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection())) {\n        selectionToDOM(view);\n      }\n    }, 20);\n  }\n};\n\nhandlers.blur = function (view, e) {\n  if (view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.remove(\"ProseMirror-focused\");\n    view.domObserver.start();\n\n    if (e.relatedTarget && view.dom.contains(e.relatedTarget)) {\n      view.domObserver.currentSelection.set({});\n    }\n\n    view.focused = false;\n  }\n};\n\nhandlers.beforeinput = function (view, event) {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (result.chrome && result.android && event.inputType == \"deleteContentBackward\") {\n    view.domObserver.flushSoon();\n    var domChangeCount = view.domChangeCount;\n    setTimeout(function () {\n      if (view.domChangeCount != domChangeCount) {\n        return;\n      } // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n\n\n      view.dom.blur();\n      view.focus();\n\n      if (view.someProp(\"handleKeyDown\", function (f) {\n        return f(view, keyEvent(8, \"Backspace\"));\n      })) {\n        return;\n      }\n\n      var ref = view.state.selection;\n      var $cursor = ref.$cursor; // Crude approximation of backspace behavior when no command handled it\n\n      if ($cursor && $cursor.pos > 0) {\n        view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n      }\n    }, 50);\n  }\n}; // Make sure all handlers get registered\n\n\nfor (var prop in editHandlers) {\n  handlers[prop] = editHandlers[prop];\n}\n\nfunction compareObjs(a, b) {\n  if (a == b) {\n    return true;\n  }\n\n  for (var p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (var p$1 in b) {\n    if (!(p$1 in a)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar WidgetType = function WidgetType(toDOM, spec) {\n  this.spec = spec || noSpec;\n  this.side = this.spec.side || 0;\n  this.toDOM = toDOM;\n};\n\nWidgetType.prototype.map = function map(mapping, span, offset, oldOffset) {\n  var ref = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n  var pos = ref.pos;\n  var deleted = ref.deleted;\n  return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n};\n\nWidgetType.prototype.valid = function valid() {\n  return true;\n};\n\nWidgetType.prototype.eq = function eq(other) {\n  return this == other || other instanceof WidgetType && (this.spec.key && this.spec.key == other.spec.key || this.toDOM == other.toDOM && compareObjs(this.spec, other.spec));\n};\n\nWidgetType.prototype.destroy = function destroy(node) {\n  if (this.spec.destroy) {\n    this.spec.destroy(node);\n  }\n};\n\nvar InlineType = function InlineType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nInlineType.prototype.map = function map(mapping, span, offset, oldOffset) {\n  var from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n  var to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n  return from >= to ? null : new Decoration(from, to, this);\n};\n\nInlineType.prototype.valid = function valid(_, span) {\n  return span.from < span.to;\n};\n\nInlineType.prototype.eq = function eq(other) {\n  return this == other || other instanceof InlineType && compareObjs(this.attrs, other.attrs) && compareObjs(this.spec, other.spec);\n};\n\nInlineType.is = function is(span) {\n  return span.type instanceof InlineType;\n};\n\nvar NodeType = function NodeType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nNodeType.prototype.map = function map(mapping, span, offset, oldOffset) {\n  var from = mapping.mapResult(span.from + oldOffset, 1);\n\n  if (from.deleted) {\n    return null;\n  }\n\n  var to = mapping.mapResult(span.to + oldOffset, -1);\n\n  if (to.deleted || to.pos <= from.pos) {\n    return null;\n  }\n\n  return new Decoration(from.pos - offset, to.pos - offset, this);\n};\n\nNodeType.prototype.valid = function valid(node, span) {\n  var ref = node.content.findIndex(span.from);\n  var index = ref.index;\n  var offset = ref.offset;\n  var child;\n  return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n};\n\nNodeType.prototype.eq = function eq(other) {\n  return this == other || other instanceof NodeType && compareObjs(this.attrs, other.attrs) && compareObjs(this.spec, other.spec);\n}; // ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\n\n\nvar Decoration = function Decoration(from, to, type) {\n  // :: number\n  // The start position of the decoration.\n  this.from = from; // :: number\n  // The end position. Will be the same as `from` for [widget\n  // decorations](#view.Decoration^widget).\n\n  this.to = to;\n  this.type = type;\n};\n\nvar prototypeAccessors$1 = {\n  spec: {\n    configurable: true\n  },\n  inline: {\n    configurable: true\n  }\n};\n\nDecoration.prototype.copy = function copy(from, to) {\n  return new Decoration(from, to, this.type);\n};\n\nDecoration.prototype.eq = function eq(other, offset) {\n  if (offset === void 0) offset = 0;\n  return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n};\n\nDecoration.prototype.map = function map(mapping, offset, oldOffset) {\n  return this.type.map(mapping, this, offset, oldOffset);\n}; // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n// Creates a widget decoration, which is a DOM node that's shown in\n// the document at the given position. It is recommended that you\n// delay rendering the widget by passing a function that will be\n// called when the widget is actually drawn in a view, but you can\n// also directly pass a DOM node. `getPos` can be used to find the\n// widget's current document position.\n//\n// spec::- These options are supported:\n//\n//   side:: ?number\n//   Controls which side of the document position this widget is\n//   associated with. When negative, it is drawn before a cursor\n//   at its position, and content inserted at that position ends\n//   up after the widget. When zero (the default) or positive, the\n//   widget is drawn after the cursor and content inserted there\n//   ends up before the widget.\n//\n//   When there are multiple widgets at a given position, their\n//   `side` values determine the order in which they appear. Those\n//   with lower values appear first. The ordering of widgets with\n//   the same `side` value is unspecified.\n//\n//   When `marks` is null, `side` also determines the marks that\n//   the widget is wrapped in—those of the node before when\n//   negative, those of the node after when positive.\n//\n//   marks:: ?[Mark]\n//   The precise set of marks to draw around the widget.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to control which DOM events, when they bubble out\n//   of this widget, the editor view should ignore.\n//\n//   ignoreSelection:: ?bool\n//   When set (defaults to false), selection changes inside the\n//   widget are ignored, and don't cause ProseMirror to try and\n//   re-sync the selection with its selection state.\n//\n//   key:: ?string\n//   When comparing decorations of this type (in order to decide\n//   whether it needs to be redrawn), ProseMirror will by default\n//   compare the widget DOM node by identity. If you pass a key,\n//   that key will be compared instead, which can be useful when\n//   you generate decorations on the fly and don't want to store\n//   and reuse DOM nodes. Make sure that any widgets with the same\n//   key are interchangeable—if widgets differ in, for example,\n//   the behavior of some event handler, they should get\n//   different keys.\n//\n//   destroy:: ?(node: dom.Node)\n//   Called when the widget decoration is removed as a result of\n//   mapping\n\n\nDecoration.widget = function widget(pos, toDOM, spec) {\n  return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n}; // :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates an inline decoration, which adds the given attributes to\n// each inline node between `from` and `to`.\n//\n// spec::- These options are recognized:\n//\n//   inclusiveStart:: ?bool\n//   Determines how the left side of the decoration is\n//   [mapped](#transform.Position_Mapping) when content is\n//   inserted directly at that position. By default, the decoration\n//   won't include the new content, but you can set this to `true`\n//   to make it inclusive.\n//\n//   inclusiveEnd:: ?bool\n//   Determines how the right side of the decoration is mapped.\n//   See\n//   [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n\n\nDecoration.inline = function inline(from, to, attrs, spec) {\n  return new Decoration(from, to, new InlineType(attrs, spec));\n}; // :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates a node decoration. `from` and `to` should point precisely\n// before and after a node in the document. That node, and only that\n// node, will receive the given attributes.\n//\n// spec::-\n//\n// Optional information to store with the decoration. It\n// is also used when comparing decorators for equality.\n\n\nDecoration.node = function node(from, to, attrs, spec) {\n  return new Decoration(from, to, new NodeType(attrs, spec));\n}; // :: Object\n// The spec provided when creating this decoration. Can be useful\n// if you've stored extra information in that object.\n\n\nprototypeAccessors$1.spec.get = function () {\n  return this.type.spec;\n};\n\nprototypeAccessors$1.inline.get = function () {\n  return this.type instanceof InlineType;\n};\n\nObject.defineProperties(Decoration.prototype, prototypeAccessors$1); // DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nvar none = [],\n    noSpec = {}; // :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\n\nvar DecorationSet = function DecorationSet(local, children) {\n  this.local = local && local.length ? local : none;\n  this.children = children && children.length ? children : none;\n}; // :: (Node, [Decoration]) → DecorationSet\n// Create a set of decorations, using the structure of the given\n// document.\n\n\nDecorationSet.create = function create(doc, decorations) {\n  return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n}; // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n// Find all decorations in this set which touch the given range\n// (including decorations that start or end directly at the\n// boundaries) and match the given predicate on their spec. When\n// `start` and `end` are omitted, all decorations in the set are\n// considered. When `predicate` isn't given, all decorations are\n// assumed to match.\n\n\nDecorationSet.prototype.find = function find(start, end, predicate) {\n  var result = [];\n  this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n  return result;\n};\n\nDecorationSet.prototype.findInner = function findInner(start, end, result, offset, predicate) {\n  for (var i = 0; i < this.local.length; i++) {\n    var span = this.local[i];\n\n    if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec))) {\n      result.push(span.copy(span.from + offset, span.to + offset));\n    }\n  }\n\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3) {\n    if (this.children[i$1] < end && this.children[i$1 + 1] > start) {\n      var childOff = this.children[i$1] + 1;\n      this.children[i$1 + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n    }\n  }\n}; // :: (Mapping, Node, ?Object) → DecorationSet\n// Map the set of decorations in response to a change in the\n// document.\n//\n// options::- An optional set of options.\n//\n//   onRemove:: ?(decorationSpec: Object)\n//   When given, this function will be called for each decoration\n//   that gets dropped as a result of the mapping, passing the\n//   spec of that decoration.\n\n\nDecorationSet.prototype.map = function map(mapping, doc, options) {\n  if (this == empty || mapping.maps.length == 0) {\n    return this;\n  }\n\n  return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n};\n\nDecorationSet.prototype.mapInner = function mapInner(mapping, node, offset, oldOffset, options) {\n  var newLocal;\n\n  for (var i = 0; i < this.local.length; i++) {\n    var mapped = this.local[i].map(mapping, offset, oldOffset);\n\n    if (mapped && mapped.type.valid(node, mapped)) {\n      (newLocal || (newLocal = [])).push(mapped);\n    } else if (options.onRemove) {\n      options.onRemove(this.local[i].spec);\n    }\n  }\n\n  if (this.children.length) {\n    return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options);\n  } else {\n    return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty;\n  }\n}; // :: (Node, [Decoration]) → DecorationSet\n// Add the given array of decorations to the ones in the set,\n// producing a new set. Needs access to the current document to\n// create the appropriate tree structure.\n\n\nDecorationSet.prototype.add = function add(doc, decorations) {\n  if (!decorations.length) {\n    return this;\n  }\n\n  if (this == empty) {\n    return DecorationSet.create(doc, decorations);\n  }\n\n  return this.addInner(doc, decorations, 0);\n};\n\nDecorationSet.prototype.addInner = function addInner(doc, decorations, offset) {\n  var this$1 = this;\n  var children,\n      childIndex = 0;\n  doc.forEach(function (childNode, childOffset) {\n    var baseOffset = childOffset + offset,\n        found;\n\n    if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) {\n      return;\n    }\n\n    if (!children) {\n      children = this$1.children.slice();\n    }\n\n    while (childIndex < children.length && children[childIndex] < childOffset) {\n      childIndex += 3;\n    }\n\n    if (children[childIndex] == childOffset) {\n      children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n    } else {\n      children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n    }\n\n    childIndex += 3;\n  });\n  var local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n\n  for (var i = 0; i < local.length; i++) {\n    if (!local[i].type.valid(doc, local[i])) {\n      local.splice(i--, 1);\n    }\n  }\n\n  return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n}; // :: ([Decoration]) → DecorationSet\n// Create a new set that contains the decorations in this set, minus\n// the ones in the given array.\n\n\nDecorationSet.prototype.remove = function remove(decorations) {\n  if (decorations.length == 0 || this == empty) {\n    return this;\n  }\n\n  return this.removeInner(decorations, 0);\n};\n\nDecorationSet.prototype.removeInner = function removeInner(decorations, offset) {\n  var children = this.children,\n      local = this.local;\n\n  for (var i = 0; i < children.length; i += 3) {\n    var found = void 0,\n        from = children[i] + offset,\n        to = children[i + 1] + offset;\n\n    for (var j = 0, span = void 0; j < decorations.length; j++) {\n      if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null;\n          (found || (found = [])).push(span);\n        }\n      }\n    }\n\n    if (!found) {\n      continue;\n    }\n\n    if (children == this.children) {\n      children = this.children.slice();\n    }\n\n    var removed = children[i + 2].removeInner(found, from + 1);\n\n    if (removed != empty) {\n      children[i + 2] = removed;\n    } else {\n      children.splice(i, 3);\n      i -= 3;\n    }\n  }\n\n  if (local.length) {\n    for (var i$1 = 0, span$1 = void 0; i$1 < decorations.length; i$1++) {\n      if (span$1 = decorations[i$1]) {\n        for (var j$1 = 0; j$1 < local.length; j$1++) {\n          if (local[j$1].eq(span$1, offset)) {\n            if (local == this.local) {\n              local = this.local.slice();\n            }\n\n            local.splice(j$1--, 1);\n          }\n        }\n      }\n    }\n  }\n\n  if (children == this.children && local == this.local) {\n    return this;\n  }\n\n  return local.length || children.length ? new DecorationSet(local, children) : empty;\n};\n\nDecorationSet.prototype.forChild = function forChild(offset, node) {\n  if (this == empty) {\n    return this;\n  }\n\n  if (node.isLeaf) {\n    return DecorationSet.empty;\n  }\n\n  var child, local;\n\n  for (var i = 0; i < this.children.length; i += 3) {\n    if (this.children[i] >= offset) {\n      if (this.children[i] == offset) {\n        child = this.children[i + 2];\n      }\n\n      break;\n    }\n  }\n\n  var start = offset + 1,\n      end = start + node.content.size;\n\n  for (var i$1 = 0; i$1 < this.local.length; i$1++) {\n    var dec = this.local[i$1];\n\n    if (dec.from < end && dec.to > start && dec.type instanceof InlineType) {\n      var from = Math.max(start, dec.from) - start,\n          to = Math.min(end, dec.to) - start;\n\n      if (from < to) {\n        (local || (local = [])).push(dec.copy(from, to));\n      }\n    }\n  }\n\n  if (local) {\n    var localSet = new DecorationSet(local.sort(byPos));\n    return child ? new DecorationGroup([localSet, child]) : localSet;\n  }\n\n  return child || empty;\n};\n\nDecorationSet.prototype.eq = function eq(other) {\n  if (this == other) {\n    return true;\n  }\n\n  if (!(other instanceof DecorationSet) || this.local.length != other.local.length || this.children.length != other.children.length) {\n    return false;\n  }\n\n  for (var i = 0; i < this.local.length; i++) {\n    if (!this.local[i].eq(other.local[i])) {\n      return false;\n    }\n  }\n\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3) {\n    if (this.children[i$1] != other.children[i$1] || this.children[i$1 + 1] != other.children[i$1 + 1] || !this.children[i$1 + 2].eq(other.children[i$1 + 2])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nDecorationSet.prototype.locals = function locals(node) {\n  return removeOverlap(this.localsInner(node));\n};\n\nDecorationSet.prototype.localsInner = function localsInner(node) {\n  if (this == empty) {\n    return none;\n  }\n\n  if (node.inlineContent || !this.local.some(InlineType.is)) {\n    return this.local;\n  }\n\n  var result = [];\n\n  for (var i = 0; i < this.local.length; i++) {\n    if (!(this.local[i].type instanceof InlineType)) {\n      result.push(this.local[i]);\n    }\n  }\n\n  return result;\n}; // DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n//\n//   map:: (Mapping, Node) → DecorationSource\n//   Map the set of decorations in response to a change in the\n//   document.\n\n\nvar empty = new DecorationSet(); // :: DecorationSet\n// The empty set of decorations.\n\nDecorationSet.empty = empty;\nDecorationSet.removeOverlap = removeOverlap; // :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\n\nvar DecorationGroup = function DecorationGroup(members) {\n  this.members = members;\n};\n\nDecorationGroup.prototype.map = function map(mapping, doc) {\n  var mappedDecos = this.members.map(function (member) {\n    return member.map(mapping, doc, noSpec);\n  });\n  return DecorationGroup.from(mappedDecos);\n};\n\nDecorationGroup.prototype.forChild = function forChild(offset, child) {\n  if (child.isLeaf) {\n    return DecorationSet.empty;\n  }\n\n  var found = [];\n\n  for (var i = 0; i < this.members.length; i++) {\n    var result = this.members[i].forChild(offset, child);\n\n    if (result == empty) {\n      continue;\n    }\n\n    if (result instanceof DecorationGroup) {\n      found = found.concat(result.members);\n    } else {\n      found.push(result);\n    }\n  }\n\n  return DecorationGroup.from(found);\n};\n\nDecorationGroup.prototype.eq = function eq(other) {\n  if (!(other instanceof DecorationGroup) || other.members.length != this.members.length) {\n    return false;\n  }\n\n  for (var i = 0; i < this.members.length; i++) {\n    if (!this.members[i].eq(other.members[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nDecorationGroup.prototype.locals = function locals(node) {\n  var result,\n      sorted = true;\n\n  for (var i = 0; i < this.members.length; i++) {\n    var locals = this.members[i].localsInner(node);\n\n    if (!locals.length) {\n      continue;\n    }\n\n    if (!result) {\n      result = locals;\n    } else {\n      if (sorted) {\n        result = result.slice();\n        sorted = false;\n      }\n\n      for (var j = 0; j < locals.length; j++) {\n        result.push(locals[j]);\n      }\n    }\n  }\n\n  return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n}; // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n// Create a group for the given array of decoration sets, or return\n// a single set when possible.\n\n\nDecorationGroup.from = function from(members) {\n  switch (members.length) {\n    case 0:\n      return empty;\n\n    case 1:\n      return members[0];\n\n    default:\n      return new DecorationGroup(members);\n  }\n};\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  var children = oldChildren.slice(); // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n\n  var shift = function (oldStart, oldEnd, newStart, newEnd) {\n    for (var i = 0; i < children.length; i += 3) {\n      var end = children[i + 1],\n          dSize = void 0;\n\n      if (end == -1 || oldStart > end + oldOffset) {\n        continue;\n      }\n\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1;\n      } else if (newStart >= offset && (dSize = newEnd - newStart - (oldEnd - oldStart))) {\n        children[i] += dSize;\n        children[i + 1] += dSize;\n      }\n    }\n  };\n\n  for (var i = 0; i < mapping.maps.length; i++) {\n    mapping.maps[i].forEach(shift);\n  } // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n\n\n  var mustRebuild = false;\n\n  for (var i$1 = 0; i$1 < children.length; i$1 += 3) {\n    if (children[i$1 + 1] == -1) {\n      // Touched nodes\n      var from = mapping.map(oldChildren[i$1] + oldOffset),\n          fromLocal = from - offset;\n\n      if (fromLocal < 0 || fromLocal >= node.content.size) {\n        mustRebuild = true;\n        continue;\n      } // Must read oldChildren because children was tagged with -1\n\n\n      var to = mapping.map(oldChildren[i$1 + 1] + oldOffset, -1),\n          toLocal = to - offset;\n      var ref = node.content.findIndex(fromLocal);\n      var index = ref.index;\n      var childOffset = ref.offset;\n      var childNode = node.maybeChild(index);\n\n      if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n        var mapped = children[i$1 + 2].mapInner(mapping, childNode, from + 1, oldChildren[i$1] + oldOffset + 1, options);\n\n        if (mapped != empty) {\n          children[i$1] = fromLocal;\n          children[i$1 + 1] = toLocal;\n          children[i$1 + 2] = mapped;\n        } else {\n          children[i$1 + 1] = -2;\n          mustRebuild = true;\n        }\n      } else {\n        mustRebuild = true;\n      }\n    }\n  } // Remaining children must be collected and rebuilt into the appropriate structure\n\n\n  if (mustRebuild) {\n    var decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping, offset, oldOffset, options);\n    var built = buildTree(decorations, node, 0, options);\n    newLocal = built.local;\n\n    for (var i$2 = 0; i$2 < children.length; i$2 += 3) {\n      if (children[i$2 + 1] < 0) {\n        children.splice(i$2, 3);\n        i$2 -= 3;\n      }\n    }\n\n    for (var i$3 = 0, j = 0; i$3 < built.children.length; i$3 += 3) {\n      var from$1 = built.children[i$3];\n\n      while (j < children.length && children[j] < from$1) {\n        j += 3;\n      }\n\n      children.splice(j, 0, built.children[i$3], built.children[i$3 + 1], built.children[i$3 + 2]);\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children);\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) {\n    return spans;\n  }\n\n  var result = [];\n\n  for (var i = 0; i < spans.length; i++) {\n    var span = spans[i];\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n  }\n\n  return result;\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (var i = 0; i < set.local.length; i++) {\n      var mapped = set.local[i].map(mapping, offset, oldOffset);\n\n      if (mapped) {\n        decorations.push(mapped);\n      } else if (options.onRemove) {\n        options.onRemove(set.local[i].spec);\n      }\n    }\n\n    for (var i$1 = 0; i$1 < set.children.length; i$1 += 3) {\n      gather(set.children[i$1 + 2], set.children[i$1] + oldOffset + 1);\n    }\n  }\n\n  for (var i = 0; i < children.length; i += 3) {\n    if (children[i + 1] == -1) {\n      gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    }\n  }\n\n  return decorations;\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) {\n    return null;\n  }\n\n  var end = offset + node.nodeSize,\n      found = null;\n\n  for (var i = 0, span = void 0; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      (found || (found = [])).push(span);\n      spans[i] = null;\n    }\n  }\n\n  return found;\n}\n\nfunction withoutNulls(array) {\n  var result = [];\n\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] != null) {\n      result.push(array[i]);\n    }\n  }\n\n  return result;\n} // : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\n\n\nfunction buildTree(spans, node, offset, options) {\n  var children = [],\n      hasNulls = false;\n  node.forEach(function (childNode, localStart) {\n    var found = takeSpansForNode(spans, childNode, localStart + offset);\n\n    if (found) {\n      hasNulls = true;\n      var subtree = buildTree(found, childNode, offset + localStart + 1, options);\n\n      if (subtree != empty) {\n        children.push(localStart, localStart + childNode.nodeSize, subtree);\n      }\n    }\n  });\n  var locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n\n  for (var i = 0; i < locals.length; i++) {\n    if (!locals[i].type.valid(node, locals[i])) {\n      if (options.onRemove) {\n        options.onRemove(locals[i].spec);\n      }\n\n      locals.splice(i--, 1);\n    }\n  }\n\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n} // : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\n\n\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to;\n} // : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\n\n\nfunction removeOverlap(spans) {\n  var working = spans;\n\n  for (var i = 0; i < working.length - 1; i++) {\n    var span = working[i];\n\n    if (span.from != span.to) {\n      for (var j = i + 1; j < working.length; j++) {\n        var next = working[j];\n\n        if (next.from == span.from) {\n          if (next.to != span.to) {\n            if (working == spans) {\n              working = spans.slice();\n            } // Followed by a partially overlapping larger span. Split that\n            // span.\n\n\n            working[j] = next.copy(next.from, span.to);\n            insertAhead(working, j + 1, next.copy(span.to, next.to));\n          }\n\n          continue;\n        } else {\n          if (next.from < span.to) {\n            if (working == spans) {\n              working = spans.slice();\n            } // The end of this one overlaps with a subsequent span. Split\n            // this one.\n\n\n            working[i] = span.copy(span.from, next.from);\n            insertAhead(working, j, span.copy(next.from, span.to));\n          }\n\n          break;\n        }\n      }\n    }\n  }\n\n  return working;\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) {\n    i++;\n  }\n\n  array.splice(i, 0, deco);\n} // : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\n\n\nfunction viewDecorations(view) {\n  var found = [];\n  view.someProp(\"decorations\", function (f) {\n    var result = f(view.state);\n\n    if (result && result != empty) {\n      found.push(result);\n    }\n  });\n\n  if (view.cursorWrapper) {\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n  }\n\n  return DecorationGroup.from(found);\n} // ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\n\n\nvar EditorView = function EditorView(place, props) {\n  this._props = props; // :: EditorState\n  // The view's current [state](#state.EditorState).\n\n  this.state = props.state;\n  this.directPlugins = props.plugins || [];\n  this.directPlugins.forEach(checkStateComponent);\n  this.dispatch = this.dispatch.bind(this);\n  this._root = null;\n  this.focused = false; // Kludge used to work around a Chrome bug\n\n  this.trackWrites = null; // :: dom.Element\n  // An editable DOM node containing the document. (You probably\n  // should not directly interfere with its content.)\n\n  this.dom = place && place.mount || document.createElement(\"div\");\n\n  if (place) {\n    if (place.appendChild) {\n      place.appendChild(this.dom);\n    } else if (place.apply) {\n      place(this.dom);\n    } else if (place.mount) {\n      this.mounted = true;\n    }\n  } // :: bool\n  // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n\n\n  this.editable = getEditable(this);\n  this.markCursor = null;\n  this.cursorWrapper = null;\n  updateCursorWrapper(this);\n  this.nodeViews = buildNodeViews(this);\n  this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n  this.lastSelectedViewDesc = null; // :: ?{slice: Slice, move: bool}\n  // When editor content is being dragged, this object contains\n  // information about the dragged slice and whether it is being\n  // copied or moved. At any other time, it is null.\n\n  this.dragging = null;\n  initInput(this);\n  this.prevDirectPlugins = [];\n  this.pluginViews = [];\n  this.updatePluginViews();\n};\n\nvar prototypeAccessors$2 = {\n  props: {\n    configurable: true\n  },\n  root: {\n    configurable: true\n  },\n  isDestroyed: {\n    configurable: true\n  }\n}; // composing:: boolean\n// Holds `true` when a\n// [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n// is active.\n// :: DirectEditorProps\n// The view's current [props](#view.EditorProps).\n\nprototypeAccessors$2.props.get = function () {\n  if (this._props.state != this.state) {\n    var prev = this._props;\n    this._props = {};\n\n    for (var name in prev) {\n      this._props[name] = prev[name];\n    }\n\n    this._props.state = this.state;\n  }\n\n  return this._props;\n}; // :: (DirectEditorProps)\n// Update the view's props. Will immediately cause an update to\n// the DOM.\n\n\nEditorView.prototype.update = function update(props) {\n  if (props.handleDOMEvents != this._props.handleDOMEvents) {\n    ensureListeners(this);\n  }\n\n  this._props = props;\n\n  if (props.plugins) {\n    props.plugins.forEach(checkStateComponent);\n    this.directPlugins = props.plugins;\n  }\n\n  this.updateStateInner(props.state, true);\n}; // :: (DirectEditorProps)\n// Update the view by updating existing props object with the object\n// given as argument. Equivalent to `view.update(Object.assign({},\n// view.props, props))`.\n\n\nEditorView.prototype.setProps = function setProps(props) {\n  var updated = {};\n\n  for (var name in this._props) {\n    updated[name] = this._props[name];\n  }\n\n  updated.state = this.state;\n\n  for (var name$1 in props) {\n    updated[name$1] = props[name$1];\n  }\n\n  this.update(updated);\n}; // :: (EditorState)\n// Update the editor's `state` prop, without touching any of the\n// other props.\n\n\nEditorView.prototype.updateState = function updateState(state) {\n  this.updateStateInner(state, this.state.plugins != state.plugins);\n};\n\nEditorView.prototype.updateStateInner = function updateStateInner(state, reconfigured) {\n  var this$1 = this;\n  var prev = this.state,\n      redraw = false,\n      updateSel = false; // When stored marks are added, stop composition, so that they can\n  // be displayed.\n\n  if (state.storedMarks && this.composing) {\n    clearComposition(this);\n    updateSel = true;\n  }\n\n  this.state = state;\n\n  if (reconfigured) {\n    var nodeViews = buildNodeViews(this);\n\n    if (changedNodeViews(nodeViews, this.nodeViews)) {\n      this.nodeViews = nodeViews;\n      redraw = true;\n    }\n\n    ensureListeners(this);\n  }\n\n  this.editable = getEditable(this);\n  updateCursorWrapper(this);\n  var innerDeco = viewDecorations(this),\n      outerDeco = computeDocDeco(this);\n  var scroll = reconfigured ? \"reset\" : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n  var updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n\n  if (updateDoc || !state.selection.eq(prev.selection)) {\n    updateSel = true;\n  }\n\n  var oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n\n  if (updateSel) {\n    this.domObserver.stop(); // Work around an issue in Chrome, IE, and Edge where changing\n    // the DOM around an active selection puts it into a broken\n    // state where the thing the user sees differs from the\n    // selection reported by the Selection object (#710, #973,\n    // #1011, #1013, #1035).\n\n    var forceSelUpdate = updateDoc && (result.ie || result.chrome) && !this.composing && !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n\n    if (updateDoc) {\n      // If the node that the selection points into is written to,\n      // Chrome sometimes starts misreporting the selection, so this\n      // tracks that and forces a selection reset when our update\n      // did write to the node.\n      var chromeKludge = result.chrome ? this.trackWrites = this.root.getSelection().focusNode : null;\n\n      if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n        this.docView.updateOuterDeco([]);\n        this.docView.destroy();\n        this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n      }\n\n      if (chromeKludge && !this.trackWrites) {\n        forceSelUpdate = true;\n      }\n    } // Work around for an issue where an update arriving right between\n    // a DOM selection change and the \"selectionchange\" event for it\n    // can cause a spurious DOM selection update, disrupting mouse\n    // drag selection.\n\n\n    if (forceSelUpdate || !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n      selectionToDOM(this, forceSelUpdate);\n    } else {\n      syncNodeSelection(this, state.selection);\n      this.domObserver.setCurSelection();\n    }\n\n    this.domObserver.start();\n  }\n\n  this.updatePluginViews(prev);\n\n  if (scroll == \"reset\") {\n    this.dom.scrollTop = 0;\n  } else if (scroll == \"to selection\") {\n    var startDOM = this.root.getSelection().focusNode;\n    if (this.someProp(\"handleScrollToSelection\", function (f) {\n      return f(this$1);\n    })) ; // Handled\n    else if (state.selection instanceof NodeSelection) {\n      scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM);\n    } else {\n      scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM);\n    }\n  } else if (oldScrollPos) {\n    resetScrollPos(oldScrollPos);\n  }\n};\n\nEditorView.prototype.destroyPluginViews = function destroyPluginViews() {\n  var view;\n\n  while (view = this.pluginViews.pop()) {\n    if (view.destroy) {\n      view.destroy();\n    }\n  }\n};\n\nEditorView.prototype.updatePluginViews = function updatePluginViews(prevState) {\n  if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n    this.prevDirectPlugins = this.directPlugins;\n    this.destroyPluginViews();\n\n    for (var i = 0; i < this.directPlugins.length; i++) {\n      var plugin = this.directPlugins[i];\n\n      if (plugin.spec.view) {\n        this.pluginViews.push(plugin.spec.view(this));\n      }\n    }\n\n    for (var i$1 = 0; i$1 < this.state.plugins.length; i$1++) {\n      var plugin$1 = this.state.plugins[i$1];\n\n      if (plugin$1.spec.view) {\n        this.pluginViews.push(plugin$1.spec.view(this));\n      }\n    }\n  } else {\n    for (var i$2 = 0; i$2 < this.pluginViews.length; i$2++) {\n      var pluginView = this.pluginViews[i$2];\n\n      if (pluginView.update) {\n        pluginView.update(this, prevState);\n      }\n    }\n  }\n}; // :: (string, ?(prop: *) → *) → *\n// Goes over the values of a prop, first those provided directly,\n// then those from plugins given to the view, then from plugins in\n// the state (in order), and calls `f` every time a non-undefined\n// value is found. When `f` returns a truthy value, that is\n// immediately returned. When `f` isn't provided, it is treated as\n// the identity function (the prop value is returned directly).\n\n\nEditorView.prototype.someProp = function someProp(propName, f) {\n  var prop = this._props && this._props[propName],\n      value;\n\n  if (prop != null && (value = f ? f(prop) : prop)) {\n    return value;\n  }\n\n  for (var i = 0; i < this.directPlugins.length; i++) {\n    var prop$1 = this.directPlugins[i].props[propName];\n\n    if (prop$1 != null && (value = f ? f(prop$1) : prop$1)) {\n      return value;\n    }\n  }\n\n  var plugins = this.state.plugins;\n\n  if (plugins) {\n    for (var i$1 = 0; i$1 < plugins.length; i$1++) {\n      var prop$2 = plugins[i$1].props[propName];\n\n      if (prop$2 != null && (value = f ? f(prop$2) : prop$2)) {\n        return value;\n      }\n    }\n  }\n}; // :: () → bool\n// Query whether the view has focus.\n\n\nEditorView.prototype.hasFocus = function hasFocus() {\n  return this.root.activeElement == this.dom;\n}; // :: ()\n// Focus the editor.\n\n\nEditorView.prototype.focus = function focus() {\n  this.domObserver.stop();\n\n  if (this.editable) {\n    focusPreventScroll(this.dom);\n  }\n\n  selectionToDOM(this);\n  this.domObserver.start();\n}; // :: union<dom.Document, dom.DocumentFragment>\n// Get the document root in which the editor exists. This will\n// usually be the top-level `document`, but might be a [shadow\n// DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n// root if the editor is inside one.\n\n\nprototypeAccessors$2.root.get = function () {\n  var cached = this._root;\n\n  if (cached == null) {\n    for (var search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || search.nodeType == 11 && search.host) {\n        if (!search.getSelection) {\n          Object.getPrototypeOf(search).getSelection = function () {\n            return document.getSelection();\n          };\n        }\n\n        return this._root = search;\n      }\n    }\n  }\n\n  return cached || document;\n}; // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n// Given a pair of viewport coordinates, return the document\n// position that corresponds to them. May return null if the given\n// coordinates aren't inside of the editor. When an object is\n// returned, its `pos` property is the position nearest to the\n// coordinates, and its `inside` property holds the position of the\n// inner node that the position falls inside of, or -1 if it is at\n// the top level, not in any node.\n\n\nEditorView.prototype.posAtCoords = function posAtCoords$1(coords) {\n  return posAtCoords(this, coords);\n}; // :: (number, number) → {left: number, right: number, top: number, bottom: number}\n// Returns the viewport rectangle at a given document position.\n// `left` and `right` will be the same number, as this returns a\n// flat cursor-ish rectangle. If the position is between two things\n// that aren't directly adjacent, `side` determines which element is\n// used. When < 0, the element before the position is used,\n// otherwise the element after.\n\n\nEditorView.prototype.coordsAtPos = function coordsAtPos$1(pos, side) {\n  if (side === void 0) side = 1;\n  return coordsAtPos(this, pos, side);\n}; // :: (number, number) → {node: dom.Node, offset: number}\n// Find the DOM position that corresponds to the given document\n// position. When `side` is negative, find the position as close as\n// possible to the content before the position. When positive,\n// prefer positions close to the content after the position. When\n// zero, prefer as shallow a position as possible.\n//\n// Note that you should **not** mutate the editor's internal DOM,\n// only inspect it (and even that is usually not necessary).\n\n\nEditorView.prototype.domAtPos = function domAtPos(pos, side) {\n  if (side === void 0) side = 0;\n  return this.docView.domFromPos(pos, side);\n}; // :: (number) → ?dom.Node\n// Find the DOM node that represents the document node after the\n// given position. May return `null` when the position doesn't point\n// in front of a node or if the node is inside an opaque node view.\n//\n// This is intended to be able to call things like\n// `getBoundingClientRect` on that DOM node. Do **not** mutate the\n// editor DOM directly, or add styling this way, since that will be\n// immediately overriden by the editor as it redraws the node.\n\n\nEditorView.prototype.nodeDOM = function nodeDOM(pos) {\n  var desc = this.docView.descAt(pos);\n  return desc ? desc.nodeDOM : null;\n}; // :: (dom.Node, number, ?number) → number\n// Find the document position that corresponds to a given DOM\n// position. (Whenever possible, it is preferable to inspect the\n// document structure directly, rather than poking around in the\n// DOM, but sometimes—for example when interpreting an event\n// target—you don't have a choice.)\n//\n// The `bias` parameter can be used to influence which side of a DOM\n// node to use when the position is inside a leaf node.\n\n\nEditorView.prototype.posAtDOM = function posAtDOM(node, offset, bias) {\n  if (bias === void 0) bias = -1;\n  var pos = this.docView.posFromDOM(node, offset, bias);\n\n  if (pos == null) {\n    throw new RangeError(\"DOM position not inside the editor\");\n  }\n\n  return pos;\n}; // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n// Find out whether the selection is at the end of a textblock when\n// moving in a given direction. When, for example, given `\"left\"`,\n// it will return true if moving left from the current cursor\n// position would leave that position's parent textblock. Will apply\n// to the view's current state by default, but it is possible to\n// pass a different state.\n\n\nEditorView.prototype.endOfTextblock = function endOfTextblock$1(dir, state) {\n  return endOfTextblock(this, state || this.state, dir);\n}; // :: ()\n// Removes the editor from the DOM and destroys all [node\n// views](#view.NodeView).\n\n\nEditorView.prototype.destroy = function destroy() {\n  if (!this.docView) {\n    return;\n  }\n\n  destroyInput(this);\n  this.destroyPluginViews();\n\n  if (this.mounted) {\n    this.docView.update(this.state.doc, [], viewDecorations(this), this);\n    this.dom.textContent = \"\";\n  } else if (this.dom.parentNode) {\n    this.dom.parentNode.removeChild(this.dom);\n  }\n\n  this.docView.destroy();\n  this.docView = null;\n}; // :: boolean\n// This is true when the view has been\n// [destroyed](#view.EditorView.destroy) (and thus should not be\n// used anymore).\n\n\nprototypeAccessors$2.isDestroyed.get = function () {\n  return this.docView == null;\n}; // Used for testing.\n\n\nEditorView.prototype.dispatchEvent = function dispatchEvent$1(event) {\n  return dispatchEvent(this, event);\n}; // :: (Transaction)\n// Dispatch a transaction. Will call\n// [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n// when given, and otherwise defaults to applying the transaction to\n// the current state and calling\n// [`updateState`](#view.EditorView.updateState) with the result.\n// This method is bound to the view instance, so that it can be\n// easily passed around.\n\n\nEditorView.prototype.dispatch = function dispatch(tr) {\n  var dispatchTransaction = this._props.dispatchTransaction;\n\n  if (dispatchTransaction) {\n    dispatchTransaction.call(this, tr);\n  } else {\n    this.updateState(this.state.apply(tr));\n  }\n};\n\nObject.defineProperties(EditorView.prototype, prototypeAccessors$2);\n\nfunction computeDocDeco(view) {\n  var attrs = Object.create(null);\n  attrs.class = \"ProseMirror\";\n  attrs.contenteditable = String(view.editable);\n  attrs.translate = \"no\";\n  view.someProp(\"attributes\", function (value) {\n    if (typeof value == \"function\") {\n      value = value(view.state);\n    }\n\n    if (value) {\n      for (var attr in value) {\n        if (attr == \"class\") {\n          attrs.class += \" \" + value[attr];\n        }\n\n        if (attr == \"style\") {\n          attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n        } else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\") {\n          attrs[attr] = String(value[attr]);\n        }\n      }\n    }\n  });\n  return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    var dom = document.createElement(\"img\");\n    dom.className = \"ProseMirror-separator\";\n    dom.setAttribute(\"mark-placeholder\", \"true\");\n    view.cursorWrapper = {\n      dom: dom,\n      deco: Decoration.widget(view.state.selection.head, dom, {\n        raw: true,\n        marks: view.markCursor\n      })\n    };\n  } else {\n    view.cursorWrapper = null;\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", function (value) {\n    return value(view.state) === false;\n  });\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  var depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\n\nfunction buildNodeViews(view) {\n  var result = {};\n  view.someProp(\"nodeViews\", function (obj) {\n    for (var prop in obj) {\n      if (!Object.prototype.hasOwnProperty.call(result, prop)) {\n        result[prop] = obj[prop];\n      }\n    }\n  });\n  return result;\n}\n\nfunction changedNodeViews(a, b) {\n  var nA = 0,\n      nB = 0;\n\n  for (var prop in a) {\n    if (a[prop] != b[prop]) {\n      return true;\n    }\n\n    nA++;\n  }\n\n  for (var _ in b) {\n    nB++;\n  }\n\n  return nA != nB;\n}\n\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction) {\n    throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n  }\n} // EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   plugins:: [Plugin]\n//   A set of plugins to use in the view, applying their [plugin\n//   view](#state.PluginSpec.view) and\n//   [props](#state.PluginSpec.props). Passing plugins with a state\n//   component (a [state field](#state.PluginSpec.state) field or a\n//   [transaction](#state.PluginSpec.filterTransaction) filter or\n//   appender) will result in an error, since such plugins must be\n//   present in the state to work.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n\n\nexport { Decoration, DecorationSet, EditorView, endComposition as __endComposition, parseFromClipboard as __parseFromClipboard, serializeForClipboard as __serializeForClipboard };","map":{"version":3,"sources":["../src/browser.js","../src/dom.js","../src/domcoords.js","../src/viewdesc.js","../src/selection.js","../src/capturekeys.js","../src/domchange.js","../src/clipboard.js","../src/domobserver.js","../src/input.js","../src/decoration.js","../src/index.js"],"names":["const","let","browser","pos","box","before","after","target","desc","search","prev","enter","j","offset","super","this","name","i","child","next","anchor","tr","sel","text","move","node","d","result","p","prototypeAccessors","span","from","plugin","prop"],"mappings":"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Y,EAAE,GAAG,CAAjBA;;AACA,OAAKA,IAAI,IAAT,IAAiB,CAAjB,EAAoB;AAClB,QAAI,CAAC,CAAC,IAAD,CAAD,IAAW,CAAC,CAAC,IAAD,CAAhB,EAAsB;AAAE,aAAO,IAAP;AAAW;;AACnC,IAAA,EAAE;AACH;;AACD,OAAKA,IAAI,CAAT,IAAc,CAAd,EAAe;AAAE,IAAA,EAAE;AAAE;;AACrB,SAAO,EAAE,IAAI,EAAb;AACD;;AAED,SAAS,mBAAT,CAA6B,MAA7B,EAAqC;AACnC,MAAI,MAAM,CAAC,IAAP,CAAY,KAAZ,IAAqB,MAAM,CAAC,IAAP,CAAY,iBAAjC,IAAsD,MAAM,CAAC,IAAP,CAAY,iBAAtE,EACF;AAAI,UAAM,IAAI,UAAJ,CAAe,qEAAf,CAAN;AAA2F;AAC9F,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor)\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2)\n  result.mac = result.ios || /Mac/.test(navigator.platform)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.assignedSlot || node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nlet reusedRange = null\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nexport const textRange = function(node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange())\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n","import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = (rect.width / node.offsetWidth) || 1\n  let scaleY = (rect.height / node.offsetHeight) || 1\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let doc = view.dom.ownerDocument, node, offset\n  if (doc.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = doc.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && doc.caretRangeFromPoint) {\n    let range = doc.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari) {\n    for (let p = elt; node && p; p = parentNode(p))\n      if (p.draggable) node = offset = null\n  }\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos, side) {\n  let {node, offset} = view.docView.domFromPos(pos, side < 0 ? -1 : 1)\n\n  let supportEmptyRange = browser.webkit || browser.gecko\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side)\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n          if (rectAfter.top != rect.top)\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n        }\n      }\n      return rect\n    } else {\n      let from = offset, to = offset, takeSide = side < 0 ? 1 : -1\n      if (side < 0 && !offset) { to++; takeSide = -1 }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1 }\n      else if (side < 0) { from-- }\n      else { to ++ }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false)\n    }\n    if (offset < nodeSize(node)) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true)\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1]\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null\n    if (target) return flattenV(singleRect(target, 1), false)\n  }\n  if (offset < nodeSize(node)) {\n    let after = node.childNodes[offset]\n    while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords) after = after.nextSibling\n    let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n        : after.nodeType == 1 ? after : null\n    if (target) return flattenV(singleRect(target, -1), true)\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$from : sel.$to\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top + 1 &&\n            (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n             : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = view.root.getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack(_nodeName) { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM)\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number, number) → {node: dom.Node, offset: number}\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    // First find the position in the child array\n    let i = 0, offset = 0\n    for (let curPos = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = curPos + child.size\n      if (end > pos || child instanceof TrailingHackViewDesc) { offset = pos - curPos; break }\n      curPos = end\n    }\n    // If this points into the middle of a child, call through\n    if (offset) return this.children[i].domFromPos(offset - this.children[i].border, side)\n    // Go back if there were any zero-length widgets with side >= 0 before this point\n    for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.widget.type.side >= 0; i--) {}\n    // Scan towards the first useable node\n    if (side <= 0) {\n      let prev, enter = true\n      for (;; i--, enter = false) {\n        prev = i ? this.children[i - 1] : null\n        if (!prev || prev.dom.parentNode == this.contentDOM) break\n      }\n      if (prev && side && enter && !prev.border && !prev.domAtom) return prev.domFromPos(prev.size, side)\n      return {node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0}\n    } else {\n      let next, enter = true\n      for (;; i++, enter = false) {\n        next = i < this.children.length ? this.children[i] : null\n        if (!next || next.dom.parentNode == this.contentDOM) break\n      }\n      if (next && enter && !next.border && !next.domAtom) return next.domFromPos(0, side)\n      return {node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length}\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos, 0)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1)\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let {node, offset} = anchorDOM\n      if (node.nodeType == 3) {\n        brKludge = offset && node.nodeValue[offset - 1] == \"\\n\"\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length) {\n          for (let scan = node, after; scan; scan = scan.parentNode) {\n            if (after = scan.nextSibling) {\n              if (after.nodeName == \"BR\")\n                anchorDOM = headDOM = {node: after.parentNode, offset: domIndex(after) + 1}\n              break\n            }\n            let desc = scan.pmViewDesc\n            if (desc && desc.node && desc.node.isBlock) break\n          }\n        }\n      } else {\n        let prev = node.childNodes[offset - 1]\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n      }\n    }\n    // Firefox can act strangely when the selection is in front of an\n    // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n    if (browser.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n      let after = domSel.focusNode.childNodes[domSel.focusOffset]\n      if (after && after.contentEditable == \"false\") force = true\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM ? CONTENT_DIRTY : NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n\n  get domAtom() { return false }\n\n  get ignoreForCoords() { return false }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n\n  destroy() {\n    this.widget.type.destroy(this.dom)\n    super.destroy()\n  }\n\n  get domAtom() { return true }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco, innerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.whitespace == \"pre\") rule.preserveWhitespace = \"full\"\n    if (this.contentDOM && !this.contentLost) rule.contentElement = this.contentDOM\n    else rule.getContent = () => this.contentDOM ? Fragment.empty : this.node.content\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = view.composing && this.localCompositionInfo(view, pos)\n    let localComposition = composition && composition.pos > -1 ? composition : null\n    let compositionInChild = composition && composition.pos < 0\n    let updater = new ViewTreeUpdater(this, localComposition && localComposition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Try several strategies for drawing this node\n      let compIndex\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) {\n        // Found precise match with existing node view\n      } else if (compositionInChild && view.state.selection.from > off &&\n                 view.state.selection.to < off + child.nodeSize &&\n                 (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                 updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) {\n        // Updated the specific node that holds the composition\n      } else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) {\n        // Could update an existing node to reflect this node\n      } else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      }\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) this.protectLocalComposition(view, localComposition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionInfo(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      let text = textNode.nodeValue\n      let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n      return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n    } else {\n      return {node: textNode, pos: -1}\n    }\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n\n  get domAtom() { return this.node.isAtom }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n      this.dirty = NODE_DIRTY\n  }\n\n  get domAtom() { return false }\n}\n\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName }\n  get domAtom() { return true }\n  get ignoreForCoords() { return this.dom.nodeName == \"IMG\" }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(top = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val\n      else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") top[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n    if (dom.classList.length == 0)\n      dom.removeAttribute(\"class\")\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatch = preMatch(top.node.content, top)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let found = -1, targetDesc\n    if (index >= this.preMatch.index &&\n        (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n        targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n      found = this.top.children.indexOf(targetDesc, this.index)\n    } else {\n      for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n        let child = this.top.children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  updateNodeAt(node, outerDeco, innerDeco, index, view) {\n    let child = this.top.children[index]\n    if (!child.update(node, outerDeco, innerDeco, view)) return false\n    this.destroyBetween(this.index, index)\n    this.index = index + 1\n    return true\n  }\n\n  findIndexWithChild(domNode) {\n    for (;;) {\n      let parent = domNode.parentNode\n      if (!parent) return -1\n      if (parent == this.top.contentDOM) {\n        let desc = domNode.pmViewDesc\n        if (desc) for (let i = this.index; i < this.top.children.length; i++) {\n          if (this.top.children[i] == desc) return i\n        }\n        return -1\n      }\n      domNode = parent\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next)\n        if (preMatch != null && preMatch != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n      if ((browser.safari || browser.chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n        this.addHackNode(\"IMG\")\n      this.addHackNode(\"BR\")\n    }\n  }\n\n  addHackNode(nodeName) {\n    if (this.index < this.top.children.length && this.top.children[this.index].matchesHack(nodeName)) {\n      this.index++\n    } else {\n      let dom = document.createElement(nodeName)\n      if (nodeName == \"IMG\") dom.className = \"ProseMirror-separator\"\n      if (nodeName == \"BR\") dom.className = \"ProseMirror-trailingBreak\"\n      this.top.children.splice(this.index++, 0, new TrailingHackViewDesc(this.top, nothing, dom, null))\n      this.changed = true\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>, matches: ViewDesc[]}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n  let curDesc = parentDesc, descI = curDesc.children.length\n  let fI = frag.childCount, matched = new Map, matches = []\n  outer: while (fI > 0) {\n    let desc\n    for (;;) {\n      if (descI) {\n        let next = curDesc.children[descI - 1]\n        if (next instanceof MarkViewDesc) {\n          curDesc = next\n          descI = next.children.length\n        } else {\n          desc = next\n          descI--\n          break\n        }\n      } else if (curDesc == parentDesc) {\n        break outer\n      } else {\n        // FIXME\n        descI = curDesc.parent.children.indexOf(curDesc)\n        curDesc = curDesc.parent\n      }\n    }\n    let node = desc.node\n    if (!node) continue\n    if (node != frag.child(fI - 1)) break\n    --fI\n    matched.set(desc, fI)\n    matches.push(desc)\n  }\n  return {index: fI, matched, matches: matches.reverse()}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from && childStart < to) {\n      let found = str.lastIndexOf(text, to - childStart - 1)\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n","import {TextSelection, NodeSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {selectionCollapsed, isEquivalentPosition, domIndex, isOnEdge} from \"./dom\"\n\nexport function selectionFromDOM(view, origin) {\n  let domSel = view.root.getSelection(), doc = view.state.doc\n  if (!domSel.focusNode) return null\n  let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n  if (head < 0) return null\n  let $head = doc.resolve(head), $anchor, selection\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head\n    while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      let pos = nearestDesc.posBefore\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos))\n    }\n  } else {\n    let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n    if (anchor < 0) return null\n    $anchor = doc.resolve(anchor)\n  }\n\n  if (!selection) {\n    let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1\n    selection = selectionBetween(view, $anchor, $head, bias)\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nexport function selectionToDOM(view, force) {\n  let sel = view.state.selection\n  syncNodeSelection(view, sel)\n\n  if (!editorOwnsSelection(view)) return\n\n  if (!force && view.mouseDown && view.mouseDown.allowDefault) {\n    let domSel = view.root.getSelection(), curSel = view.domObserver.currentSelection\n    if (domSel.anchorNode && isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset,\n                                                  curSel.anchorNode, curSel.anchorOffset)) {\n      view.mouseDown.delayedSelectionSync = true\n      view.domObserver.setCurSelection()\n      return\n    }\n  }\n\n  view.domObserver.disconnectSelection()\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view)\n  } else {\n    let {anchor, head} = sel, resetEditableFrom, resetEditableTo\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        resetEditableFrom = temporarilyEditableNear(view, sel.from)\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        resetEditableTo = temporarilyEditableNear(view, sel.to)\n    }\n    view.docView.setSelection(anchor, head, view.root, force)\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) resetEditable(resetEditableFrom)\n      if (resetEditableTo) resetEditable(resetEditableTo)\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\")\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view)\n    }\n  }\n\n  view.domObserver.setCurSelection()\n  view.domObserver.connectSelection()\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nconst brokenSelectBetweenUneditable = browser.safari || browser.chrome && browser.chrome_version < 63\n\nfunction temporarilyEditableNear(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos, 0)\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null\n  let before = offset ? node.childNodes[offset - 1] : null\n  if (browser.safari && after && after.contentEditable == \"false\") return setEditable(after)\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) return setEditable(after)\n    else if (before) return setEditable(before)\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\"\n  if (browser.safari && element.draggable) { element.draggable = false; element.wasDraggable = true }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\"\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n  let domSel = view.root.getSelection()\n  let node = domSel.anchorNode, offset = domSel.anchorOffset\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n      setTimeout(() => {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          view.dom.classList.remove(\"ProseMirror-hideselection\")\n      }, 20)\n    }\n  })\n}\n\nfunction selectCursorWrapper(view) {\n  let domSel = view.root.getSelection(), range = document.createRange()\n  let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\"\n  if (img) range.setEnd(node.parentNode, domIndex(node) + 1)\n  else range.setEnd(node, 0)\n  range.collapse(false)\n  domSel.removeAllRanges()\n  domSel.addRange(range)\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && browser.ie && browser.ie_version <= 11) {\n    node.disabled = true\n    node.disabled = false\n  }\n}\n\nexport function syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from)\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view)\n      if (desc) desc.selectNode()\n      view.lastSelectedViewDesc = desc\n    }\n  } else {\n    clearNodeSelection(view)\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      view.lastSelectedViewDesc.deselectNode()\n    view.lastSelectedViewDesc = null\n  }\n}\n\nexport function selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n    || TextSelection.between($anchor, $head, bias)\n}\n\nexport function hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) return false\n  return hasSelection(view)\n}\n\nexport function hasSelection(view) {\n  let sel = view.root.getSelection()\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nexport function anchorInRightPlace(view) {\n  let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0)\n  let domSel = view.root.getSelection()\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n","import {Selection, NodeSelection, TextSelection, AllSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir)\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (browser.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    let text = view.cursorWrapper.deco.type.toDOM.nextSibling\n    let size = text && text.nodeValue ? text.nodeValue.length : 1\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size}\n  }\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else if ((browser.ios && view.lastIOSEnter > Date.now() - 225 || browser.android) &&\n               addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n               view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n      view.lastIOSEnter = 0\n      return\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (browser.chrome && browser.android && change.toB == change.from)\n    view.lastAndroidDelete = Date.now()\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                 (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\nimport browser from \"./browser\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n      if (needsWrap[i] != \"tbody\") {\n        openStart++\n        openEnd++\n      }\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      let marks = $context.marks()\n      let {schema} = view.state, serializer = DOMSerializer.fromSchema(schema)\n      dom = document.createElement(\"div\")\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        let p = dom.appendChild(document.createElement(\"p\"))\n        if (block) p.appendChild(serializer.serializeNode(schema.text(block, marks)))\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n    if (browser.webkit) restoreReplacedSpaces(dom)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {\n      preserveWhitespace: !!(asText || sliceData),\n      context: $context,\n      ruleFromNode(dom) {\n        if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n            dom.parentNode && !inlineParents.test(dom.parentNode.nodeName)) return {ignore: true}\n      }\n    })\n  }\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  } else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true)\n    if (slice.openStart || slice.openEnd) {\n      let openStart = 0, openEnd = 0\n      for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating;\n           openStart++, node = node.firstChild) {}\n      for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating;\n           openEnd++, node = node.lastChild) {}\n      slice = closeSlice(slice, openStart, openEnd)\n    }\n  }\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /^(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n  elt.innerHTML = html\n  if (wrap) for (let i = 0; i < wrap.length; i++) elt = elt.querySelector(wrap[i]) || elt\n  return elt\n}\n\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n  let nodes = dom.querySelectorAll(browser.chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\")\n  for (let i = 0; i < nodes.length; i++) {\n    let node = nodes[i]\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n      node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node)\n  }\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n","import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, hasSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n      this.currentSelection.set(sel)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n        return {from: desc.posBefore, to: desc.posAfter}\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n  view.lastAndroidDelete = 0\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // Suppress enter key events on Chrome Android, because those tend\n  // to be part of a confused sequence of composition events fired,\n  // and handling them eagerly tends to corrupt the input.\n  if (browser.android && browser.chrome && event.keyCode == 13) return\n  if (event.keyCode != 229) view.domObserver.forceFlush()\n\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside, event)\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) return false\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) view.mouseDown.done()\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"pointer\")\n  }\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n    this.delayedSelectionSync = false\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    let {selection} = view.state\n    if (event.button == 0 &&\n        targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => {\n          if (this.view.mouseDown == this) this.target.setAttribute(\"contentEditable\", \"false\")\n        }, 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    if (this.delayedSelectionSync) setTimeout(() => selectionToDOM(this.view))\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (event.button == 0 &&\n               (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                 Math.min(Math.abs(pos.pos - this.view.state.selection.from),\n                          Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n    if (event.buttons == 0) this.done()\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = timestampFromCustomEvent()\n  }\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nfunction timestampFromCustomEvent() {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"event\", true, true)\n  return event.timeStamp\n}\n\nexport function endComposition(view, forceUpdate) {\n  if (browser.android && view.domObserver.flushingSoon >= 0) return\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty))) return true\n  if (!slice) return false\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  // Handling paste from JavaScript during composition is very poorly\n  // handled by browsers, so as a dodgy but preferable kludge, we just\n  // let the browser do its native thing there, except on Android,\n  // where the editor is almost always composing.\n  if (view.composing && !browser.android) return\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) e.preventDefault()\n  else capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (desc && desc.node.type.spec.draggable && desc != view.docView)\n      view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\"\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  let dragging = view.dragging\n  window.setTimeout(() => {\n    if (view.dragging == dragging)  view.dragging = null\n  }, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice\n  if (slice) {\n    view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                               brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  }\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = (view, e) => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    if (e.relatedTarget && view.dom.contains(e.relatedTarget))\n      view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    view.domObserver.flushSoon()\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n\n  destroy(node) {\n    if (this.spec.destroy) this.spec.destroy(node)\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from), child\n    return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in—those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable—if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  //\n  //     destroy:: ?(node: dom.Node)\n  //     Called when the widget decoration is removed as a result of\n  //     mapping\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1)\n\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n//\n//   map:: (Mapping, Node) → DecorationSource\n//   Map the set of decorations in response to a change in the\n//   document.\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  map(mapping, doc) {\n    const mappedDecos = this.members.map(\n      member => member.map(mapping, doc, noSpec)\n    )\n    return DecorationGroup.from(mappedDecos)\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n","import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.directPlugins = props.plugins || []\n    this.directPlugins.forEach(checkStateComponent)\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.prevDirectPlugins = []\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    if (props.plugins) {\n      props.plugins.forEach(checkStateComponent)\n      this.directPlugins = props.plugins\n    }\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n      this.prevDirectPlugins = this.directPlugins\n      this.destroyPluginViews()\n      for (let i = 0; i < this.directPlugins.length; i++) {\n        let plugin = this.directPlugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins given to the view, then from plugins in\n  // the state (in order), and calls `f` every time a non-undefined\n  // value is found. When `f` returns a truthy value, that is\n  // immediately returned. When `f` isn't provided, it is treated as\n  // the identity function (the prop value is returned directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    for (let i = 0; i < this.directPlugins.length; i++) {\n      let prop = this.directPlugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number, number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position.\n  // `left` and `right` will be the same number, as this returns a\n  // flat cursor-ish rectangle. If the position is between two things\n  // that aren't directly adjacent, `side` determines which element is\n  // used. When < 0, the element before the position is used,\n  // otherwise the element after.\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side)\n  }\n\n  // :: (number, number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. When `side` is negative, find the position as close as\n  // possible to the content before the position. When positive,\n  // prefer positions close to the content after the position. When\n  // zero, prefer as shallow a position as possible.\n  //\n  // Note that you should **not** mutate the editor's internal DOM,\n  // only inspect it (and even that is usually not necessary).\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side)\n  }\n\n  // :: (number) → ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) → number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes—for example when interpreting an event\n  // target—you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // :: boolean\n  // This is true when the view has been\n  // [destroyed](#view.EditorView.destroy) (and thus should not be\n  // used anymore).\n  get isDestroyed() {\n    return this.docView == null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n  attrs.translate = \"no\"\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      if (attr == \"style\") {\n        attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr]\n      }\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.className = \"ProseMirror-separator\"\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n    throw new RangeError(\"Plugins passed directly to the view must not have a state component\")\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   plugins:: [Plugin]\n//   A set of plugins to use in the view, applying their [plugin\n//   view](#state.PluginSpec.view) and\n//   [props](#state.PluginSpec.props). Passing plugins with a state\n//   component (a [state field](#state.PluginSpec.state) field or a\n//   [transaction](#state.PluginSpec.filterTransaction) filter or\n//   appender) will result in an error, since such plugins must be\n//   present in the state to work.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n"]},"metadata":{},"sourceType":"module"}