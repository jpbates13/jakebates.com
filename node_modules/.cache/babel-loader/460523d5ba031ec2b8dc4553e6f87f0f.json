{"ast":null,"code":"var _jsxFileName = \"/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Image from \"@tiptap/extension-image\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { Timestamp } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const titleRef = useRef();\n  const tagRef = useRef();\n  const location = useLocation();\n  const post = location.state.post;\n  const docuemntRef = doc(db, \"posts\", post.id);\n\n  function addImage() {\n    const url = window.prompt(\"URL\");\n\n    if (url) {\n      editor.chain().focus().setImage({\n        src: url\n      }).run();\n    }\n  }\n\n  let editor = useEditor({\n    extensions: [StarterKit, Image],\n    content: post.body\n  });\n\n  async function submitPost(title, body, tags) {\n    await updateDoc(docuemntRef, {\n      body: body,\n      tags: tags,\n      title: title,\n      updatedDate: Timestamp.now()\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(titleRef.current.value, editor.getHTML(), tagRef.current.value);\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      defaultValue: post.title,\n      ref: titleRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      placeholder: \"Enter some tags...\",\n      defaultValue: post.tags,\n      ref: tagRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: loading,\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"hQFIj/bSuVsUCErpn8KK4HGcNLc=\", false, function () {\n  return [useNavigate, useLocation, useEditor];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/jakebates/Dropbox/Github/jakebates.com/src/components/EditPost.js"],"names":["React","useRef","useState","useEffect","Editor","useEditor","EditorContent","StarterKit","Image","useNavigate","db","Timestamp","Form","Button","doc","updateDoc","useLocation","EditPost","props","error","setError","loading","setLoading","navigate","titleRef","tagRef","location","post","state","docuemntRef","id","addImage","url","window","prompt","editor","chain","focus","setImage","src","run","extensions","content","body","submitPost","title","tags","updatedDate","now","catch","err","console","log","handlePost","e","preventDefault","current","value","getHTML"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Image from \"@tiptap/extension-image\";\nimport { useNavigate } from \"react-router\";\nimport db from \"../firebase\";\nimport { Timestamp } from \"firebase/firestore\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const titleRef = useRef();\n  const tagRef = useRef();\n\n  const location = useLocation();\n  const post = location.state.post;\n  const docuemntRef = doc(db, \"posts\", post.id);\n\n  function addImage() {\n    const url = window.prompt(\"URL\");\n    if (url) {\n      editor.chain().focus().setImage({ src: url }).run();\n    }\n  }\n\n  let editor = useEditor({\n    extensions: [StarterKit, Image],\n    content: post.body,\n  });\n\n  async function submitPost(title, body, tags) {\n    await updateDoc(docuemntRef, {\n      body: body,\n      tags: tags,\n      title: title,\n      updatedDate: Timestamp.now(),\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  async function handlePost(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await submitPost(\n        titleRef.current.value,\n        editor.getHTML(),\n        tagRef.current.value\n      );\n      navigate(\"/blog\");\n    } catch {\n      setError(\"Failed to submit post\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <h2>Edit Post</h2>\n      <Form.Control defaultValue={post.title} ref={titleRef} type=\"text\" />\n      <br />\n      <Form.Control\n        placeholder=\"Enter some tags...\"\n        defaultValue={post.tags}\n        ref={tagRef}\n        type=\"text\"\n      />\n      <br />\n      <Editor editor={editor} />\n      <br />\n      <Button disabled={loading} onClick={handlePost}>\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}